Search.setIndex({"docnames": ["_autosummary/seldonian", "_autosummary/seldonian.RL", "_autosummary/seldonian.RL.Agents", "_autosummary/seldonian.RL.Agents.Agent", "_autosummary/seldonian.RL.Agents.Agent.Agent", "_autosummary/seldonian.RL.Agents.Bases", "_autosummary/seldonian.RL.Agents.Bases.Fourier", "_autosummary/seldonian.RL.Agents.Bases.Fourier.Fourier", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent", "_autosummary/seldonian.RL.Agents.Function_Approximators", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Q_Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent", "_autosummary/seldonian.RL.Agents.Policies", "_autosummary/seldonian.RL.Agents.Policies.Policy", "_autosummary/seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy", "_autosummary/seldonian.RL.Agents.Policies.Policy.Policy", "_autosummary/seldonian.RL.Agents.Policies.Softmax", "_autosummary/seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax", "_autosummary/seldonian.RL.Agents.Policies.Softmax.Softmax", "_autosummary/seldonian.RL.Agents.keyboard_gridworld", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution", "_autosummary/seldonian.RL.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description.check_space_type", "_autosummary/seldonian.RL.Env_Description.Spaces", "_autosummary/seldonian.RL.Env_Description.Spaces.Continuous_Space", "_autosummary/seldonian.RL.Env_Description.Spaces.Discrete_Space", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.main", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info", "_autosummary/seldonian.RL.RL_model", "_autosummary/seldonian.RL.RL_model.RL_model", "_autosummary/seldonian.RL.RL_runner", "_autosummary/seldonian.RL.RL_runner.create_agent", "_autosummary/seldonian.RL.RL_runner.run_all_trials", "_autosummary/seldonian.RL.RL_runner.run_episode", "_autosummary/seldonian.RL.RL_runner.run_episode_from_dict", "_autosummary/seldonian.RL.RL_runner.run_trial", "_autosummary/seldonian.RL.RL_runner.run_trial_given_agent_and_env", "_autosummary/seldonian.RL.environments", "_autosummary/seldonian.RL.environments.Environment", "_autosummary/seldonian.RL.environments.Environment.Environment", "_autosummary/seldonian.RL.environments.gridworld", "_autosummary/seldonian.RL.environments.gridworld.Gridworld", "_autosummary/seldonian.RL.environments.mountaincar", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar", "_autosummary/seldonian.RL.environments.n_step_mountaincar", "_autosummary/seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar", "_autosummary/seldonian.RL.environments.simglucose_env", "_autosummary/seldonian.RL.environments.simglucose_env.Simglucose", "_autosummary/seldonian.RL.generate_gridworld_episodes", "_autosummary/seldonian.RL.generate_gridworld_episodes.main", "_autosummary/seldonian.RL.generate_mountaincar_episodes", "_autosummary/seldonian.RL.generate_mountaincar_episodes.main", "_autosummary/seldonian.RL.generate_simglucose_episodes", "_autosummary/seldonian.RL.generate_simglucose_episodes.get_max_obs", "_autosummary/seldonian.RL.generate_simglucose_episodes.main", "_autosummary/seldonian.RL.hyperparams_and_settings", "_autosummary/seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict", "_autosummary/seldonian.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection", "_autosummary/seldonian.dataset", "_autosummary/seldonian.dataset.DataSet", "_autosummary/seldonian.dataset.DataSetLoader", "_autosummary/seldonian.dataset.Episode", "_autosummary/seldonian.dataset.RLDataSet", "_autosummary/seldonian.dataset.SupervisedDataSet", "_autosummary/seldonian.dataset.load_supervised_metadata", "_autosummary/seldonian.hyperparam_search", "_autosummary/seldonian.hyperparam_search.HyperparamSearch", "_autosummary/seldonian.models", "_autosummary/seldonian.models.models", "_autosummary/seldonian.models.models.BaseLogisticRegressionModel", "_autosummary/seldonian.models.models.BinaryLogisticRegressionModel", "_autosummary/seldonian.models.models.BoundedLinearRegressionModel", "_autosummary/seldonian.models.models.ClassificationModel", "_autosummary/seldonian.models.models.DummyClassifierModel", "_autosummary/seldonian.models.models.LinearRegressionModel", "_autosummary/seldonian.models.models.LinearRegressionModelListFeatures", "_autosummary/seldonian.models.models.MultiClassLogisticRegressionModel", "_autosummary/seldonian.models.models.RandomClassifierModel", "_autosummary/seldonian.models.models.RegressionModel", "_autosummary/seldonian.models.models.SeldonianModel", "_autosummary/seldonian.models.models.SupervisedModel", "_autosummary/seldonian.models.objectives", "_autosummary/seldonian.models.objectives.Accuracy", "_autosummary/seldonian.models.objectives.False_Negative_Rate", "_autosummary/seldonian.models.objectives.False_Positive_Rate", "_autosummary/seldonian.models.objectives.IS_estimate", "_autosummary/seldonian.models.objectives.Mean_Error", "_autosummary/seldonian.models.objectives.Mean_Squared_Error", "_autosummary/seldonian.models.objectives.Negative_Rate", "_autosummary/seldonian.models.objectives.Positive_Rate", "_autosummary/seldonian.models.objectives.True_Negative_Rate", "_autosummary/seldonian.models.objectives.True_Positive_Rate", "_autosummary/seldonian.models.objectives.batcher", "_autosummary/seldonian.models.objectives.binary_logistic_loss", "_autosummary/seldonian.models.objectives.confusion_matrix", "_autosummary/seldonian.models.objectives.evaluate_statistic", "_autosummary/seldonian.models.objectives.gradient_Bounded_Squared_Error", "_autosummary/seldonian.models.objectives.gradient_Mean_Squared_Error", "_autosummary/seldonian.models.objectives.gradient_binary_logistic_loss", "_autosummary/seldonian.models.objectives.multiclass_logistic_loss", "_autosummary/seldonian.models.objectives.sample_from_statistic", "_autosummary/seldonian.models.objectives.vector_Accuracy", "_autosummary/seldonian.models.objectives.vector_Error", "_autosummary/seldonian.models.objectives.vector_False_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_False_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_IS_estimate", "_autosummary/seldonian.models.objectives.vector_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_Squared_Error", "_autosummary/seldonian.models.objectives.vector_True_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_True_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_confusion_matrix", "_autosummary/seldonian.models.sklearn_lr", "_autosummary/seldonian.models.sklearn_lr.SkLearnLinearRegressor", "_autosummary/seldonian.models.sklearn_model", "_autosummary/seldonian.models.sklearn_model.SupervisedSkLearnBaseModel", "_autosummary/seldonian.models.sklearn_model.sklearn_predict_vjp", "_autosummary/seldonian.optimizers", "_autosummary/seldonian.optimizers.gradient_descent", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam", "_autosummary/seldonian.optimizers.gradient_descent.setup_gradients", "_autosummary/seldonian.parse_tree", "_autosummary/seldonian.parse_tree.nodes", "_autosummary/seldonian.parse_tree.nodes.BaseNode", "_autosummary/seldonian.parse_tree.nodes.CVaRSQeBaseNode", "_autosummary/seldonian.parse_tree.nodes.ConfusionMatrixBaseNode", "_autosummary/seldonian.parse_tree.nodes.ConstantNode", "_autosummary/seldonian.parse_tree.nodes.InternalNode", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode", "_autosummary/seldonian.parse_tree.nodes.MultiClassBaseNode", "_autosummary/seldonian.parse_tree.nodes.Node", "_autosummary/seldonian.parse_tree.operators", "_autosummary/seldonian.parse_tree.parse_tree", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree", "_autosummary/seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints", "_autosummary/seldonian.safety_test", "_autosummary/seldonian.safety_test.safety_test", "_autosummary/seldonian.safety_test.safety_test.SafetyTest", "_autosummary/seldonian.seldonian_algorithm", "_autosummary/seldonian.seldonian_algorithm.SeldonianAlgorithm", "_autosummary/seldonian.spec", "_autosummary/seldonian.spec.RLSpec", "_autosummary/seldonian.spec.Spec", "_autosummary/seldonian.spec.SupervisedSpec", "_autosummary/seldonian.spec.createRLSpec", "_autosummary/seldonian.spec.createSupervisedSpec", "_autosummary/seldonian.spec.validate_parse_trees", "_autosummary/seldonian.utils", "_autosummary/seldonian.utils.RL_utils", "_autosummary/seldonian.utils.RL_utils.argmax_multi", "_autosummary/seldonian.utils.RL_utils.clamp", "_autosummary/seldonian.utils.RL_utils.error", "_autosummary/seldonian.utils.io_utils", "_autosummary/seldonian.utils.io_utils.dir_path", "_autosummary/seldonian.utils.io_utils.load_json", "_autosummary/seldonian.utils.io_utils.load_pickle", "_autosummary/seldonian.utils.io_utils.save_json", "_autosummary/seldonian.utils.io_utils.save_pickle", "_autosummary/seldonian.utils.plot_utils", "_autosummary/seldonian.utils.plot_utils.plot_gradient_descent", "_autosummary/seldonian.utils.stats_utils", "_autosummary/seldonian.utils.stats_utils.softmax", "_autosummary/seldonian.utils.stats_utils.stddev", "_autosummary/seldonian.utils.stats_utils.tinv", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma", "_autosummary/seldonian.utils.tutorial_utils", "_autosummary/seldonian.utils.tutorial_utils.generate_clipped_data", "_autosummary/seldonian.utils.tutorial_utils.generate_data", "_autosummary/seldonian.utils.tutorial_utils.make_synthetic_regression_dataset", "_autosummary/seldonian.warnings", "_autosummary/seldonian.warnings.custom_warnings", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning", "api", "getting_started", "index", "overview"], "filenames": ["_autosummary/seldonian.rst", "_autosummary/seldonian.RL.rst", "_autosummary/seldonian.RL.Agents.rst", "_autosummary/seldonian.RL.Agents.Agent.rst", "_autosummary/seldonian.RL.Agents.Agent.Agent.rst", "_autosummary/seldonian.RL.Agents.Bases.rst", "_autosummary/seldonian.RL.Agents.Bases.Fourier.rst", "_autosummary/seldonian.RL.Agents.Bases.Fourier.Fourier.rst", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.rst", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Q_Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description.rst", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.rst", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.rst", "_autosummary/seldonian.RL.Agents.Policies.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.Softmax.rst", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.rst", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.rst", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.rst", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.rst", "_autosummary/seldonian.RL.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.check_space_type.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.Continuous_Space.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.Discrete_Space.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.main.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info.rst", "_autosummary/seldonian.RL.RL_model.rst", "_autosummary/seldonian.RL.RL_model.RL_model.rst", "_autosummary/seldonian.RL.RL_runner.rst", "_autosummary/seldonian.RL.RL_runner.create_agent.rst", "_autosummary/seldonian.RL.RL_runner.run_all_trials.rst", "_autosummary/seldonian.RL.RL_runner.run_episode.rst", "_autosummary/seldonian.RL.RL_runner.run_episode_from_dict.rst", "_autosummary/seldonian.RL.RL_runner.run_trial.rst", "_autosummary/seldonian.RL.RL_runner.run_trial_given_agent_and_env.rst", "_autosummary/seldonian.RL.environments.rst", "_autosummary/seldonian.RL.environments.Environment.rst", "_autosummary/seldonian.RL.environments.Environment.Environment.rst", "_autosummary/seldonian.RL.environments.gridworld.rst", "_autosummary/seldonian.RL.environments.gridworld.Gridworld.rst", "_autosummary/seldonian.RL.environments.mountaincar.rst", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar.rst", "_autosummary/seldonian.RL.environments.n_step_mountaincar.rst", "_autosummary/seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.rst", "_autosummary/seldonian.RL.environments.simglucose_env.rst", "_autosummary/seldonian.RL.environments.simglucose_env.Simglucose.rst", "_autosummary/seldonian.RL.generate_gridworld_episodes.rst", "_autosummary/seldonian.RL.generate_gridworld_episodes.main.rst", "_autosummary/seldonian.RL.generate_mountaincar_episodes.rst", "_autosummary/seldonian.RL.generate_mountaincar_episodes.main.rst", "_autosummary/seldonian.RL.generate_simglucose_episodes.rst", "_autosummary/seldonian.RL.generate_simglucose_episodes.get_max_obs.rst", "_autosummary/seldonian.RL.generate_simglucose_episodes.main.rst", "_autosummary/seldonian.RL.hyperparams_and_settings.rst", "_autosummary/seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict.rst", "_autosummary/seldonian.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection.rst", "_autosummary/seldonian.dataset.rst", "_autosummary/seldonian.dataset.DataSet.rst", "_autosummary/seldonian.dataset.DataSetLoader.rst", "_autosummary/seldonian.dataset.Episode.rst", "_autosummary/seldonian.dataset.RLDataSet.rst", "_autosummary/seldonian.dataset.SupervisedDataSet.rst", "_autosummary/seldonian.dataset.load_supervised_metadata.rst", "_autosummary/seldonian.hyperparam_search.rst", "_autosummary/seldonian.hyperparam_search.HyperparamSearch.rst", "_autosummary/seldonian.models.rst", "_autosummary/seldonian.models.models.rst", "_autosummary/seldonian.models.models.BaseLogisticRegressionModel.rst", "_autosummary/seldonian.models.models.BinaryLogisticRegressionModel.rst", "_autosummary/seldonian.models.models.BoundedLinearRegressionModel.rst", "_autosummary/seldonian.models.models.ClassificationModel.rst", "_autosummary/seldonian.models.models.DummyClassifierModel.rst", "_autosummary/seldonian.models.models.LinearRegressionModel.rst", "_autosummary/seldonian.models.models.LinearRegressionModelListFeatures.rst", "_autosummary/seldonian.models.models.MultiClassLogisticRegressionModel.rst", "_autosummary/seldonian.models.models.RandomClassifierModel.rst", "_autosummary/seldonian.models.models.RegressionModel.rst", "_autosummary/seldonian.models.models.SeldonianModel.rst", "_autosummary/seldonian.models.models.SupervisedModel.rst", "_autosummary/seldonian.models.objectives.rst", "_autosummary/seldonian.models.objectives.Accuracy.rst", "_autosummary/seldonian.models.objectives.False_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.False_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.IS_estimate.rst", "_autosummary/seldonian.models.objectives.Mean_Error.rst", "_autosummary/seldonian.models.objectives.Mean_Squared_Error.rst", "_autosummary/seldonian.models.objectives.Negative_Rate.rst", "_autosummary/seldonian.models.objectives.Positive_Rate.rst", "_autosummary/seldonian.models.objectives.True_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.True_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.batcher.rst", "_autosummary/seldonian.models.objectives.binary_logistic_loss.rst", "_autosummary/seldonian.models.objectives.confusion_matrix.rst", "_autosummary/seldonian.models.objectives.evaluate_statistic.rst", "_autosummary/seldonian.models.objectives.gradient_Bounded_Squared_Error.rst", "_autosummary/seldonian.models.objectives.gradient_Mean_Squared_Error.rst", "_autosummary/seldonian.models.objectives.gradient_binary_logistic_loss.rst", "_autosummary/seldonian.models.objectives.multiclass_logistic_loss.rst", "_autosummary/seldonian.models.objectives.sample_from_statistic.rst", "_autosummary/seldonian.models.objectives.vector_Accuracy.rst", "_autosummary/seldonian.models.objectives.vector_Error.rst", "_autosummary/seldonian.models.objectives.vector_False_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_False_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_IS_estimate.rst", "_autosummary/seldonian.models.objectives.vector_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_Squared_Error.rst", "_autosummary/seldonian.models.objectives.vector_True_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_True_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_confusion_matrix.rst", "_autosummary/seldonian.models.sklearn_lr.rst", "_autosummary/seldonian.models.sklearn_lr.SkLearnLinearRegressor.rst", "_autosummary/seldonian.models.sklearn_model.rst", "_autosummary/seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.rst", "_autosummary/seldonian.models.sklearn_model.sklearn_predict_vjp.rst", "_autosummary/seldonian.optimizers.rst", "_autosummary/seldonian.optimizers.gradient_descent.rst", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam.rst", "_autosummary/seldonian.optimizers.gradient_descent.setup_gradients.rst", "_autosummary/seldonian.parse_tree.rst", "_autosummary/seldonian.parse_tree.nodes.rst", "_autosummary/seldonian.parse_tree.nodes.BaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.CVaRSQeBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.ConstantNode.rst", "_autosummary/seldonian.parse_tree.nodes.InternalNode.rst", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.MultiClassBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.Node.rst", "_autosummary/seldonian.parse_tree.operators.rst", "_autosummary/seldonian.parse_tree.parse_tree.rst", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree.rst", "_autosummary/seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints.rst", "_autosummary/seldonian.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.SafetyTest.rst", "_autosummary/seldonian.seldonian_algorithm.rst", "_autosummary/seldonian.seldonian_algorithm.SeldonianAlgorithm.rst", "_autosummary/seldonian.spec.rst", "_autosummary/seldonian.spec.RLSpec.rst", "_autosummary/seldonian.spec.Spec.rst", "_autosummary/seldonian.spec.SupervisedSpec.rst", "_autosummary/seldonian.spec.createRLSpec.rst", "_autosummary/seldonian.spec.createSupervisedSpec.rst", "_autosummary/seldonian.spec.validate_parse_trees.rst", "_autosummary/seldonian.utils.rst", "_autosummary/seldonian.utils.RL_utils.rst", "_autosummary/seldonian.utils.RL_utils.argmax_multi.rst", "_autosummary/seldonian.utils.RL_utils.clamp.rst", "_autosummary/seldonian.utils.RL_utils.error.rst", "_autosummary/seldonian.utils.io_utils.rst", "_autosummary/seldonian.utils.io_utils.dir_path.rst", "_autosummary/seldonian.utils.io_utils.load_json.rst", "_autosummary/seldonian.utils.io_utils.load_pickle.rst", "_autosummary/seldonian.utils.io_utils.save_json.rst", "_autosummary/seldonian.utils.io_utils.save_pickle.rst", "_autosummary/seldonian.utils.plot_utils.rst", "_autosummary/seldonian.utils.plot_utils.plot_gradient_descent.rst", "_autosummary/seldonian.utils.stats_utils.rst", "_autosummary/seldonian.utils.stats_utils.softmax.rst", "_autosummary/seldonian.utils.stats_utils.stddev.rst", "_autosummary/seldonian.utils.stats_utils.tinv.rst", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma.rst", "_autosummary/seldonian.utils.tutorial_utils.rst", "_autosummary/seldonian.utils.tutorial_utils.generate_clipped_data.rst", "_autosummary/seldonian.utils.tutorial_utils.generate_data.rst", "_autosummary/seldonian.utils.tutorial_utils.make_synthetic_regression_dataset.rst", "_autosummary/seldonian.warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning.rst", "api.rst", "getting_started.rst", "index.rst", "overview.rst"], "titles": ["seldonian", "seldonian.RL", "seldonian.RL.Agents", "seldonian.RL.Agents.Agent", "seldonian.RL.Agents.Agent.Agent", "seldonian.RL.Agents.Bases", "seldonian.RL.Agents.Bases.Fourier", "seldonian.RL.Agents.Bases.Fourier.Fourier", "seldonian.RL.Agents.Discrete_Random_Agent", "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent", "seldonian.RL.Agents.Function_Approximators", "seldonian.RL.Agents.Function_Approximators.Function_Approximator", "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator", "seldonian.RL.Agents.Function_Approximators.Linear_FA", "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA", "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA", "seldonian.RL.Agents.Function_Approximators.Table", "seldonian.RL.Agents.Function_Approximators.Table.Q_Table", "seldonian.RL.Agents.Function_Approximators.Table.Table", "seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description", "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent", "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent", "seldonian.RL.Agents.Policies", "seldonian.RL.Agents.Policies.Policy", "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy", "seldonian.RL.Agents.Policies.Policy.Policy", "seldonian.RL.Agents.Policies.Softmax", "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax", "seldonian.RL.Agents.Policies.Softmax.Softmax", "seldonian.RL.Agents.keyboard_gridworld", "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld", "seldonian.RL.Agents.mountain_car_rough_solution", "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution", "seldonian.RL.Env_Description", "seldonian.RL.Env_Description.Env_Description", "seldonian.RL.Env_Description.Env_Description.Env_Description", "seldonian.RL.Env_Description.Env_Description.check_space_type", "seldonian.RL.Env_Description.Spaces", "seldonian.RL.Env_Description.Spaces.Continuous_Space", "seldonian.RL.Env_Description.Spaces.Discrete_Space", "seldonian.RL.RL_generate_dataset_and_spec_file", "seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string", "seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs", "seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path", "seldonian.RL.RL_generate_dataset_and_spec_file.main", "seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info", "seldonian.RL.RL_model", "seldonian.RL.RL_model.RL_model", "seldonian.RL.RL_runner", "seldonian.RL.RL_runner.create_agent", "seldonian.RL.RL_runner.run_all_trials", "seldonian.RL.RL_runner.run_episode", "seldonian.RL.RL_runner.run_episode_from_dict", "seldonian.RL.RL_runner.run_trial", "seldonian.RL.RL_runner.run_trial_given_agent_and_env", "seldonian.RL.environments", "seldonian.RL.environments.Environment", "seldonian.RL.environments.Environment.Environment", "seldonian.RL.environments.gridworld", "seldonian.RL.environments.gridworld.Gridworld", "seldonian.RL.environments.mountaincar", "seldonian.RL.environments.mountaincar.Mountaincar", "seldonian.RL.environments.n_step_mountaincar", "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar", "seldonian.RL.environments.simglucose_env", "seldonian.RL.environments.simglucose_env.Simglucose", "seldonian.RL.generate_gridworld_episodes", "seldonian.RL.generate_gridworld_episodes.main", "seldonian.RL.generate_mountaincar_episodes", "seldonian.RL.generate_mountaincar_episodes.main", "seldonian.RL.generate_simglucose_episodes", "seldonian.RL.generate_simglucose_episodes.get_max_obs", "seldonian.RL.generate_simglucose_episodes.main", "seldonian.RL.hyperparams_and_settings", "seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict", "seldonian.candidate_selection", "seldonian.candidate_selection.candidate_selection", "seldonian.candidate_selection.candidate_selection.CandidateSelection", "seldonian.dataset", "seldonian.dataset.DataSet", "seldonian.dataset.DataSetLoader", "seldonian.dataset.Episode", "seldonian.dataset.RLDataSet", "seldonian.dataset.SupervisedDataSet", "seldonian.dataset.load_supervised_metadata", "seldonian.hyperparam_search", "seldonian.hyperparam_search.HyperparamSearch", "seldonian.models", "seldonian.models.models", "seldonian.models.models.BaseLogisticRegressionModel", "seldonian.models.models.BinaryLogisticRegressionModel", "seldonian.models.models.BoundedLinearRegressionModel", "seldonian.models.models.ClassificationModel", "seldonian.models.models.DummyClassifierModel", "seldonian.models.models.LinearRegressionModel", "seldonian.models.models.LinearRegressionModelListFeatures", "seldonian.models.models.MultiClassLogisticRegressionModel", "seldonian.models.models.RandomClassifierModel", "seldonian.models.models.RegressionModel", "seldonian.models.models.SeldonianModel", "seldonian.models.models.SupervisedModel", "seldonian.models.objectives", "seldonian.models.objectives.Accuracy", "seldonian.models.objectives.False_Negative_Rate", "seldonian.models.objectives.False_Positive_Rate", "seldonian.models.objectives.IS_estimate", "seldonian.models.objectives.Mean_Error", "seldonian.models.objectives.Mean_Squared_Error", "seldonian.models.objectives.Negative_Rate", "seldonian.models.objectives.Positive_Rate", "seldonian.models.objectives.True_Negative_Rate", "seldonian.models.objectives.True_Positive_Rate", "seldonian.models.objectives.batcher", "seldonian.models.objectives.binary_logistic_loss", "seldonian.models.objectives.confusion_matrix", "seldonian.models.objectives.evaluate_statistic", "seldonian.models.objectives.gradient_Bounded_Squared_Error", "seldonian.models.objectives.gradient_Mean_Squared_Error", "seldonian.models.objectives.gradient_binary_logistic_loss", "seldonian.models.objectives.multiclass_logistic_loss", "seldonian.models.objectives.sample_from_statistic", "seldonian.models.objectives.vector_Accuracy", "seldonian.models.objectives.vector_Error", "seldonian.models.objectives.vector_False_Negative_Rate", "seldonian.models.objectives.vector_False_Positive_Rate", "seldonian.models.objectives.vector_IS_estimate", "seldonian.models.objectives.vector_Negative_Rate", "seldonian.models.objectives.vector_Positive_Rate", "seldonian.models.objectives.vector_Squared_Error", "seldonian.models.objectives.vector_True_Negative_Rate", "seldonian.models.objectives.vector_True_Positive_Rate", "seldonian.models.objectives.vector_confusion_matrix", "seldonian.models.sklearn_lr", "seldonian.models.sklearn_lr.SkLearnLinearRegressor", "seldonian.models.sklearn_model", "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel", "seldonian.models.sklearn_model.sklearn_predict_vjp", "seldonian.optimizers", "seldonian.optimizers.gradient_descent", "seldonian.optimizers.gradient_descent.gradient_descent_adam", "seldonian.optimizers.gradient_descent.setup_gradients", "seldonian.parse_tree", "seldonian.parse_tree.nodes", "seldonian.parse_tree.nodes.BaseNode", "seldonian.parse_tree.nodes.CVaRSQeBaseNode", "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode", "seldonian.parse_tree.nodes.ConstantNode", "seldonian.parse_tree.nodes.InternalNode", "seldonian.parse_tree.nodes.MEDCustomBaseNode", "seldonian.parse_tree.nodes.MultiClassBaseNode", "seldonian.parse_tree.nodes.Node", "seldonian.parse_tree.operators", "seldonian.parse_tree.parse_tree", "seldonian.parse_tree.parse_tree.ParseTree", "seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints", "seldonian.safety_test", "seldonian.safety_test.safety_test", "seldonian.safety_test.safety_test.SafetyTest", "seldonian.seldonian_algorithm", "seldonian.seldonian_algorithm.SeldonianAlgorithm", "seldonian.spec", "seldonian.spec.RLSpec", "seldonian.spec.Spec", "seldonian.spec.SupervisedSpec", "seldonian.spec.createRLSpec", "seldonian.spec.createSupervisedSpec", "seldonian.spec.validate_parse_trees", "seldonian.utils", "seldonian.utils.RL_utils", "seldonian.utils.RL_utils.argmax_multi", "seldonian.utils.RL_utils.clamp", "seldonian.utils.RL_utils.error", "seldonian.utils.io_utils", "seldonian.utils.io_utils.dir_path", "seldonian.utils.io_utils.load_json", "seldonian.utils.io_utils.load_pickle", "seldonian.utils.io_utils.save_json", "seldonian.utils.io_utils.save_pickle", "seldonian.utils.plot_utils", "seldonian.utils.plot_utils.plot_gradient_descent", "seldonian.utils.stats_utils", "seldonian.utils.stats_utils.softmax", "seldonian.utils.stats_utils.stddev", "seldonian.utils.stats_utils.tinv", "seldonian.utils.stats_utils.weighted_sum_gamma", "seldonian.utils.tutorial_utils", "seldonian.utils.tutorial_utils.generate_clipped_data", "seldonian.utils.tutorial_utils.generate_data", "seldonian.utils.tutorial_utils.make_synthetic_regression_dataset", "seldonian.warnings", "seldonian.warnings.custom_warnings", "seldonian.warnings.custom_warnings.custom_formatwarning", "API", "Getting Started", "Seldonian Engine documentation", "Overview"], "terms": {"engin": [0, 151, 193, 195], "packag": [0, 195], "modul": [0, 1, 2, 5, 10, 22, 33, 55, 75, 76, 85, 87, 88, 137, 141, 151, 152, 155, 156, 158, 160, 167, 189, 191, 195], "class": [3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 39, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 108, 109, 110, 111, 114, 119, 131, 132, 133, 134, 135, 136, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 195], "base": [4, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 57, 59, 61, 63, 65, 77, 79, 80, 81, 82, 83, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 133, 135, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 157, 159, 161, 162, 163, 194, 195], "object": [4, 7, 9, 12, 14, 15, 19, 21, 24, 25, 27, 28, 35, 38, 39, 44, 45, 57, 59, 77, 79, 80, 81, 82, 83, 86, 99, 139, 140, 143, 144, 145, 148, 149, 150, 153, 157, 159, 160, 161, 162, 163, 164, 165, 166, 174, 175, 176, 177, 179, 194], "__init__": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 57, 59, 61, 63, 65, 77, 79, 80, 81, 82, 83, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 133, 135, 143, 144, 145, 146, 147, 148, 149, 150, 153, 157, 159, 161, 162, 163, 194], "__repr__": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 57, 59, 61, 63, 65, 77, 79, 80, 81, 82, 83, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 133, 135, 143, 144, 145, 146, 147, 148, 149, 150, 153, 157, 159, 161, 162, 163, 194], "return": [4, 7, 9, 12, 14, 15, 17, 18, 19, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 41, 42, 43, 45, 47, 49, 50, 51, 52, 53, 54, 57, 59, 61, 63, 65, 77, 79, 80, 81, 82, 83, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 143, 144, 145, 148, 149, 151, 153, 157, 159, 161, 162, 163, 169, 179, 182, 183, 184, 195], "repr": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 57, 59, 61, 63, 65, 77, 79, 80, 81, 82, 83, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 133, 135, 153, 157, 159, 161, 162, 163], "self": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 57, 59, 61, 63, 65, 77, 79, 80, 81, 82, 83, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 133, 135, 153, 157, 159, 161, 162, 163], "method": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 57, 59, 61, 63, 65, 77, 79, 80, 81, 82, 83, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 133, 135, 139, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 157, 159, 161, 162, 163, 195], "choose_act": [4, 9, 21, 24, 25, 27, 28, 30, 32, 194], "observ": [4, 7, 9, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 57, 61, 63, 65, 81, 90, 93, 96, 97, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 143, 144, 145, 148, 149, 195], "choos": [4, 9, 30, 32, 195], "an": [4, 7, 9, 14, 15, 19, 21, 24, 25, 27, 28, 30, 32, 35, 49, 53, 57, 59, 61, 63, 65, 136, 143, 144, 145, 149, 150, 151, 173, 174, 175, 176, 177, 184, 195], "action": [4, 9, 15, 17, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 57, 59, 61, 63, 65, 80, 81, 195], "given": [4, 7, 9, 17, 19, 21, 24, 25, 27, 28, 30, 32, 41, 42, 43, 47, 57, 59, 61, 63, 65, 77, 133, 140, 143, 144, 145, 148, 149, 153, 154, 157, 159, 195], "To": [4, 9, 30, 32, 193], "overridden": [4, 9, 25, 30, 32], "paramet": [4, 7, 9, 12, 14, 15, 17, 18, 19, 21, 24, 25, 27, 28, 30, 32, 35, 36, 38, 39, 45, 47, 49, 50, 51, 52, 53, 54, 57, 59, 61, 63, 65, 77, 79, 80, 81, 82, 83, 84, 86, 89, 90, 91, 93, 94, 95, 96, 97, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 157, 159, 161, 162, 163, 164, 165, 166, 173, 174, 175, 176, 177, 179, 182, 183, 184, 186, 187, 188, 195], "The": [4, 9, 14, 15, 17, 18, 21, 27, 28, 30, 32, 38, 59, 77, 79, 80, 83, 84, 86, 89, 90, 91, 93, 94, 95, 96, 97, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 157, 159, 161, 162, 163, 164, 165, 177, 179, 184, 186, 187, 188, 194, 195], "current": [4, 9, 21, 24, 25, 27, 28, 30, 32, 57, 59, 61, 63, 65, 86, 92, 195], "type": [4, 9, 19, 21, 24, 27, 28, 30, 32, 36, 47, 49, 51, 52, 59, 77, 86, 89, 90, 91, 93, 94, 95, 96, 97, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 139, 143, 144, 145, 148, 149, 153, 157, 159, 182, 183, 184, 195], "depend": [4, 9, 21, 24, 27, 28, 30, 32, 135, 143, 144, 145, 148, 149, 195], "environ": [4, 7, 9, 14, 15, 17, 18, 19, 21, 24, 27, 28, 30, 32, 35, 41, 42, 43, 47, 49, 50, 51, 52, 53, 54, 164, 194, 195], "get_param": [4, 9, 21, 24, 25, 27, 28, 30, 32, 194], "retriev": [4, 9, 30, 32], "": [4, 9, 21, 30, 32, 35, 148, 153, 159, 182, 183, 195], "polici": [4, 9, 21, 30, 32, 47, 53, 81, 151, 164, 194, 195], "get_prob_this_act": [4, 9, 21, 24, 25, 27, 28, 30, 32, 47, 194], "get": [4, 7, 9, 17, 21, 24, 25, 27, 28, 30, 32, 35, 38, 39, 47, 57, 59, 61, 63, 65, 77, 86, 114, 131, 153, 157, 159, 194, 195], "probabl": [4, 9, 17, 21, 24, 25, 27, 28, 30, 32, 47, 81, 86, 90, 93, 96, 97, 102, 103, 104, 108, 109, 110, 111, 114, 121, 123, 124, 126, 127, 129, 130, 131, 135, 144, 153, 183, 195], "provid": [4, 9, 30, 32, 35, 115, 120, 153, 159, 161, 162, 163, 164, 195], "i": [4, 9, 21, 24, 27, 28, 30, 32, 38, 45, 50, 59, 77, 86, 89, 90, 91, 96, 102, 103, 104, 105, 108, 109, 110, 111, 114, 121, 123, 124, 125, 126, 127, 129, 130, 131, 133, 135, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 157, 159, 161, 162, 163, 173, 179, 193, 194, 195], "set_new_param": [4, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 30, 32, 194], "theta": [4, 9, 30, 32, 77, 90, 91, 93, 94, 95, 96, 97, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 143, 144, 145, 148, 149, 157, 159, 195], "updat": [4, 9, 21, 25, 30, 32, 59, 133, 135, 164, 165, 194], "model": [4, 9, 12, 14, 15, 17, 18, 30, 32, 47, 77, 86, 139, 143, 144, 145, 148, 149, 157, 159, 161, 162, 163, 164, 194], "next_observ": [4, 9, 21, 30, 32], "reward": [4, 9, 21, 30, 32, 45, 59, 80, 81, 151, 184, 195], "termin": [4, 9, 21, 30, 32, 57, 59, 61, 63, 65, 194], "accord": [4, 9, 21, 30, 32, 86], "learn": [4, 9, 21, 30, 32, 77, 79, 80, 83, 88, 92, 99, 100, 133, 135, 139, 143, 144, 145, 148, 149, 151, 153, 154, 157, 163, 194, 195], "rule": [4, 9, 21, 30, 32], "overriden": [4, 9, 30, 32], "after": [4, 9, 21, 30, 32], "taken": [4, 9, 21, 30, 32, 35, 47], "take": [4, 9, 21, 24, 25, 30, 32, 47, 153, 195], "bool": [4, 9, 21, 30, 32, 59, 77, 150, 153, 157, 161, 162, 163, 164, 179], "whether": [4, 9, 21, 24, 27, 28, 30, 32, 53, 59, 77, 86, 150, 153, 157, 159, 161, 162, 163, 164, 165, 173, 179, 188, 195], "hyperparam_and_setting_dict": [7, 21, 24, 27, 28], "env_desc": 7, "basi": [7, 14, 15, 24, 27, 28], "us": [7, 14, 15, 21, 27, 30, 38, 39, 45, 47, 53, 57, 61, 63, 65, 77, 86, 89, 90, 91, 94, 95, 96, 133, 135, 139, 140, 143, 144, 145, 148, 149, 151, 153, 159, 161, 162, 163, 164, 165, 183, 184, 188, 193, 195], "linear": [7, 14, 15, 24, 27, 28, 91, 94, 95, 133], "valu": [7, 15, 17, 27, 28, 39, 77, 86, 112, 122, 128, 139, 143, 144, 145, 146, 148, 149, 153, 157, 159, 186, 188, 195], "function": [7, 12, 14, 15, 16, 21, 24, 27, 28, 34, 40, 48, 59, 66, 68, 70, 73, 77, 78, 91, 101, 112, 133, 134, 136, 138, 139, 140, 143, 145, 149, 151, 152, 153, 154, 157, 160, 161, 162, 163, 164, 165, 168, 172, 178, 179, 180, 183, 185, 190, 195], "approxim": [7, 12, 14, 15, 21, 24, 27, 28], "see": [7, 144, 148, 161, 162, 163, 194, 195], "http": [7, 144, 148, 183], "irl": 7, "c": [7, 114, 131, 144, 145], "brown": 7, "edu": [7, 144], "fb": 7, "php": 7, "refer": [7, 151, 195], "hyperparameter_and_setting_dict": [7, 24, 27, 28, 49, 50, 52, 53], "specifi": [7, 24, 27, 28, 49, 50, 53, 54, 151, 153, 161, 162, 163, 195], "number": [7, 17, 18, 24, 27, 28, 35, 38, 39, 49, 50, 53, 54, 59, 77, 79, 83, 86, 89, 90, 96, 109, 112, 114, 131, 139, 143, 144, 145, 148, 149, 153, 157, 186, 187, 188, 195], "episod": [7, 24, 27, 28, 44, 45, 49, 50, 51, 52, 53, 54, 67, 69, 71, 72, 79, 80, 82, 83, 105, 125, 194, 195], "per": [7, 24, 27, 28, 49, 50, 179], "trial": [7, 24, 27, 28, 44, 49, 50, 53, 67, 69, 72], "env_descript": [7, 9, 14, 15, 19, 21, 24, 27, 28, 30, 59, 194], "access": [7, 9, 14, 15, 19, 21, 24, 27, 28, 35], "attribut": [7, 9, 14, 15, 19, 21, 24, 27, 28, 35, 59, 80, 82, 145, 149, 153, 159, 195], "calculate_num_featur": [7, 194], "order": [7, 195], "max_coupled_var": 7, "num_obs_dim": 7, "determin": [7, 86, 139, 153, 164, 165], "featur": [7, 14, 15, 80, 83, 89, 90, 91, 93, 94, 95, 96, 97, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 143, 144, 145, 148, 149, 159, 195], "construct_basis_matrix": [7, 194], "creat": [7, 19, 24, 27, 28, 44, 49, 59, 77, 80, 86, 133, 135, 143, 144, 145, 148, 149, 153, 154, 159, 164, 165, 195], "matrix": [7, 114, 131, 145, 151, 195], "get_featur": [7, 194], "ob": [7, 17, 18, 21, 24, 25, 27, 28, 35, 57, 59, 61, 63, 65, 80, 153], "get_normalized_observ": [7, 194], "normal": [7, 109, 186, 187, 188], "act": 9, "discret": [9, 24, 27, 28, 35, 36, 39], "space": [9, 24, 27, 28, 35, 36, 59, 194], "pick": 9, "uniform": 9, "random": [9, 186, 187, 188], "capabl": [9, 18], "new_param": [12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 47], "set": [12, 14, 15, 17, 18, 21, 24, 27, 28, 53, 77, 86, 141, 145, 146, 159, 195], "new": [12, 14, 15, 17, 18, 57, 61, 63, 65, 151, 194, 195], "weight": [12, 14, 15, 17, 18, 21, 24, 27, 28, 47, 77, 86, 89, 90, 91, 93, 94, 95, 96, 97, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 143, 144, 145, 148, 149, 151, 153, 154, 157, 159, 161, 162, 163, 164, 184, 195], "encod": [14, 15, 195], "A": [15, 17, 19, 27, 47, 54, 57, 59, 61, 63, 65, 82, 125, 136, 145, 149, 151, 153, 161, 162, 163, 173, 174, 175, 176, 177, 194], "state": [15, 17, 18, 21, 35, 59], "min_stat": [17, 18], "num_stat": [17, 18, 59], "num_act": 17, "q": [17, 19, 27], "contain": [17, 21, 25, 59, 77, 80, 86, 88, 115, 120, 139, 143, 144, 145, 148, 149, 151, 153, 157, 159, 161, 162, 163, 165, 195], "transit": [17, 57, 59, 61, 63, 65, 194], "int": [17, 18, 27, 39, 59, 77, 79, 83, 86, 112, 114, 131, 139, 143, 144, 145, 148, 149, 150, 153, 157, 183, 186, 187, 188], "smallest": [17, 18], "total": [17, 18, 39, 86, 112, 153], "from_environment_state_to_0_indexed_st": [17, 18, 194], "env_stat": [17, 18], "convert": [17, 18, 24, 27, 28, 133, 135, 136], "0": [17, 18, 24, 27, 28, 38, 77, 91, 97, 102, 103, 104, 108, 109, 110, 111, 121, 123, 124, 126, 127, 129, 130, 139, 143, 144, 145, 148, 149, 153, 157, 161, 162, 163, 164, 165, 184, 186, 187, 188, 195], "index": [17, 18, 24, 27, 28, 77, 114, 131, 145, 149, 150, 184, 195], "you": [17, 18, 80, 112, 153, 157, 177, 179, 193, 194, 195], "want": [17, 18, 36, 80, 86, 112, 149, 153, 157, 177, 179, 193, 195], "get_action_values_given_st": [17, 24, 27, 28, 194], "state_number_not_zero_index": 17, "possibl": [17, 21, 24, 27, 28, 35, 57, 59, 61, 63, 65, 144, 195], "environment": 17, "specif": [17, 24, 27, 28, 49, 86, 159, 160, 161, 162, 163, 195], "arrai": [17, 21, 24, 27, 28, 38, 47, 77, 86, 89, 90, 96, 114, 131, 133, 135, 136, 151, 184, 195], "get_action_values_given_zero_indexed_st": [17, 194], "zero_indexed_state_numb": 17, "hold": [18, 79, 81, 82, 83], "reindex": 18, "descript": [19, 24, 27, 28, 57, 59, 61, 63, 65, 195], "q_tabl": [19, 21, 194], "parametr": 21, "softmax": [21, 194, 195], "pi": 21, "frac": 21, "e": [21, 45, 77, 79, 80, 82, 83, 115, 120, 139, 143, 144, 145, 148, 149, 153, 154, 157, 161, 162, 163, 195], "p": [21, 183, 195], "sum_": 21, "addit": [21, 195], "info": [21, 86, 139, 159], "about": [21, 139, 153, 195], "data": [21, 77, 80, 86, 90, 96, 112, 113, 119, 143, 144, 145, 148, 149, 153, 157, 159, 161, 162, 163, 164, 165, 176, 177, 182, 186, 187, 188, 195], "gener": [21, 24, 28, 186, 187, 188, 195], "variabl": [21, 38, 59, 143, 144, 145, 146, 148, 149, 150, 151, 153], "fa": 21, "select": [21, 24, 25, 27, 28, 75, 76, 77, 85, 86, 137, 139, 143, 144, 145, 148, 149, 157, 159, 161, 162, 163, 164, 194], "get_action_valu": [21, 194], "all": [21, 24, 27, 28, 47, 57, 79, 83, 92, 98, 99, 100, 105, 113, 119, 133, 135, 145, 149, 150, 153, 157, 195], "from": [21, 24, 27, 28, 49, 80, 81, 84, 86, 91, 94, 95, 112, 136, 141, 148, 152, 153, 159, 174, 175, 188, 195], "thi": [21, 47, 57, 59, 61, 63, 65, 108, 109, 114, 116, 121, 123, 124, 126, 127, 129, 130, 131, 139, 143, 144, 145, 148, 149, 150, 153, 159, 186, 188, 194, 195], "float": [21, 27, 28, 47, 59, 86, 93, 97, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 139, 143, 144, 145, 146, 147, 148, 149, 150, 153, 159, 161, 162, 163, 164, 165, 182, 183, 184, 186, 187, 188, 195], "Not": [21, 30, 151], "implement": [21, 25, 57, 59, 61, 63, 65, 86, 90, 91, 93, 94, 95, 96, 97, 133, 135, 139, 183, 195], "where": [24, 27, 54, 77, 133, 139, 143, 144, 145, 148, 149, 153, 157, 159, 164, 165, 176, 179, 184, 195], "ar": [24, 27, 36, 38, 54, 77, 86, 144, 145, 151, 153, 157, 159, 166, 179, 184, 194, 195], "defin": [24, 25, 38, 144, 151, 195], "how": [24, 25, 153, 195], "construct_basis_and_linear_fa": [24, 27, 28, 194], "dictionari": [24, 27, 28, 49, 54, 84, 139, 151, 159, 161, 162, 163, 179, 195], "from_0_indexed_action_to_environment_act": [24, 27, 28, 194], "action_0_index": [24, 27, 28], "env": [24, 27, 28, 42, 51, 52, 54], "from_environment_action_to_0_indexed_act": [24, 27, 28, 194], "env_act": [24, 27, 28], "make_state_action_fa": [24, 27, 28, 194], "contin": [24, 27, 28, 36], "four": [25, 195], "which": [25, 36, 50, 108, 133, 135, 143, 144, 145, 147, 148, 149, 151, 153, 164, 165, 195], "must": [25, 133, 135, 136, 143, 195], "ani": [25, 77, 154, 195], "both": [27, 153, 195], "faster": 27, "than": [27, 38, 54, 144, 153, 157, 195], "just": [27, 135, 159], "becaus": [27, 153, 179], "cach": [27, 153], "lookup": 27, "tabl": 27, "_arg": [27, 194], "helper": [27, 59, 153], "acceler": 27, "calcul": [27, 59, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 119, 122, 123, 124, 125, 126, 127, 128, 139, 143, 144, 145, 148, 149, 153, 157, 184, 195], "_denom": [27, 194], "choose_action_from_action_valu": [27, 28, 194], "action_valu": [27, 28], "list": [27, 28, 45, 47, 50, 53, 54, 77, 79, 80, 81, 82, 83, 86, 105, 125, 143, 144, 145, 148, 149, 151, 153, 154, 157, 161, 162, 163, 164, 165, 166, 195], "param": [27, 28, 109, 116], "get_action_probs_from_action_valu": [27, 28, 194], "get_e_to_the_something_term": [27, 28, 194], "exponenti": [27, 28, 139, 153], "obsertavt": [27, 28], "obserav": [27, 28], "discrete_action_polici": [28, 194], "debug": [30, 45, 57, 61, 63, 65, 86, 139, 159], "gridworld": [30, 194], "intend": 30, "public": 30, "observation_spac": 35, "action_spac": 35, "describ": [35, 59, 80], "conveni": [35, 153, 154, 164, 165, 195], "continu": [35, 38], "made": 35, "get_min_act": [35, 194], "first": [35, 149, 153, 194, 195], "get_min_st": [35, 194], "get_num_act": [35, 194], "get_num_observation_dim": [35, 194], "dimens": [35, 38, 186, 187, 188], "get_num_st": [35, 194], "also": [35, 146, 147, 150, 153, 184, 195], "call": [35, 112, 135, 143, 144, 145, 148, 149, 184, 195], "here": [35, 135, 151, 195], "desired_typ": 36, "valid": [36, 38, 153, 195], "ensur": [36, 166, 195], "equival": [36, 143, 144, 145, 148, 149], "discrete_spac": [36, 194], "continous_spac": 36, "we": [36, 86, 143, 144, 145, 148, 149, 153, 193, 195], "match": 36, "bound": [38, 77, 91, 116, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 157, 159, 161, 162, 163, 195], "np": 38, "ndarrai": [38, 77, 86, 91, 93, 94, 95, 97, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 135, 136, 143, 144, 145, 148, 149, 157, 159, 182, 184], "shape": [38, 89, 90, 96, 114, 131, 133, 135, 195], "num_dim": 38, "2": [38, 148, 149, 176, 195], "min": [38, 39, 148, 195], "max": [38, 39, 195], "each": [38, 50, 81, 82, 90, 93, 96, 97, 102, 108, 109, 110, 111, 112, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 143, 144, 145, 148, 149, 151, 153, 154, 159, 161, 162, 163, 179, 195], "For": [38, 149, 151, 195], "exampl": [38, 149, 195], "3d": 38, "x": [38, 89, 90, 91, 93, 94, 95, 96, 97, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 145, 148, 181, 186, 187, 188], "1": [38, 90, 102, 103, 104, 108, 109, 110, 111, 121, 123, 124, 126, 127, 129, 130, 133, 139, 143, 144, 145, 149, 186, 187, 188, 191, 195], "y": [38, 89, 90, 91, 94, 95, 96, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 148, 186, 187, 188], "5": [38, 97, 161, 162, 163, 195], "4": [38, 144, 151, 195], "z": [38, 144], "12": 38, "6": [38, 161, 163, 164, 165, 195], "8": [38, 53, 195], "would": [38, 77, 139, 149, 151, 161, 162, 163, 195], "check_bounds_valid": [38, 194], "check": [38, 59, 153, 173], "format": [38, 80, 195], "maximum": [38, 39, 59, 144, 153], "larger": [38, 144], "minimum": [38, 39, 144, 153, 195], "get_num_dim": [38, 194], "get_num_valu": [39, 194], "env_nam": [41, 42, 43], "name": [41, 42, 43, 77, 79, 80, 82, 83, 115, 120, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 161, 162, 163, 195], "default": [41, 42, 80, 139, 140, 150, 153, 154, 161, 162, 163, 164, 165, 195], "constraint": [41, 77, 139, 140, 141, 149, 151, 152, 153, 154, 157, 159, 161, 162, 163, 164, 165, 166, 179, 194], "string": [41, 77, 146, 147, 150, 151, 153, 154, 159, 161, 162, 163, 164, 165, 194], "kwarg": [42, 47, 77, 79, 80, 82, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 139, 143, 144, 145, 146, 147, 148, 149, 153, 157, 164, 191], "path": [43, 165, 173, 179], "metadata": [43, 79, 80, 82, 83, 84, 139, 165, 195], "file": [43, 80, 84, 86, 159, 164, 165, 174, 175, 176, 177, 195], "run": [44, 50, 51, 52, 53, 54, 67, 69, 72, 77, 78, 86, 87, 133, 139, 156, 157, 158, 159, 160, 161, 162, 163, 179, 194], "rlspec": [44, 164, 194, 195], "save": [44, 67, 69, 72, 164, 165, 176, 177, 179, 195], "disk": [44, 67, 69, 72, 77, 80], "print": [45, 57, 59, 61, 63, 65, 86, 139, 159], "sum": [45, 102, 108, 109, 110, 111, 184], "env_kwarg": [47, 164, 195], "seldonianmodel": [47, 77, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 143, 144, 145, 148, 149, 157, 162, 163, 194], "parameter": [47, 195], "dict": [47, 50, 53, 115, 120, 139, 143, 144, 145, 148, 149, 151, 153, 161, 162, 163, 164, 179], "pertain": [47, 164], "gamma": [47, 59, 164, 184, 195], "discount": [47, 59, 164, 184, 195], "factor": [47, 59, 164, 184, 195], "singl": [47, 51, 52, 53, 149, 153, 195], "pair": [47, 91, 94, 95, 148, 195], "get_probs_from_observations_and_act": [47, 194], "those": [47, 151], "agent": [49, 50, 51, 52, 53, 54, 194], "mani": [50, 164, 165], "consist": [50, 53, 195], "same": [50, 133, 135, 148], "_i": [50, 133, 195], "model_param": [52, 53], "none": [52, 53, 77, 80, 105, 150, 157, 159, 161, 162, 163, 164], "parallel": 53, "fals": [53, 59, 77, 86, 102, 103, 104, 110, 111, 115, 123, 124, 139, 149, 151, 153, 159, 161, 162, 163, 164, 165, 176, 177, 179, 188, 195], "n_worker": 53, "arbitrari": [53, 59], "befor": [53, 133, 135, 136, 195], "process": [53, 86, 159, 195], "cpu": 53, "num_episod": 54, "wrapper": [54, 77, 85, 140, 157, 159, 174, 175, 176, 177], "run_trial": [54, 194], "explic": 54, "rather": 54, "via": [54, 153, 195], "get_env_descript": [57, 59, 61, 63, 65, 194], "overrid": [57, 59, 61, 63, 65, 91, 143, 144, 145, 148, 149], "child": [57, 59, 61, 63, 65, 150, 151, 153, 195], "get_observ": [57, 59, 61, 63, 65, 194], "reset": [57, 59, 61, 63, 65, 153, 194], "initi": [57, 59, 61, 63, 65, 77, 86, 139, 153, 161, 162, 163, 164], "start_visu": [57, 59, 61, 63, 65, 194], "turn": [57, 59, 61, 63, 65], "visual": [57, 59, 61, 63, 65, 146, 147, 150, 153, 193, 194, 195], "debugg": [57, 59, 61, 63, 65], "stop_visu": [57, 59, 61, 63, 65, 194], "off": [57, 59, 61, 63, 65], "out": [57, 59, 61, 63, 65, 86, 139, 159], "size": [59, 77, 86, 112], "3": [59, 144, 149, 186, 188, 195], "squar": [59, 106, 107, 116, 117, 128, 144, 151, 195], "grid": 59, "cell": 59, "side": [59, 153], "distinct": 59, "terminal_st": 59, "occupi": 59, "time": [59, 112, 157, 159], "timestep": [59, 81, 195], "max_tim": 59, "allow": 59, "expect": [59, 143, 144, 145, 148, 149, 151], "create_env_descript": [59, 194], "is_in_goal_st": [59, 194], "goal": [59, 195], "true": [59, 102, 104, 110, 111, 114, 121, 129, 130, 131, 143, 144, 145, 148, 149, 151, 161, 162, 163, 164, 165, 179, 195], "go": [59, 195], "back": [59, 133, 135, 136, 161, 162, 163], "between": [59, 102, 103, 104, 108, 109, 110, 111, 121, 123, 124, 126, 127, 129, 130, 148, 170, 195], "reach": 59, "next": 59, "update_posit": [59, 194], "posit": [59, 93, 97, 102, 103, 104, 108, 109, 110, 111, 115, 123, 124, 126, 127, 130, 144, 149, 151, 153, 195], "inform": [59, 195], "candid": [75, 76, 77, 86, 137, 139, 143, 144, 145, 148, 149, 157, 159, 161, 162, 163, 164, 194], "candidate_dataset": [77, 86], "n_safeti": [77, 86, 144], "parse_tre": [77, 157, 161, 162, 163, 166, 194, 195], "primary_object": [77, 139, 140, 157, 159, 161, 162, 163], "optimization_techniqu": [77, 161, 162, 163, 195], "barrier_funct": [77, 161, 162, 163, 195], "optim": [77, 86, 159, 161, 162, 163, 194, 195], "powel": [77, 195], "initial_solut": [77, 86], "regim": [77, 79, 80, 83, 151, 153, 154, 157, 195], "supervised_learn": [77, 79, 80, 83, 153, 154, 157, 195], "write_logfil": [77, 86, 159], "dataset": [77, 86, 122, 128, 143, 144, 145, 148, 149, 154, 157, 159, 161, 162, 163, 164, 165, 188, 194], "length": [77, 90, 144, 151], "safeti": [77, 86, 139, 143, 144, 145, 148, 149, 155, 156, 157, 159, 161, 162, 163, 164, 194], "when": [77, 102, 103, 104, 110, 111, 143, 145, 149, 153, 179, 195], "predict": [77, 90, 91, 93, 94, 95, 96, 97, 103, 104, 109, 114, 121, 123, 124, 129, 130, 131, 133, 135, 145, 149, 194, 195], "confid": [77, 143, 144, 145, 147, 148, 149, 150, 153, 164, 165, 195], "dure": [77, 86, 151, 159, 161, 162, 163, 195], "parsetre": [77, 157, 161, 162, 166, 194, 195], "pars": [77, 141, 143, 146, 147, 148, 150, 151, 152, 153, 154, 157, 161, 162, 163, 166, 193, 195], "tree": [77, 141, 143, 146, 147, 148, 150, 151, 152, 153, 154, 157, 161, 162, 163, 166, 193, 195], "behavior": [77, 81, 139, 141, 151, 152, 153, 157, 161, 162, 163, 194], "sole": [77, 139, 161, 162, 163], "absenc": [77, 139, 161, 162, 163], "loss": [77, 113, 118, 119, 139, 161, 162, 163, 195], "str": [77, 79, 80, 82, 83, 115, 120, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 157, 159, 161, 162, 163, 164, 165, 173, 174, 175, 176, 177, 179], "g": [77, 79, 80, 82, 83, 115, 120, 139, 143, 144, 145, 148, 149, 153, 154, 157, 161, 162, 163, 195], "gradient_desc": [77, 161, 162, 163, 194, 195], "categori": [77, 79, 80, 83, 153, 154, 157, 191], "machin": [77, 79, 80, 83, 88, 92, 99, 143, 144, 145, 148, 149, 153, 154, 157, 194, 195], "algorithm": [77, 78, 79, 80, 83, 85, 86, 87, 148, 153, 154, 157, 158, 159, 160, 161, 162, 163, 195], "reinforcement_learn": [77, 79, 80, 83, 153, 154, 157, 195], "write": [77, 86, 149, 159, 195], "output": [77, 135, 195], "calculate_batch": [77, 194], "batch_index": 77, "batch_siz": [77, 112, 139], "batch": [77, 112], "gradient": [77, 116, 117, 118, 135, 139, 140, 161, 162, 163, 164, 179, 195], "descent": [77, 139, 179, 195], "doe": [77, 148, 153, 194], "anyth": 77, "instead": 77, "batch_dataset": 77, "evaluate_primary_object": [77, 157, 159, 194], "primari": [77, 139, 140, 157, 159, 161, 162, 163, 164, 179, 195], "fix": [77, 144, 157, 159, 195], "input": [77, 93, 97, 112, 143, 144, 145, 148, 149, 173, 174, 184, 195], "numpi": [77, 86, 91, 93, 94, 95, 97, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 135, 136, 143, 144, 145, 148, 149, 157, 159, 182, 184], "evalu": [77, 115, 116, 120, 143, 144, 145, 148, 149, 153, 157, 159], "get_constraint_upper_bound": [77, 194], "upper": [77, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 153, 157, 159, 195], "objective_with_barri": [77, 194], "minimization_techniqu": 77, "barrier": [77, 195], "add": [77, 153], "larg": 77, "penalti": 77, "violat": [77, 153, 195], "nsf": [77, 86, 159, 195], "build": [78, 141, 152, 153, 160], "load": [78, 80, 84, 174, 175, 195], "num_datapoint": [79, 83], "meta_inform": [79, 82, 83], "datafram": [79, 82, 83, 105, 125, 143, 144, 145, 148, 149, 153], "row": [79, 83, 114, 131, 145, 148, 179, 195], "rl": [79, 81, 82, 83, 153, 161, 184, 194, 195], "column": [79, 83, 114, 131, 143, 144, 145, 148, 149, 153, 154, 195], "load_rl_dataset_from_csv": [80, 194, 195], "filenam": [80, 84, 174, 175, 176, 177, 191, 195], "metadata_filenam": [80, 195], "rldataset": [80, 194, 195], "csv": [80, 195], "episode_index": 80, "probability_of_act": 80, "load_rl_dataset_from_episode_fil": [80, 194, 195], "pickl": [80, 159, 175, 177, 195], "load_supervised_dataset": [80, 194, 195], "file_typ": 80, "superviseddataset": [80, 194, 195], "label": [80, 83, 89, 90, 91, 93, 94, 95, 96, 97, 104, 106, 107, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 128, 129, 130, 131, 133, 135, 143, 144, 145, 148, 149, 159, 179, 195], "sensit": [80, 159, 195], "extens": 80, "action_prob": 81, "episode_col_nam": 82, "o": 82, "r": [82, 117, 118], "pi_b": 82, "sensitive_col_nam": 82, "sensitive_attr": [82, 83], "json": [84, 174, 176, 195], "hyperparamet": [85, 86, 161, 162, 163, 195], "spec": [86, 159, 194], "all_frac_data_in_candidate_select": 86, "find": [86, 139, 195], "best": [86, 195], "safe": 86, "solut": [86, 139, 153, 157, 159, 179, 195], "note": [86, 195], "onli": [86, 92, 144, 151, 179, 195], "split": [86, 153, 159, 195], "percentag": 86, "complet": [86, 159, 194, 195], "fraction": [86, 159, 161, 162, 163, 164], "being": [86, 102, 108, 109, 110, 111, 123, 124, 126, 127, 129, 130, 143, 145, 149], "consid": [86, 144], "bootstrap_sample_dataset": [86, 194], "n_bootstrap": 86, "bootstrap": 86, "sampl": [86, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 117, 120, 125, 144, 182, 195], "point": [86, 90, 96, 113, 119, 139, 148, 174, 175, 186, 187, 188, 195], "desir": 86, "candidate_select": [86, 159, 194], "should": [86, 195], "create_dataset": [86, 194], "frac_data_in_safeti": [86, 159, 161, 162, 163, 164, 165], "shuffl": 86, "partit": [86, 195], "test": [86, 139, 143, 144, 145, 148, 149, 155, 156, 157, 159, 161, 162, 163, 164, 179, 194], "remain": [86, 159, 161, 162, 163, 164], "est_prob_pass": [86, 194], "rho_prim": 86, "safety_dataset": [86, 157], "n_candid": [86, 144], "write_cs_logfil": [86, 159, 195], "bootstrap_it": 86, "100": [86, 139, 144], "estim": [86, 105, 125, 143, 144, 145, 149, 195], "probabiilti": 86, "find_best_hyperparam": [86, 194], "indic": [86, 145, 159, 169, 195], "includ": [86, 89, 90, 96, 114, 131, 153, 195], "rtyle": 86, "tupl": [86, 153, 159, 195], "get_initial_solut": [86, 194], "soluion": 86, "get_safety_s": [86, 194], "n_total": 86, "amount": 86, "run_cor": [86, 194], "core": [86, 194], "log": [86, 153, 159, 195], "passed_safeti": [86, 159, 195], "found": [86, 139, 157, 159, 195], "pass": [86, 133, 135, 136, 143, 144, 145, 148, 149, 153, 157, 159, 164, 195], "run_safety_test": [86, 159, 194], "candidate_solut": [86, 159], "some": [86, 153, 159, 195], "other": [86, 149, 159, 195], "mean": [86, 106, 107, 117, 122, 128, 148, 151, 159, 186, 187, 188, 195], "safety_test": [86, 159, 194, 195], "main": [88, 152, 194], "classificationmodel": [89, 93, 97, 194, 195], "binari": [89, 90, 92, 113, 118], "multi": [89, 96, 119, 151], "logist": [89, 90, 96, 113, 118, 119], "regress": [89, 90, 91, 94, 95, 96, 98, 148, 151, 153, 154, 163, 195], "fit": [89, 90, 91, 94, 95, 96, 194, 195], "train": [89, 90, 91, 94, 95, 96, 195], "let": [89, 90, 96, 114, 131, 195], "datapoint": [89, 90, 96, 112, 114, 131, 133, 157], "j": [89, 90, 96, 114, 131, 133, 145], "bia": [89, 90, 96, 114, 131], "term": [89, 90, 96, 114, 131, 133, 139], "provi": [89, 90, 96, 114, 131, 195], "k": [89, 90, 96, 114, 131, 145], "baselogisticregressionmodel": [90, 96, 194], "have": [90, 93, 96, 97, 153, 195], "linearregressionmodel": [91, 194, 195], "sever": [91, 144, 148, 195], "parent": [91, 92, 98, 99, 100, 144, 148], "assum": 91, "intercept": [91, 133], "nxm": [91, 94, 95], "nx1": [91, 94, 95], "origin": 91, "squash": 91, "supervisedmodel": [92, 98, 135, 194], "classif": [92, 113, 119, 149, 151, 153, 163, 195], "support": [92, 151, 195], "classifi": [93, 97], "alwai": [93, 97, 139, 143, 144, 145, 148, 149, 153, 195], "regardless": [93, 97, 195], "regressionmodel": [94, 95, 194, 195], "ha": [97, 149, 151, 195], "prob": 97, "supervis": [100, 135, 151, 153, 163, 195], "neg": [102, 103, 104, 108, 110, 121, 123, 124, 126, 129, 151, 153], "rate": [102, 103, 104, 108, 109, 110, 111, 115, 121, 123, 124, 126, 127, 129, 130, 139, 149, 151, 153, 195], "whole": [102, 103, 104, 106, 107, 108, 109, 110, 111, 115, 153], "fact": [102, 110, 111], "wa": [102, 103, 104, 110, 111, 114, 131, 148, 149, 153, 159, 195], "instanc": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136], "probabilist": [103, 104], "averag": [103, 104, 113, 119, 179], "over": [103, 104, 105, 106, 107, 113, 115, 119, 133, 157, 195], "truth": 103, "weighted_return": [105, 125], "unweight": [105, 125], "import": [105, 125, 139, 193, 195], "error": [106, 107, 116, 117, 122, 128, 144, 148, 151, 194, 195], "y_hat": 106, "func": 112, "n": [112, 179, 195], "num_batch": 112, "up": [112, 148, 153, 195], "measur": [112, 143, 145, 149, 151, 153, 157, 195], "l_i": [114, 131], "l_k": [114, 131], "element": [114, 131], "confus": [114, 131, 145, 151], "correspond": [114, 131, 154, 183, 195], "statistic_nam": [115, 120], "data_dict": [115, 120, 143, 144, 145, 148, 149], "datas": [115, 120, 143, 144, 145, 148, 149], "statist": [115, 120, 143, 149, 151, 195], "fpr": [115, 120, 143, 151, 195], "analyt": 116, "w": [117, 118], "t": [117, 118, 143, 144, 145, 148, 149, 183], "perceptron": 118, "correct": [121, 182], "vector": [122, 125, 128, 135, 136, 139, 143, 144, 145, 148, 149, 182], "subject": [123, 124, 129, 130, 195], "actual": [123, 124, 129, 130, 144, 195], "supervisedsklearnbasemodel": [133, 136, 194], "regressor": 133, "scikit": [133, 135, 195], "backward_pass": [133, 135, 194], "jacobian": [133, 136], "d": [133, 136], "forward_pass": [133, 135, 194], "dtheta_": 133, "keep": [133, 153], "mind": 133, "henc": 133, "create_model": [133, 135, 194], "make": [133, 153, 179, 195], "get_model_param": [133, 135, 194], "arg": [133, 135, 191], "flatten": [133, 135], "1d": [133, 135], "do": [133, 135, 136, 194], "forward": [133, 135, 136], "through": [133, 135, 136, 148, 153, 157], "sklearn": [133, 135, 136], "pred_numpi": [133, 135], "rtype": [133, 135], "update_model_param": [133, 135, 194], "reshap": [133, 135], "external_grad": 135, "backward": [135, 136], "respect": 135, "obtain": [136, 140], "pred": 136, "dtheta": 136, "result": [136, 195], "inherit": [136, 145, 149, 195], "fn": 136, "repres": [136, 143, 146, 147, 151, 153, 195], "oper": [136, 143, 147, 194, 195], "n_constraint": 139, "upper_bounds_funct": [139, 140], "theta_init": 139, "lambda_init": [139, 161, 162, 163], "batch_calcul": 139, "n_batch": 139, "n_epoch": 139, "alpha_theta": [139, 161, 162, 163], "05": [139, 143, 144, 145, 148, 149, 195], "alpha_lamb": [139, 161, 162, 163], "beta_veloc": [139, 161, 162, 163], "9": [139, 161, 162, 163, 184, 195], "beta_rmsprop": [139, 161, 162, 163], "gradient_librari": [139, 140, 161, 162, 163], "autograd": [139, 140, 161, 162, 163, 164], "verbos": [139, 161, 162, 163, 164, 165, 176, 177], "simultan": 139, "ascent": 139, "adam": [139, 161, 162, 163, 195], "lagrangian": [139, 179, 195], "l": [139, 159, 179, 195], "lambda": [139, 195], "f": [139, 148, 159, 179, 195], "lagrang": [139, 179], "multipli": [139, 153, 179], "done": 139, "saddl": 139, "Being": 139, "part": [139, 195], "No": [139, 195], "decai": 139, "veloc": 139, "rmsprop": 139, "num_it": [139, 161, 162, 163], "iter": [139, 148, 195], "librari": [139, 140, 194, 195], "comput": [139, 140, 148, 149, 153, 161, 162, 163], "automat": [139, 140], "boolean": [139, 151, 164, 165, 177, 188, 195], "flag": [139, 164, 165, 177, 188, 195], "control": [139, 164, 165, 188, 195], "lower": [143, 144, 145, 146, 147, 148, 149, 150, 153], "inf": [143, 144, 145, 147, 148, 149], "conditional_column": [143, 144, 145, 148, 149], "leaf": [143, 146, 147, 157], "condit": [143, 144, 145, 148, 149, 153, 154], "node_typ": [143, 146], "equal": [143, 153, 154, 157, 195], "base_nod": 143, "delta": [143, 144, 145, 148, 149, 153, 154, 164, 165, 195], "share": [143, 144, 148], "put": [143, 144, 148], "measure_function_nam": 143, "measure_funct": [143, 195], "calculate_bound": [143, 144, 145, 148, 149, 194], "bound_method": [143, 144, 145, 148, 149], "calculate_data_forbound": [143, 144, 145, 148, 149, 194], "prepar": [143, 144, 145, 149], "calculate_valu": [143, 144, 145, 148, 149, 194], "etc": [143, 145, 147, 148, 149], "compute_hc_lowerbound": [143, 144, 145, 148, 149, 194], "high": [143, 144, 145, 148, 149], "level": [143, 144, 145, 148, 149, 153, 195], "compute_hc_upper_and_lowerbound": [143, 144, 145, 148, 149, 194], "compute_hc_upperbound": [143, 144, 145, 148, 149, 194], "independ": [143, 144, 145, 148, 149, 195], "mask_data": [143, 144, 145, 148, 149, 194], "mask": [143, 144, 145, 148, 149], "joint": [143, 144, 145, 148, 149], "AND": [143, 144, 145, 148, 149], "predict_hc_lowerbound": [143, 144, 145, 148, 149, 194], "predict_hc_upper_and_lowerbound": [143, 144, 145, 148, 149, 194], "predict_hc_upperbound": [143, 144, 145, 148, 149, 194], "zhat": [143, 144, 145, 148, 149, 194], "unbias": [143, 144, 145, 149], "basenod": [144, 145, 148, 149, 194], "custom": [144, 148, 151, 195], "cvar_alpha": 144, "alpha": 144, "definit": [144, 195], "least": [144, 195], "var_alpha": 144, "largest": 144, "thoma": [144, 148], "miller": 144, "2019": [144, 148], "peopl": 144, "umass": 144, "pthoma": 144, "paper": 144, "thomas2019": 144, "pdf": 144, "theorem": 144, "threshold": [144, 164, 165], "cvar": 144, "sort": 144, "b": [144, 151, 153], "cm_true_index": 145, "cm_pred_index": 145, "c_00": 145, "c_01": 145, "c_0k": 145, "______": 145, "_____": 145, "c_10": 145, "c_11": 145, "c_1k": 145, "c_k0": 145, "c_k1": 145, "c_kk": 145, "constant": [146, 153, 184, 195], "constant_nod": 146, "represent": [146, 147, 150, 151], "what": [146, 147, 150, 194], "displai": [146, 147, 150, 153, 179], "insid": [146, 147, 150], "box": [146, 147, 150, 195], "graph": [146, 147, 150, 153, 193], "intern": [147, 195], "non": 147, "These": [147, 195], "perform": [147, 151, 195], "wise": 148, "differ": [148, 195], "male": [148, 195], "femal": [148, 195], "present": [148, 153], "et": 148, "al": 148, "www": [148, 183], "scienc": 148, "org": 148, "stoken": 148, "author": 148, "token": 148, "st": 148, "119": 148, "full": [148, 179, 195], "figur": [148, 179, 195], "precalculate_data": [148, 194], "preconfigur": 148, "so": [148, 153, 195], "need": [148, 150, 153, 154, 160, 195], "recalcul": 148, "panda": 148, "y_i": 148, "y_hat_i": 148, "m": [148, 153, 195], "y_j": 148, "y_hat_j": 148, "There": [148, 153, 195], "mai": [148, 173, 195], "n_male": 148, "n_femal": 148, "class_index": 149, "against": 149, "one": [149, 151, 153, 161, 162, 163, 164, 195], "thei": [149, 151, 179, 195], "fpr_": 149, "left": [150, 153, 195], "right": [150, 153, 195], "will_lower_bound": 150, "will_upper_bound": 150, "global": 151, "construct": [151, 195], "measure_functions_dict": [151, 194], "sub_regim": [151, 153, 154, 163, 195], "appear": [151, 153, 195], "recogn": 151, "special": [151, 195], "organ": 151, "sub": [151, 153, 154, 195], "pr": [151, 153, 195], "nr": 151, "tpr": [151, 195], "fnr": 151, "tnr": 151, "acc": 151, "accuraci": [151, 194], "cm": 151, "relev": [151, 179], "mean_error": [151, 153, 194], "mean_squared_error": [151, 194, 195], "reinforc": [151, 195], "j_pi_new": [151, 195], "custom_base_node_dict": [151, 194], "map": 151, "node": [151, 153, 154, 157, 161, 162, 163, 194, 195], "op_mapp": [151, 194], "ast": [151, 153], "not_supported_op_mapp": [151, 194], "bounds_required_dict": [151, 194], "requir": [151, 153, 162, 193, 195], "If": [151, 153, 161, 162, 163, 164, 193, 194, 195], "two": [151, 153, 195], "children": [151, 153], "like": [151, 153, 195], "need_a_low": 151, "need_a_upp": 151, "need_b_low": 151, "need_b_upp": 151, "can": [153, 164, 165, 195], "ml": [153, 195], "user": [153, 195], "appropri": 153, "root": [153, 157], "assign": 153, "built": [153, 161, 162, 163, 164, 195], "constraint_str": [153, 154, 164, 165], "express": [153, 195], "n_node": 153, "n_base_nod": 153, "more": [153, 195], "onc": [153, 195], "contribut": 153, "base_node_dict": 153, "track": 153, "uniqu": 153, "been": [153, 195], "alreadi": [153, 195], "help": [153, 183], "handl": 153, "case": [153, 169, 195], "duplic": [153, 166], "node_fonts": 153, "fontsiz": 153, "graphviz": [153, 193], "available_measure_funct": 153, "_ab": [153, 194], "absolut": [153, 195], "interv": 153, "_add": [153, 194], "_assign_bounds_help": [153, 194], "lower_need": 153, "upper_need": 153, "travers": 153, "_assign_deltas_help": [153, 194], "weight_method": 153, "_ast2pt_nod": [153, 194], "ast_nod": 153, "_ast_tree_help": [153, 194], "recurs": 153, "_div": [153, 194], "divid": 153, "_evaluator_help": [153, 194], "_exp": [153, 194], "_log": [153, 194], "_max": [153, 194], "_min": [153, 194], "_mult": [153, 194], "_pow": [153, 194], "pow": 153, "_preprocess_constraint_str": [153, 194], "inequ": [153, 195], "move": 153, "everyth": 153, "final": 153, "form": [153, 195], "sure": 153, "mathemat": [153, 195], "written": [153, 195], "python": [153, 183, 193, 195], "syntax": 153, "_propagate_valu": [153, 194], "propag": [153, 157, 194], "_propagator_help": [153, 194], "_protect_nan": [153, 194], "bound_typ": 153, "nan": 153, "infin": 153, "postit": 153, "_sub": [153, 194], "subract": 153, "assign_bounds_need": [153, 194], "breadth": 153, "search": 153, "decid": 153, "eventu": 153, "necessari": [153, 195], "end": [153, 195], "care": 153, "assign_delta": [153, 194], "among": 153, "build_tre": [153, 194], "delta_weight_method": [153, 154], "create_from_ast": [153, 194], "structur": 153, "evaluate_constraint": [153, 194], "itself": 153, "postord": 153, "logic": 153, "make_viz": [153, 194], "titl": 153, "diagram": 153, "top": [153, 195], "make_viz_help": [153, 194], "edg": 153, "digraph": 153, "propagate_bound": [153, 194], "reset_base_node_dict": [153, 194], "reset_data": 153, "less": [153, 157, 195], "frequent": 153, "defult": 154, "classifict": 154, "across": 154, "batch_size_safeti": [157, 159, 161, 162, 163], "loop": 157, "introspect": 159, "candidate_safety_split": [159, 194], "f_c": 159, "f_": 159, "l_c": 159, "l_": 159, "s_c": 159, "s_": 159, "detail": [159, 195], "branch": 159, "either": [159, 195], "get_cs_result": [159, 194], "get_st_upper_bound": [159, 194], "last": [159, 195], "upper_bounds_dict": 159, "kei": [159, 195], "initial_solution_fn": [161, 162, 163, 164], "base_node_bound_method_dict": [161, 162, 163], "use_builtin_primary_gradient_fn": [161, 162, 163, 164], "custom_primary_gradient_fn": [161, 162, 163], "optimization_hyperparam": [161, 162, 163, 195], "005": [161, 162, 163], "95": [161, 162, 163], "hyper_search": [161, 162, 163], "200": [161, 162, 163], "use_batch": [161, 163], "regularization_hyperparam": [161, 162, 163], "rl_model": [161, 164, 194, 195], "exist": [161, 162, 163, 164], "fall": [161, 162, 163], "builtin": [161, 162, 163], "regular": [161, 162, 163], "save_dir": [164, 165], "later": [164, 165], "chang": [164, 165, 179], "directori": [164, 165, 173, 195], "pkl": [164, 165, 195], "glag": [164, 165], "metadata_pth": 165, "supervisedspec": [165, 194, 195], "array_in": 169, "argmax": 169, "multipl": [169, 195], "tie": 169, "val_in": 170, "min_val": 170, "max_val": 170, "limit": 170, "output_str": 171, "indent": 176, "abl": 177, "primary_objective_nam": [179, 195], "plot_running_avg": 179, "savenam": 179, "png": 179, "show": [179, 195], "evolut": [179, 195], "One": [179, 195], "subplot": [179, 195], "repeat": [179, 195], "plot": [179, 195], "ii": 179, "lambda_i": [179, 195], "iii": 179, "g_i": [179, 195], "iv": 179, "lagranian": 179, "sum_i": 179, "plt": 179, "v": 182, "standard": [182, 186, 187, 188], "deviat": [182, 186, 187, 188], "bessel": 182, "nu": 183, "invers": [183, 195], "student": 183, "cdf": 183, "degre": 183, "freedom": 183, "matlab": 183, "mathwork": 183, "com": 183, "stat": 183, "html": 183, "arr": 184, "num_point": [186, 187, 188], "loc_x": [186, 187, 188], "loc_i": [186, 187, 188], "sigma_x": [186, 187, 188], "sigma_i": [186, 187, 188], "clip_min": [186, 188], "clip_max": [186, 188], "2d": [186, 187, 188], "distribut": [186, 187, 188], "clip": [186, 188], "option": [188, 195], "msg": 191, "lineno": 191, "seldonian": [193, 195], "pip": 193, "Then": 193, "system": 193, "wide": 193, "recommend": 193, "welcom": 194, "toolkit": [194, 195], "sourc": 194, "code": [194, 195], "host": 194, "github": 194, "overview": 194, "interfac": 194, "sa": 194, "start": [194, 195], "instal": 194, "tutori": [194, 195], "api": [194, 195], "fourier": 194, "discrete_random_ag": 194, "function_approxim": 194, "linear_fa": 194, "linear_state_action_value_fa": 194, "construct_q_table_from_env_descript": 194, "parameterized_non_learning_softmax_ag": 194, "discretesoftmax": [194, 195], "keyboard_gridworld": 194, "mountain_car_rough_solut": 194, "check_space_typ": 194, "continuous_spac": 194, "rl_generate_dataset_and_spec_fil": 194, "get_constraint_str": 194, "get_env_kwarg": 194, "get_metadata_path": 194, "print_return_info": 194, "rl_runner": 194, "create_ag": 194, "run_all_tri": 194, "run_episod": 194, "run_episode_from_dict": 194, "run_trial_given_agent_and_env": 194, "mountaincar": 194, "n_step_mountaincar": 194, "simglucose_env": 194, "simglucos": 194, "generate_gridworld_episod": 194, "generate_mountaincar_episod": 194, "generate_simglucose_episod": 194, "get_max_ob": 194, "hyperparams_and_set": 194, "define_hyperparameter_and_setting_dict": 194, "candidateselect": [194, 195], "load_supervised_metadata": 194, "datasetload": [194, 195], "hyperparam_search": 194, "hyperparamsearch": 194, "binarylogisticregressionmodel": 194, "boundedlinearregressionmodel": 194, "dummyclassifiermodel": 194, "linearregressionmodellistfeatur": 194, "multiclasslogisticregressionmodel": 194, "randomclassifiermodel": 194, "false_negative_r": 194, "false_positive_r": 194, "is_estim": 194, "negative_r": 194, "positive_r": 194, "true_negative_r": 194, "true_positive_r": 194, "batcher": 194, "binary_logistic_loss": 194, "confusion_matrix": 194, "evaluate_statist": 194, "gradient_bounded_squared_error": 194, "gradient_mean_squared_error": 194, "gradient_binary_logistic_loss": 194, "multiclass_logistic_loss": 194, "sample_from_statist": 194, "vector_accuraci": 194, "vector_error": 194, "vector_false_negative_r": 194, "vector_false_positive_r": 194, "vector_is_estim": 194, "vector_negative_r": 194, "vector_positive_r": 194, "vector_squared_error": 194, "vector_true_negative_r": 194, "vector_true_positive_r": 194, "vector_confusion_matrix": 194, "sklearn_lr": 194, "sklearnlinearregressor": 194, "sklearn_model": 194, "sklearn_predict_vjp": 194, "gradient_descent_adam": 194, "setup_gradi": 194, "cvarsqebasenod": 194, "confusionmatrixbasenod": 194, "constantnod": 194, "internalnod": 194, "medcustombasenod": 194, "multiclassbasenod": 194, "make_parse_trees_from_constraint": 194, "safetytest": [194, 195], "seldonian_algorithm": [194, 195], "seldonianalgorithm": [194, 195], "createrlspec": [194, 195], "createsupervisedspec": [194, 195], "validate_parse_tre": 194, "util": [194, 195], "rl_util": 194, "argmax_multi": 194, "clamp": 194, "io_util": [194, 195], "dir_path": 194, "load_json": 194, "load_pickl": [194, 195], "save_json": 194, "save_pickl": 194, "plot_util": [194, 195], "plot_gradient_desc": [194, 195], "stats_util": 194, "stddev": 194, "tinv": 194, "weighted_sum_gamma": 194, "tutorial_util": 194, "generate_clipped_data": 194, "generate_data": 194, "make_synthetic_regression_dataset": 194, "warn": 194, "custom_warn": 194, "custom_formatwarn": 194, "document": 195, "homepag": 195, "In": 195, "page": 195, "few": 195, "hand": 195, "illustr": 195, "simul": 195, "realist": 195, "most": 195, "piec": 195, "cover": 195, "could": 195, "unifi": 195, "work": 195, "pattern": 195, "concept": 195, "conceptu": 195, "enforc": 195, "develop": 195, "design": 195, "applic": 195, "command": 195, "line": 195, "graphic": 195, "short": 195, "underli": 195, "discuss": 195, "below": 195, "well": 195, "manual": 195, "loader": 195, "comma": 195, "separ": 195, "header": 195, "categor": 195, "numer": 195, "might": 195, "look": 195, "622": 195, "491": 195, "56": 195, "439": 195, "93": 195, "707": 195, "64": 195, "663": 195, "65": 195, "557": 195, "09": 195, "711": 195, "37": 195, "731": 195, "31": 195, "509": 195, "33333": 195, "538": 195, "490": 195, "58": 195, "406": 195, "59": 195, "529": 195, "532": 195, "28": 195, "447": 195, "23": 195, "527": 195, "379": 195, "14": 195, "488": 195, "98333": 195, "455": 195, "18": 195, "440": 195, "570": 195, "86": 195, "417": 195, "54": 195, "453": 195, "53": 195, "425": 195, "87": 195, "475": 195, "63": 195, "476": 195, "11": 195, "407": 195, "15": 195, "97333": 195, "756": 195, "91": 195, "679": 195, "62": 195, "531": 195, "583": 195, "534": 195, "42": 195, "521": 195, "592": 195, "41": 195, "783": 195, "76": 195, "588": 195, "26": 195, "53333": 195, "hot": 195, "10": 195, "integ": 195, "25": 195, "second": 195, "intention": 195, "exclud": 195, "your": 195, "problem": 195, "label_column": 195, "try": 195, "sensitive_column": 195, "biggest": 195, "logisticregressionmodel": 195, "essenti": 195, "wrap": 195, "linearregress": 195, "unless": 195, "own": 195, "know": 195, "though": 195, "chosen": 195, "explicitli": 195, "thing": 195, "extend": 195, "py": 195, "_": 195, "directli": 195, "often": 195, "five": 195, "follow": 195, "math": 195, "nativ": 195, "ab": 195, "exp": 195, "239": 195, "trigger": 195, "open": 195, "ad": 195, "quantiti": 195, "It": 195, "someth": 195, "wai": 195, "wrote": 195, "instruct": 195, "recal": 195, "leq": 195, "satisfi": 195, "howev": 195, "cumbersom": 195, "symbol": 195, "interpret": 195, "ident": 195, "themselv": 195, "tri": 195, "basic": 195, "plain": 195, "english": 195, "88": 195, "greater": 195, "commonli": 195, "fair": 195, "filter": 195, "atr1": 195, "atr2": 195, "placehold": 195, "parenthes": 195, "surround": 195, "statement": 195, "sai": 195, "r1": 195, "r2": 195, "stand": 195, "race": 195, "demograph": 195, "pariti": 195, "toler": 195, "ratio": 195, "dispar": 195, "impact": 195, "anoth": 195, "permit": 195, "belong": 195, "bundl": 195, "shown": 195, "block": 195, "At": 195, "broad": 195, "scope": 195, "throught": 195, "now": 195, "happen": 195, "even": 195, "small": 195, "techniqu": 195, "black": 195, "cost": 195, "forc": 195, "toward": 195, "feasibl": 195, "cg": 195, "nelder": 195, "mead": 195, "bfg": 195, "cma": 195, "scipi": 195, "minim": 195, "solver": 195, "covari": 195, "adapt": 195, "strategi": 195, "kkt": 195, "situat": 195, "contraint": 195, "conflict": 195, "vanilla": 195, "oscil": 195, "boundari": 195, "dampen": 195, "momentum": 195, "our": 195, "mitig": 195, "far": 195, "accept": 195, "hat": 195, "mathcal": 195, "ran": 195, "convent": 195, "candidate_selection_log": 195, "increas": 195, "overwritten": 195, "log_fil": 195, "candidate_selection_log0": 195, "cs_dict": 195, "produc": 195, "1500": 195, "red": 195, "area": 195, "middl": 195, "region": 195, "dot": 195, "its": 195, "deem": 195, "assembl": 195, "interact": 195}, "objects": {"": [[0, 0, 0, "-", "seldonian"]], "seldonian": [[1, 0, 0, "-", "RL"], [75, 0, 0, "-", "candidate_selection"], [78, 0, 0, "-", "dataset"], [85, 0, 0, "-", "hyperparam_search"], [87, 0, 0, "-", "models"], [137, 0, 0, "-", "optimizers"], [141, 0, 0, "-", "parse_tree"], [155, 0, 0, "-", "safety_test"], [158, 0, 0, "-", "seldonian_algorithm"], [160, 0, 0, "-", "spec"], [167, 0, 0, "-", "utils"], [189, 0, 0, "-", "warnings"]], "seldonian.RL": [[2, 0, 0, "-", "Agents"], [33, 0, 0, "-", "Env_Description"], [40, 0, 0, "-", "RL_generate_dataset_and_spec_file"], [46, 0, 0, "-", "RL_model"], [48, 0, 0, "-", "RL_runner"], [55, 0, 0, "-", "environments"], [66, 0, 0, "-", "generate_gridworld_episodes"], [68, 0, 0, "-", "generate_mountaincar_episodes"], [70, 0, 0, "-", "generate_simglucose_episodes"], [73, 0, 0, "-", "hyperparams_and_settings"]], "seldonian.RL.Agents": [[3, 0, 0, "-", "Agent"], [5, 0, 0, "-", "Bases"], [8, 0, 0, "-", "Discrete_Random_Agent"], [10, 0, 0, "-", "Function_Approximators"], [20, 0, 0, "-", "Parameterized_non_learning_softmax_agent"], [22, 0, 0, "-", "Policies"], [29, 0, 0, "-", "keyboard_gridworld"], [31, 0, 0, "-", "mountain_car_rough_solution"]], "seldonian.RL.Agents.Agent": [[4, 1, 1, "", "Agent"]], "seldonian.RL.Agents.Agent.Agent": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "__repr__"], [4, 2, 1, "", "choose_action"], [4, 2, 1, "", "get_params"], [4, 2, 1, "", "get_prob_this_action"], [4, 2, 1, "", "set_new_params"], [4, 2, 1, "", "update"]], "seldonian.RL.Agents.Bases": [[6, 0, 0, "-", "Fourier"]], "seldonian.RL.Agents.Bases.Fourier": [[7, 1, 1, "", "Fourier"]], "seldonian.RL.Agents.Bases.Fourier.Fourier": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "__repr__"], [7, 2, 1, "", "calculate_num_features"], [7, 2, 1, "", "construct_basis_matrix"], [7, 2, 1, "", "get_features"], [7, 2, 1, "", "get_normalized_observation"]], "seldonian.RL.Agents.Discrete_Random_Agent": [[9, 1, 1, "", "Discrete_Random_Agent"]], "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "__repr__"], [9, 2, 1, "", "choose_action"], [9, 2, 1, "", "get_params"], [9, 2, 1, "", "get_prob_this_action"], [9, 2, 1, "", "set_new_params"], [9, 2, 1, "", "update"]], "seldonian.RL.Agents.Function_Approximators": [[11, 0, 0, "-", "Function_Approximator"], [13, 0, 0, "-", "Linear_FA"], [16, 0, 0, "-", "Table"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator": [[12, 1, 1, "", "Function_Approximator"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "__repr__"], [12, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA": [[14, 1, 1, "", "Linear_FA"], [15, 1, 1, "", "Linear_state_action_value_FA"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "__repr__"], [14, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "__repr__"], [15, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Table": [[17, 1, 1, "", "Q_Table"], [18, 1, 1, "", "Table"], [19, 3, 1, "", "construct_Q_Table_From_Env_Description"]], "seldonian.RL.Agents.Function_Approximators.Table.Q_Table": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "__repr__"], [17, 2, 1, "", "from_environment_state_to_0_indexed_state"], [17, 2, 1, "", "get_action_values_given_state"], [17, 2, 1, "", "get_action_values_given_zero_indexed_state"], [17, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Table.Table": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "__repr__"], [18, 2, 1, "", "from_environment_state_to_0_indexed_state"], [18, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent": [[21, 1, 1, "", "Parameterized_non_learning_softmax_agent"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "__repr__"], [21, 2, 1, "", "choose_action"], [21, 2, 1, "", "get_action_values"], [21, 2, 1, "", "get_params"], [21, 2, 1, "", "get_prob_this_action"], [21, 2, 1, "", "set_new_params"], [21, 2, 1, "", "update"]], "seldonian.RL.Agents.Policies": [[23, 0, 0, "-", "Policy"], [26, 0, 0, "-", "Softmax"]], "seldonian.RL.Agents.Policies.Policy": [[24, 1, 1, "", "Discrete_Action_Policy"], [25, 1, 1, "", "Policy"]], "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "__repr__"], [24, 2, 1, "", "choose_action"], [24, 2, 1, "", "construct_basis_and_linear_FA"], [24, 2, 1, "", "from_0_indexed_action_to_environment_action"], [24, 2, 1, "", "from_environment_action_to_0_indexed_action"], [24, 2, 1, "", "get_action_values_given_state"], [24, 2, 1, "", "get_params"], [24, 2, 1, "", "get_prob_this_action"], [24, 2, 1, "", "make_state_action_FA"], [24, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Policy.Policy": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "__repr__"], [25, 2, 1, "", "choose_action"], [25, 2, 1, "", "get_params"], [25, 2, 1, "", "get_prob_this_action"], [25, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Softmax": [[27, 1, 1, "", "DiscreteSoftmax"], [28, 1, 1, "", "Softmax"]], "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "__repr__"], [27, 2, 1, "", "_arg"], [27, 2, 1, "", "_denom"], [27, 2, 1, "", "choose_action"], [27, 2, 1, "", "choose_action_from_action_values"], [27, 2, 1, "", "construct_basis_and_linear_FA"], [27, 2, 1, "", "from_0_indexed_action_to_environment_action"], [27, 2, 1, "", "from_environment_action_to_0_indexed_action"], [27, 2, 1, "", "get_action_probs_from_action_values"], [27, 2, 1, "", "get_action_values_given_state"], [27, 2, 1, "", "get_e_to_the_something_terms"], [27, 2, 1, "", "get_params"], [27, 2, 1, "", "get_prob_this_action"], [27, 2, 1, "", "make_state_action_FA"], [27, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Softmax.Softmax": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "__repr__"], [28, 2, 1, "", "choose_action"], [28, 2, 1, "", "choose_action_from_action_values"], [28, 2, 1, "", "construct_basis_and_linear_FA"], [28, 2, 1, "", "from_0_indexed_action_to_environment_action"], [28, 2, 1, "", "from_environment_action_to_0_indexed_action"], [28, 2, 1, "", "get_action_probs_from_action_values"], [28, 2, 1, "", "get_action_values_given_state"], [28, 2, 1, "", "get_e_to_the_something_terms"], [28, 2, 1, "", "get_params"], [28, 2, 1, "", "get_prob_this_action"], [28, 2, 1, "", "make_state_action_FA"], [28, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.keyboard_gridworld": [[30, 1, 1, "", "Keyboard_gridworld"]], "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld": [[30, 2, 1, "", "__init__"], [30, 2, 1, "", "__repr__"], [30, 2, 1, "", "choose_action"], [30, 2, 1, "", "get_params"], [30, 2, 1, "", "get_prob_this_action"], [30, 2, 1, "", "set_new_params"], [30, 2, 1, "", "update"]], "seldonian.RL.Agents.mountain_car_rough_solution": [[32, 1, 1, "", "Mountain_car_rough_solution"]], "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution": [[32, 2, 1, "", "__init__"], [32, 2, 1, "", "__repr__"], [32, 2, 1, "", "choose_action"], [32, 2, 1, "", "get_params"], [32, 2, 1, "", "get_prob_this_action"], [32, 2, 1, "", "set_new_params"], [32, 2, 1, "", "update"]], "seldonian.RL.Env_Description": [[34, 0, 0, "-", "Env_Description"], [37, 0, 0, "-", "Spaces"]], "seldonian.RL.Env_Description.Env_Description": [[35, 1, 1, "", "Env_Description"], [36, 3, 1, "", "check_space_type"]], "seldonian.RL.Env_Description.Env_Description.Env_Description": [[35, 2, 1, "", "__init__"], [35, 2, 1, "", "__repr__"], [35, 2, 1, "", "get_min_action"], [35, 2, 1, "", "get_min_state"], [35, 2, 1, "", "get_num_actions"], [35, 2, 1, "", "get_num_observation_dims"], [35, 2, 1, "", "get_num_states"]], "seldonian.RL.Env_Description.Spaces": [[38, 1, 1, "", "Continuous_Space"], [39, 1, 1, "", "Discrete_Space"]], "seldonian.RL.Env_Description.Spaces.Continuous_Space": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "__repr__"], [38, 2, 1, "", "check_bounds_valid"], [38, 2, 1, "", "get_num_dims"]], "seldonian.RL.Env_Description.Spaces.Discrete_Space": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "__repr__"], [39, 2, 1, "", "get_num_values"]], "seldonian.RL.RL_generate_dataset_and_spec_file": [[41, 3, 1, "", "get_constraint_string"], [42, 3, 1, "", "get_env_kwargs"], [43, 3, 1, "", "get_metadata_path"], [44, 3, 1, "", "main"], [45, 3, 1, "", "print_return_info"]], "seldonian.RL.RL_model": [[47, 1, 1, "", "RL_model"]], "seldonian.RL.RL_model.RL_model": [[47, 2, 1, "", "__init__"], [47, 2, 1, "", "__repr__"], [47, 2, 1, "", "get_prob_this_action"], [47, 2, 1, "", "get_probs_from_observations_and_actions"]], "seldonian.RL.RL_runner": [[49, 3, 1, "", "create_agent"], [50, 3, 1, "", "run_all_trials"], [51, 3, 1, "", "run_episode"], [52, 3, 1, "", "run_episode_from_dict"], [53, 3, 1, "", "run_trial"], [54, 3, 1, "", "run_trial_given_agent_and_env"]], "seldonian.RL.environments": [[56, 0, 0, "-", "Environment"], [58, 0, 0, "-", "gridworld"], [60, 0, 0, "-", "mountaincar"], [62, 0, 0, "-", "n_step_mountaincar"], [64, 0, 0, "-", "simglucose_env"]], "seldonian.RL.environments.Environment": [[57, 1, 1, "", "Environment"]], "seldonian.RL.environments.Environment.Environment": [[57, 2, 1, "", "__init__"], [57, 2, 1, "", "__repr__"], [57, 2, 1, "", "get_env_description"], [57, 2, 1, "", "get_observation"], [57, 2, 1, "", "reset"], [57, 2, 1, "", "start_visualizing"], [57, 2, 1, "", "stop_visualizing"], [57, 2, 1, "", "terminated"], [57, 2, 1, "", "transition"], [57, 2, 1, "", "visualize"]], "seldonian.RL.environments.gridworld": [[59, 1, 1, "", "Gridworld"]], "seldonian.RL.environments.gridworld.Gridworld": [[59, 2, 1, "", "__init__"], [59, 2, 1, "", "__repr__"], [59, 2, 1, "", "create_env_description"], [59, 2, 1, "", "get_env_description"], [59, 2, 1, "", "get_observation"], [59, 2, 1, "", "is_in_goal_state"], [59, 2, 1, "", "reset"], [59, 2, 1, "", "start_visualizing"], [59, 2, 1, "", "stop_visualizing"], [59, 2, 1, "", "terminated"], [59, 2, 1, "", "transition"], [59, 2, 1, "", "update_position"], [59, 2, 1, "", "visualize"]], "seldonian.RL.environments.mountaincar": [[61, 1, 1, "", "Mountaincar"]], "seldonian.RL.environments.mountaincar.Mountaincar": [[61, 2, 1, "", "__init__"], [61, 2, 1, "", "__repr__"], [61, 2, 1, "", "get_env_description"], [61, 2, 1, "", "get_observation"], [61, 2, 1, "", "reset"], [61, 2, 1, "", "start_visualizing"], [61, 2, 1, "", "stop_visualizing"], [61, 2, 1, "", "terminated"], [61, 2, 1, "", "transition"], [61, 2, 1, "", "visualize"]], "seldonian.RL.environments.n_step_mountaincar": [[63, 1, 1, "", "N_step_mountaincar"]], "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "__repr__"], [63, 2, 1, "", "get_env_description"], [63, 2, 1, "", "get_observation"], [63, 2, 1, "", "reset"], [63, 2, 1, "", "start_visualizing"], [63, 2, 1, "", "stop_visualizing"], [63, 2, 1, "", "terminated"], [63, 2, 1, "", "transition"], [63, 2, 1, "", "visualize"]], "seldonian.RL.environments.simglucose_env": [[65, 1, 1, "", "Simglucose"]], "seldonian.RL.environments.simglucose_env.Simglucose": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "__repr__"], [65, 2, 1, "", "get_env_description"], [65, 2, 1, "", "get_observation"], [65, 2, 1, "", "reset"], [65, 2, 1, "", "start_visualizing"], [65, 2, 1, "", "stop_visualizing"], [65, 2, 1, "", "terminated"], [65, 2, 1, "", "transition"], [65, 2, 1, "", "visualize"]], "seldonian.RL.generate_gridworld_episodes": [[67, 3, 1, "", "main"]], "seldonian.RL.generate_mountaincar_episodes": [[69, 3, 1, "", "main"]], "seldonian.RL.generate_simglucose_episodes": [[71, 3, 1, "", "get_max_obs"], [72, 3, 1, "", "main"]], "seldonian.RL.hyperparams_and_settings": [[74, 3, 1, "", "define_hyperparameter_and_setting_dict"]], "seldonian.candidate_selection": [[76, 0, 0, "-", "candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[77, 1, 1, "", "CandidateSelection"]], "seldonian.candidate_selection.candidate_selection.CandidateSelection": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "__repr__"], [77, 2, 1, "", "calculate_batches"], [77, 2, 1, "", "evaluate_primary_objective"], [77, 2, 1, "", "get_constraint_upper_bounds"], [77, 2, 1, "", "objective_with_barrier"], [77, 2, 1, "", "run"]], "seldonian.dataset": [[79, 1, 1, "", "DataSet"], [80, 1, 1, "", "DataSetLoader"], [81, 1, 1, "", "Episode"], [82, 1, 1, "", "RLDataSet"], [83, 1, 1, "", "SupervisedDataSet"], [84, 3, 1, "", "load_supervised_metadata"]], "seldonian.dataset.DataSet": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "__repr__"]], "seldonian.dataset.DataSetLoader": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "__repr__"], [80, 2, 1, "", "load_RL_dataset_from_csv"], [80, 2, 1, "", "load_RL_dataset_from_episode_file"], [80, 2, 1, "", "load_supervised_dataset"]], "seldonian.dataset.Episode": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__repr__"]], "seldonian.dataset.RLDataSet": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "__repr__"]], "seldonian.dataset.SupervisedDataSet": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "__repr__"]], "seldonian.hyperparam_search": [[86, 1, 1, "", "HyperparamSearch"]], "seldonian.hyperparam_search.HyperparamSearch": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "__repr__"], [86, 2, 1, "", "bootstrap_sample_dataset"], [86, 2, 1, "", "candidate_selection"], [86, 2, 1, "", "create_dataset"], [86, 2, 1, "", "est_prob_pass"], [86, 2, 1, "", "find_best_hyperparams"], [86, 2, 1, "", "get_initial_solution"], [86, 2, 1, "", "get_safety_size"], [86, 2, 1, "", "run_core"], [86, 2, 1, "", "run_safety_test"], [86, 2, 1, "", "safety_test"]], "seldonian.models": [[88, 0, 0, "-", "models"], [101, 0, 0, "-", "objectives"], [132, 0, 0, "-", "sklearn_lr"], [134, 0, 0, "-", "sklearn_model"]], "seldonian.models.models": [[89, 1, 1, "", "BaseLogisticRegressionModel"], [90, 1, 1, "", "BinaryLogisticRegressionModel"], [91, 1, 1, "", "BoundedLinearRegressionModel"], [92, 1, 1, "", "ClassificationModel"], [93, 1, 1, "", "DummyClassifierModel"], [94, 1, 1, "", "LinearRegressionModel"], [95, 1, 1, "", "LinearRegressionModelListFeatures"], [96, 1, 1, "", "MultiClassLogisticRegressionModel"], [97, 1, 1, "", "RandomClassifierModel"], [98, 1, 1, "", "RegressionModel"], [99, 1, 1, "", "SeldonianModel"], [100, 1, 1, "", "SupervisedModel"]], "seldonian.models.models.BaseLogisticRegressionModel": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "__repr__"], [89, 2, 1, "", "fit"]], "seldonian.models.models.BinaryLogisticRegressionModel": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "__repr__"], [90, 2, 1, "", "fit"], [90, 2, 1, "", "predict"]], "seldonian.models.models.BoundedLinearRegressionModel": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "__repr__"], [91, 2, 1, "", "fit"], [91, 2, 1, "", "predict"]], "seldonian.models.models.ClassificationModel": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "__repr__"]], "seldonian.models.models.DummyClassifierModel": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "__repr__"], [93, 2, 1, "", "predict"]], "seldonian.models.models.LinearRegressionModel": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "__repr__"], [94, 2, 1, "", "fit"], [94, 2, 1, "", "predict"]], "seldonian.models.models.LinearRegressionModelListFeatures": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "__repr__"], [95, 2, 1, "", "fit"], [95, 2, 1, "", "predict"]], "seldonian.models.models.MultiClassLogisticRegressionModel": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "__repr__"], [96, 2, 1, "", "fit"], [96, 2, 1, "", "predict"]], "seldonian.models.models.RandomClassifierModel": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "__repr__"], [97, 2, 1, "", "predict"]], "seldonian.models.models.RegressionModel": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "__repr__"]], "seldonian.models.models.SeldonianModel": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "__repr__"]], "seldonian.models.models.SupervisedModel": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "__repr__"]], "seldonian.models.objectives": [[102, 3, 1, "", "Accuracy"], [103, 3, 1, "", "False_Negative_Rate"], [104, 3, 1, "", "False_Positive_Rate"], [105, 3, 1, "", "IS_estimate"], [106, 3, 1, "", "Mean_Error"], [107, 3, 1, "", "Mean_Squared_Error"], [108, 3, 1, "", "Negative_Rate"], [109, 3, 1, "", "Positive_Rate"], [110, 3, 1, "", "True_Negative_Rate"], [111, 3, 1, "", "True_Positive_Rate"], [112, 3, 1, "", "batcher"], [113, 3, 1, "", "binary_logistic_loss"], [114, 3, 1, "", "confusion_matrix"], [115, 3, 1, "", "evaluate_statistic"], [116, 3, 1, "", "gradient_Bounded_Squared_Error"], [117, 3, 1, "", "gradient_Mean_Squared_Error"], [118, 3, 1, "", "gradient_binary_logistic_loss"], [119, 3, 1, "", "multiclass_logistic_loss"], [120, 3, 1, "", "sample_from_statistic"], [121, 3, 1, "", "vector_Accuracy"], [122, 3, 1, "", "vector_Error"], [123, 3, 1, "", "vector_False_Negative_Rate"], [124, 3, 1, "", "vector_False_Positive_Rate"], [125, 3, 1, "", "vector_IS_estimate"], [126, 3, 1, "", "vector_Negative_Rate"], [127, 3, 1, "", "vector_Positive_Rate"], [128, 3, 1, "", "vector_Squared_Error"], [129, 3, 1, "", "vector_True_Negative_Rate"], [130, 3, 1, "", "vector_True_Positive_Rate"], [131, 3, 1, "", "vector_confusion_matrix"]], "seldonian.models.sklearn_lr": [[133, 1, 1, "", "SkLearnLinearRegressor"]], "seldonian.models.sklearn_lr.SkLearnLinearRegressor": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "__repr__"], [133, 2, 1, "", "backward_pass"], [133, 2, 1, "", "create_model"], [133, 2, 1, "", "forward_pass"], [133, 2, 1, "", "get_model_params"], [133, 2, 1, "", "predict"], [133, 2, 1, "", "update_model_params"]], "seldonian.models.sklearn_model": [[135, 1, 1, "", "SupervisedSkLearnBaseModel"], [136, 3, 1, "", "sklearn_predict_vjp"]], "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel": [[135, 2, 1, "", "__init__"], [135, 2, 1, "", "__repr__"], [135, 2, 1, "", "backward_pass"], [135, 2, 1, "", "create_model"], [135, 2, 1, "", "forward_pass"], [135, 2, 1, "", "get_model_params"], [135, 2, 1, "", "predict"], [135, 2, 1, "", "update_model_params"]], "seldonian.optimizers": [[138, 0, 0, "-", "gradient_descent"]], "seldonian.optimizers.gradient_descent": [[139, 3, 1, "", "gradient_descent_adam"], [140, 3, 1, "", "setup_gradients"]], "seldonian.parse_tree": [[142, 0, 0, "-", "nodes"], [151, 0, 0, "-", "operators"], [152, 0, 0, "-", "parse_tree"]], "seldonian.parse_tree.nodes": [[143, 1, 1, "", "BaseNode"], [144, 1, 1, "", "CVaRSQeBaseNode"], [145, 1, 1, "", "ConfusionMatrixBaseNode"], [146, 1, 1, "", "ConstantNode"], [147, 1, 1, "", "InternalNode"], [148, 1, 1, "", "MEDCustomBaseNode"], [149, 1, 1, "", "MultiClassBaseNode"], [150, 1, 1, "", "Node"]], "seldonian.parse_tree.nodes.BaseNode": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "__repr__"], [143, 2, 1, "", "calculate_bounds"], [143, 2, 1, "", "calculate_data_forbound"], [143, 2, 1, "", "calculate_value"], [143, 2, 1, "", "compute_HC_lowerbound"], [143, 2, 1, "", "compute_HC_upper_and_lowerbound"], [143, 2, 1, "", "compute_HC_upperbound"], [143, 2, 1, "", "mask_data"], [143, 2, 1, "", "predict_HC_lowerbound"], [143, 2, 1, "", "predict_HC_upper_and_lowerbound"], [143, 2, 1, "", "predict_HC_upperbound"], [143, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.CVaRSQeBaseNode": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "__repr__"], [144, 2, 1, "", "calculate_bounds"], [144, 2, 1, "", "calculate_data_forbound"], [144, 2, 1, "", "calculate_value"], [144, 2, 1, "", "compute_HC_lowerbound"], [144, 2, 1, "", "compute_HC_upper_and_lowerbound"], [144, 2, 1, "", "compute_HC_upperbound"], [144, 2, 1, "", "mask_data"], [144, 2, 1, "", "predict_HC_lowerbound"], [144, 2, 1, "", "predict_HC_upper_and_lowerbound"], [144, 2, 1, "", "predict_HC_upperbound"], [144, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "__repr__"], [145, 2, 1, "", "calculate_bounds"], [145, 2, 1, "", "calculate_data_forbound"], [145, 2, 1, "", "calculate_value"], [145, 2, 1, "", "compute_HC_lowerbound"], [145, 2, 1, "", "compute_HC_upper_and_lowerbound"], [145, 2, 1, "", "compute_HC_upperbound"], [145, 2, 1, "", "mask_data"], [145, 2, 1, "", "predict_HC_lowerbound"], [145, 2, 1, "", "predict_HC_upper_and_lowerbound"], [145, 2, 1, "", "predict_HC_upperbound"], [145, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.ConstantNode": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.InternalNode": [[147, 2, 1, "", "__init__"], [147, 2, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.MEDCustomBaseNode": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "__repr__"], [148, 2, 1, "", "calculate_bounds"], [148, 2, 1, "", "calculate_data_forbound"], [148, 2, 1, "", "calculate_value"], [148, 2, 1, "", "compute_HC_lowerbound"], [148, 2, 1, "", "compute_HC_upper_and_lowerbound"], [148, 2, 1, "", "compute_HC_upperbound"], [148, 2, 1, "", "mask_data"], [148, 2, 1, "", "precalculate_data"], [148, 2, 1, "", "predict_HC_lowerbound"], [148, 2, 1, "", "predict_HC_upper_and_lowerbound"], [148, 2, 1, "", "predict_HC_upperbound"], [148, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.MultiClassBaseNode": [[149, 2, 1, "", "__init__"], [149, 2, 1, "", "__repr__"], [149, 2, 1, "", "calculate_bounds"], [149, 2, 1, "", "calculate_data_forbound"], [149, 2, 1, "", "calculate_value"], [149, 2, 1, "", "compute_HC_lowerbound"], [149, 2, 1, "", "compute_HC_upper_and_lowerbound"], [149, 2, 1, "", "compute_HC_upperbound"], [149, 2, 1, "", "mask_data"], [149, 2, 1, "", "predict_HC_lowerbound"], [149, 2, 1, "", "predict_HC_upper_and_lowerbound"], [149, 2, 1, "", "predict_HC_upperbound"], [149, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.Node": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "__repr__"]], "seldonian.parse_tree.operators": [[151, 4, 1, "", "bounds_required_dict"], [151, 4, 1, "", "custom_base_node_dict"], [151, 4, 1, "", "measure_functions_dict"], [151, 4, 1, "", "not_supported_op_mapper"], [151, 4, 1, "", "op_mapper"]], "seldonian.parse_tree.parse_tree": [[153, 1, 1, "", "ParseTree"], [154, 3, 1, "", "make_parse_trees_from_constraints"]], "seldonian.parse_tree.parse_tree.ParseTree": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "__repr__"], [153, 2, 1, "", "_abs"], [153, 2, 1, "", "_add"], [153, 2, 1, "", "_assign_bounds_helper"], [153, 2, 1, "", "_assign_deltas_helper"], [153, 2, 1, "", "_ast2pt_node"], [153, 2, 1, "", "_ast_tree_helper"], [153, 2, 1, "", "_div"], [153, 2, 1, "", "_evaluator_helper"], [153, 2, 1, "", "_exp"], [153, 2, 1, "", "_log"], [153, 2, 1, "", "_max"], [153, 2, 1, "", "_min"], [153, 2, 1, "", "_mult"], [153, 2, 1, "", "_pow"], [153, 2, 1, "", "_preprocess_constraint_str"], [153, 2, 1, "", "_propagate_value"], [153, 2, 1, "", "_propagator_helper"], [153, 2, 1, "", "_protect_nan"], [153, 2, 1, "", "_sub"], [153, 2, 1, "", "assign_bounds_needed"], [153, 2, 1, "", "assign_deltas"], [153, 2, 1, "", "build_tree"], [153, 2, 1, "", "create_from_ast"], [153, 2, 1, "", "evaluate_constraint"], [153, 2, 1, "", "make_viz"], [153, 2, 1, "", "make_viz_helper"], [153, 2, 1, "", "propagate"], [153, 2, 1, "", "propagate_bounds"], [153, 2, 1, "", "reset_base_node_dict"]], "seldonian.safety_test": [[156, 0, 0, "-", "safety_test"]], "seldonian.safety_test.safety_test": [[157, 1, 1, "", "SafetyTest"]], "seldonian.safety_test.safety_test.SafetyTest": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "__repr__"], [157, 2, 1, "", "evaluate_primary_objective"], [157, 2, 1, "", "run"]], "seldonian.seldonian_algorithm": [[159, 1, 1, "", "SeldonianAlgorithm"]], "seldonian.seldonian_algorithm.SeldonianAlgorithm": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "__repr__"], [159, 2, 1, "", "candidate_safety_split"], [159, 2, 1, "", "candidate_selection"], [159, 2, 1, "", "evaluate_primary_objective"], [159, 2, 1, "", "get_cs_result"], [159, 2, 1, "", "get_st_upper_bounds"], [159, 2, 1, "", "run"], [159, 2, 1, "", "run_safety_test"], [159, 2, 1, "", "safety_test"]], "seldonian.spec": [[161, 1, 1, "", "RLSpec"], [162, 1, 1, "", "Spec"], [163, 1, 1, "", "SupervisedSpec"], [164, 3, 1, "", "createRLSpec"], [165, 3, 1, "", "createSupervisedSpec"], [166, 3, 1, "", "validate_parse_trees"]], "seldonian.spec.RLSpec": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "__repr__"]], "seldonian.spec.Spec": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "__repr__"]], "seldonian.spec.SupervisedSpec": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "__repr__"]], "seldonian.utils": [[168, 0, 0, "-", "RL_utils"], [172, 0, 0, "-", "io_utils"], [178, 0, 0, "-", "plot_utils"], [180, 0, 0, "-", "stats_utils"], [185, 0, 0, "-", "tutorial_utils"]], "seldonian.utils.RL_utils": [[169, 3, 1, "", "argmax_multi"], [170, 3, 1, "", "clamp"], [171, 3, 1, "", "error"]], "seldonian.utils.io_utils": [[173, 3, 1, "", "dir_path"], [174, 3, 1, "", "load_json"], [175, 3, 1, "", "load_pickle"], [176, 3, 1, "", "save_json"], [177, 3, 1, "", "save_pickle"]], "seldonian.utils.plot_utils": [[179, 3, 1, "", "plot_gradient_descent"]], "seldonian.utils.stats_utils": [[181, 3, 1, "", "softmax"], [182, 3, 1, "", "stddev"], [183, 3, 1, "", "tinv"], [184, 3, 1, "", "weighted_sum_gamma"]], "seldonian.utils.tutorial_utils": [[186, 3, 1, "", "generate_clipped_data"], [187, 3, 1, "", "generate_data"], [188, 3, 1, "", "make_synthetic_regression_dataset"]], "seldonian.warnings": [[190, 0, 0, "-", "custom_warnings"]], "seldonian.warnings.custom_warnings": [[191, 3, 1, "", "custom_formatwarning"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"seldonian": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194], "rl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "agent": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "base": [5, 6, 7], "fourier": [6, 7], "discrete_random_ag": [8, 9], "function_approxim": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "linear_fa": [13, 14, 15], "linear_state_action_value_fa": 15, "tabl": [16, 17, 18, 19, 194], "q_tabl": 17, "construct_q_table_from_env_descript": 19, "parameterized_non_learning_softmax_ag": [20, 21], "polici": [22, 23, 24, 25, 26, 27, 28], "discrete_action_polici": 24, "softmax": [26, 27, 28, 181], "discretesoftmax": 27, "keyboard_gridworld": [29, 30], "mountain_car_rough_solut": [31, 32], "env_descript": [33, 34, 35, 36, 37, 38, 39], "check_space_typ": 36, "space": [37, 38, 39], "continuous_spac": 38, "discrete_spac": 39, "rl_generate_dataset_and_spec_fil": [40, 41, 42, 43, 44, 45], "get_constraint_str": 41, "get_env_kwarg": 42, "get_metadata_path": 43, "main": [44, 67, 69, 72], "print_return_info": 45, "rl_model": [46, 47], "rl_runner": [48, 49, 50, 51, 52, 53, 54], "create_ag": 49, "run_all_tri": 50, "run_episod": 51, "run_episode_from_dict": 52, "run_trial": 53, "run_trial_given_agent_and_env": 54, "environ": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "gridworld": [58, 59], "mountaincar": [60, 61], "n_step_mountaincar": [62, 63], "simglucose_env": [64, 65], "simglucos": 65, "generate_gridworld_episod": [66, 67], "generate_mountaincar_episod": [68, 69], "generate_simglucose_episod": [70, 71, 72], "get_max_ob": 71, "hyperparams_and_set": [73, 74], "define_hyperparameter_and_setting_dict": 74, "candidate_select": [75, 76, 77], "candidateselect": 77, "dataset": [78, 79, 80, 81, 82, 83, 84, 195], "datasetload": 80, "episod": 81, "rldataset": 82, "superviseddataset": 83, "load_supervised_metadata": 84, "hyperparam_search": [85, 86], "hyperparamsearch": 86, "model": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 195], "baselogisticregressionmodel": 89, "binarylogisticregressionmodel": 90, "boundedlinearregressionmodel": 91, "classificationmodel": 92, "dummyclassifiermodel": 93, "linearregressionmodel": 94, "linearregressionmodellistfeatur": 95, "multiclasslogisticregressionmodel": 96, "randomclassifiermodel": 97, "regressionmodel": 98, "seldonianmodel": 99, "supervisedmodel": 100, "object": [101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 195], "accuraci": 102, "false_negative_r": 103, "false_positive_r": 104, "is_estim": 105, "mean_error": 106, "mean_squared_error": 107, "negative_r": 108, "positive_r": 109, "true_negative_r": 110, "true_positive_r": 111, "batcher": 112, "binary_logistic_loss": 113, "confusion_matrix": 114, "evaluate_statist": 115, "gradient_bounded_squared_error": 116, "gradient_mean_squared_error": 117, "gradient_binary_logistic_loss": 118, "multiclass_logistic_loss": 119, "sample_from_statist": 120, "vector_accuraci": 121, "vector_error": 122, "vector_false_negative_r": 123, "vector_false_positive_r": 124, "vector_is_estim": 125, "vector_negative_r": 126, "vector_positive_r": 127, "vector_squared_error": 128, "vector_true_negative_r": 129, "vector_true_positive_r": 130, "vector_confusion_matrix": 131, "sklearn_lr": [132, 133], "sklearnlinearregressor": 133, "sklearn_model": [134, 135, 136], "supervisedsklearnbasemodel": 135, "sklearn_predict_vjp": 136, "optim": [137, 138, 139, 140], "gradient_desc": [138, 139, 140], "gradient_descent_adam": 139, "setup_gradi": 140, "parse_tre": [141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "node": [142, 143, 144, 145, 146, 147, 148, 149, 150], "basenod": 143, "cvarsqebasenod": 144, "confusionmatrixbasenod": 145, "constantnod": 146, "internalnod": 147, "medcustombasenod": 148, "multiclassbasenod": 149, "oper": 151, "parsetre": 153, "make_parse_trees_from_constraint": 154, "safety_test": [155, 156, 157], "safetytest": 157, "seldonian_algorithm": [158, 159], "seldonianalgorithm": 159, "spec": [160, 161, 162, 163, 164, 165, 166, 195], "rlspec": 161, "supervisedspec": 163, "createrlspec": 164, "createsupervisedspec": 165, "validate_parse_tre": 166, "util": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188], "rl_util": [168, 169, 170, 171], "argmax_multi": 169, "clamp": 170, "error": 171, "io_util": [172, 173, 174, 175, 176, 177], "dir_path": 173, "load_json": 174, "load_pickl": 175, "save_json": 176, "save_pickl": 177, "plot_util": [178, 179], "plot_gradient_desc": 179, "stats_util": [180, 181, 182, 183, 184], "stddev": 182, "tinv": 183, "weighted_sum_gamma": 184, "tutorial_util": [185, 186, 187, 188], "generate_clipped_data": 186, "generate_data": 187, "make_synthetic_regression_dataset": 188, "warn": [189, 190, 191], "custom_warn": [190, 191], "custom_formatwarn": 191, "api": 192, "get": 193, "start": 193, "instal": 193, "A": 193, "first": 193, "tutori": 193, "engin": 194, "document": 194, "content": 194, "overview": 195, "interfac": 195, "behavior": 195, "constraint": 195, "string": 195, "what": 195, "doe": 195, "sa": 195, "run": 195, "do": 195, "candid": 195, "select": 195, "safeti": 195, "test": 195}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"seldonian": [[0, "module-seldonian"]], "seldonian.RL": [[1, "module-seldonian.RL"]], "seldonian.RL.Agents": [[2, "module-seldonian.RL.Agents"]], "seldonian.RL.Agents.Agent": [[3, "module-seldonian.RL.Agents.Agent"]], "seldonian.RL.Agents.Agent.Agent": [[4, "seldonian-rl-agents-agent-agent"]], "seldonian.RL.Agents.Bases": [[5, "module-seldonian.RL.Agents.Bases"]], "seldonian.RL.Agents.Bases.Fourier": [[6, "module-seldonian.RL.Agents.Bases.Fourier"]], "seldonian.RL.Agents.Bases.Fourier.Fourier": [[7, "seldonian-rl-agents-bases-fourier-fourier"]], "seldonian.RL.Agents.Discrete_Random_Agent": [[8, "module-seldonian.RL.Agents.Discrete_Random_Agent"]], "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent": [[9, "seldonian-rl-agents-discrete-random-agent-discrete-random-agent"]], "seldonian.RL.Agents.Function_Approximators": [[10, "module-seldonian.RL.Agents.Function_Approximators"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator": [[11, "module-seldonian.RL.Agents.Function_Approximators.Function_Approximator"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator": [[12, "seldonian-rl-agents-function-approximators-function-approximator-function-approximator"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA": [[13, "module-seldonian.RL.Agents.Function_Approximators.Linear_FA"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA": [[14, "seldonian-rl-agents-function-approximators-linear-fa-linear-fa"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA": [[15, "seldonian-rl-agents-function-approximators-linear-fa-linear-state-action-value-fa"]], "seldonian.RL.Agents.Function_Approximators.Table": [[16, "module-seldonian.RL.Agents.Function_Approximators.Table"]], "seldonian.RL.Agents.Function_Approximators.Table.Q_Table": [[17, "seldonian-rl-agents-function-approximators-table-q-table"]], "seldonian.RL.Agents.Function_Approximators.Table.Table": [[18, "seldonian-rl-agents-function-approximators-table-table"]], "seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description": [[19, "seldonian-rl-agents-function-approximators-table-construct-q-table-from-env-description"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent": [[20, "module-seldonian.RL.Agents.Parameterized_non_learning_softmax_agent"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent": [[21, "seldonian-rl-agents-parameterized-non-learning-softmax-agent-parameterized-non-learning-softmax-agent"]], "seldonian.RL.Agents.Policies": [[22, "module-seldonian.RL.Agents.Policies"]], "seldonian.RL.Agents.Policies.Policy": [[23, "module-seldonian.RL.Agents.Policies.Policy"]], "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy": [[24, "seldonian-rl-agents-policies-policy-discrete-action-policy"]], "seldonian.RL.Agents.Policies.Policy.Policy": [[25, "seldonian-rl-agents-policies-policy-policy"]], "seldonian.RL.Agents.Policies.Softmax": [[26, "module-seldonian.RL.Agents.Policies.Softmax"]], "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax": [[27, "seldonian-rl-agents-policies-softmax-discretesoftmax"]], "seldonian.RL.Agents.Policies.Softmax.Softmax": [[28, "seldonian-rl-agents-policies-softmax-softmax"]], "seldonian.RL.Agents.keyboard_gridworld": [[29, "module-seldonian.RL.Agents.keyboard_gridworld"]], "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld": [[30, "seldonian-rl-agents-keyboard-gridworld-keyboard-gridworld"]], "seldonian.RL.Agents.mountain_car_rough_solution": [[31, "module-seldonian.RL.Agents.mountain_car_rough_solution"]], "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution": [[32, "seldonian-rl-agents-mountain-car-rough-solution-mountain-car-rough-solution"]], "seldonian.RL.Env_Description": [[33, "module-seldonian.RL.Env_Description"]], "seldonian.RL.Env_Description.Env_Description": [[34, "module-seldonian.RL.Env_Description.Env_Description"]], "seldonian.RL.Env_Description.Env_Description.Env_Description": [[35, "seldonian-rl-env-description-env-description-env-description"]], "seldonian.RL.Env_Description.Env_Description.check_space_type": [[36, "seldonian-rl-env-description-env-description-check-space-type"]], "seldonian.RL.Env_Description.Spaces": [[37, "module-seldonian.RL.Env_Description.Spaces"]], "seldonian.RL.Env_Description.Spaces.Continuous_Space": [[38, "seldonian-rl-env-description-spaces-continuous-space"]], "seldonian.RL.Env_Description.Spaces.Discrete_Space": [[39, "seldonian-rl-env-description-spaces-discrete-space"]], "seldonian.RL.RL_generate_dataset_and_spec_file": [[40, "module-seldonian.RL.RL_generate_dataset_and_spec_file"]], "seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string": [[41, "seldonian-rl-rl-generate-dataset-and-spec-file-get-constraint-string"]], "seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs": [[42, "seldonian-rl-rl-generate-dataset-and-spec-file-get-env-kwargs"]], "seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path": [[43, "seldonian-rl-rl-generate-dataset-and-spec-file-get-metadata-path"]], "seldonian.RL.RL_generate_dataset_and_spec_file.main": [[44, "seldonian-rl-rl-generate-dataset-and-spec-file-main"]], "seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info": [[45, "seldonian-rl-rl-generate-dataset-and-spec-file-print-return-info"]], "seldonian.RL.RL_model": [[46, "module-seldonian.RL.RL_model"]], "seldonian.RL.RL_model.RL_model": [[47, "seldonian-rl-rl-model-rl-model"]], "seldonian.RL.RL_runner": [[48, "module-seldonian.RL.RL_runner"]], "seldonian.RL.RL_runner.create_agent": [[49, "seldonian-rl-rl-runner-create-agent"]], "seldonian.RL.RL_runner.run_all_trials": [[50, "seldonian-rl-rl-runner-run-all-trials"]], "seldonian.RL.RL_runner.run_episode": [[51, "seldonian-rl-rl-runner-run-episode"]], "seldonian.RL.RL_runner.run_episode_from_dict": [[52, "seldonian-rl-rl-runner-run-episode-from-dict"]], "seldonian.RL.RL_runner.run_trial": [[53, "seldonian-rl-rl-runner-run-trial"]], "seldonian.RL.RL_runner.run_trial_given_agent_and_env": [[54, "seldonian-rl-rl-runner-run-trial-given-agent-and-env"]], "seldonian.RL.environments": [[55, "module-seldonian.RL.environments"]], "seldonian.RL.environments.Environment": [[56, "module-seldonian.RL.environments.Environment"]], "seldonian.RL.environments.Environment.Environment": [[57, "seldonian-rl-environments-environment-environment"]], "seldonian.RL.environments.gridworld": [[58, "module-seldonian.RL.environments.gridworld"]], "seldonian.RL.environments.gridworld.Gridworld": [[59, "seldonian-rl-environments-gridworld-gridworld"]], "seldonian.RL.environments.mountaincar": [[60, "module-seldonian.RL.environments.mountaincar"]], "seldonian.RL.environments.mountaincar.Mountaincar": [[61, "seldonian-rl-environments-mountaincar-mountaincar"]], "seldonian.RL.environments.n_step_mountaincar": [[62, "module-seldonian.RL.environments.n_step_mountaincar"]], "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar": [[63, "seldonian-rl-environments-n-step-mountaincar-n-step-mountaincar"]], "seldonian.RL.environments.simglucose_env": [[64, "module-seldonian.RL.environments.simglucose_env"]], "seldonian.RL.environments.simglucose_env.Simglucose": [[65, "seldonian-rl-environments-simglucose-env-simglucose"]], "seldonian.RL.generate_gridworld_episodes": [[66, "module-seldonian.RL.generate_gridworld_episodes"]], "seldonian.RL.generate_gridworld_episodes.main": [[67, "seldonian-rl-generate-gridworld-episodes-main"]], "seldonian.RL.generate_mountaincar_episodes": [[68, "module-seldonian.RL.generate_mountaincar_episodes"]], "seldonian.RL.generate_mountaincar_episodes.main": [[69, "seldonian-rl-generate-mountaincar-episodes-main"]], "seldonian.RL.generate_simglucose_episodes": [[70, "module-seldonian.RL.generate_simglucose_episodes"]], "seldonian.RL.generate_simglucose_episodes.get_max_obs": [[71, "seldonian-rl-generate-simglucose-episodes-get-max-obs"]], "seldonian.RL.generate_simglucose_episodes.main": [[72, "seldonian-rl-generate-simglucose-episodes-main"]], "seldonian.RL.hyperparams_and_settings": [[73, "module-seldonian.RL.hyperparams_and_settings"]], "seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict": [[74, "seldonian-rl-hyperparams-and-settings-define-hyperparameter-and-setting-dict"]], "seldonian.candidate_selection": [[75, "module-seldonian.candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[76, "module-seldonian.candidate_selection.candidate_selection"]], "seldonian.candidate_selection.candidate_selection.CandidateSelection": [[77, "seldonian-candidate-selection-candidate-selection-candidateselection"]], "seldonian.dataset": [[78, "module-seldonian.dataset"]], "seldonian.dataset.DataSet": [[79, "seldonian-dataset-dataset"]], "seldonian.dataset.DataSetLoader": [[80, "seldonian-dataset-datasetloader"]], "seldonian.dataset.Episode": [[81, "seldonian-dataset-episode"]], "seldonian.dataset.RLDataSet": [[82, "seldonian-dataset-rldataset"]], "seldonian.dataset.SupervisedDataSet": [[83, "seldonian-dataset-superviseddataset"]], "seldonian.dataset.load_supervised_metadata": [[84, "seldonian-dataset-load-supervised-metadata"]], "seldonian.hyperparam_search": [[85, "module-seldonian.hyperparam_search"]], "seldonian.hyperparam_search.HyperparamSearch": [[86, "seldonian-hyperparam-search-hyperparamsearch"]], "seldonian.models": [[87, "module-seldonian.models"]], "seldonian.models.models": [[88, "module-seldonian.models.models"]], "seldonian.models.models.BaseLogisticRegressionModel": [[89, "seldonian-models-models-baselogisticregressionmodel"]], "seldonian.models.models.BinaryLogisticRegressionModel": [[90, "seldonian-models-models-binarylogisticregressionmodel"]], "seldonian.models.models.BoundedLinearRegressionModel": [[91, "seldonian-models-models-boundedlinearregressionmodel"]], "seldonian.models.models.ClassificationModel": [[92, "seldonian-models-models-classificationmodel"]], "seldonian.models.models.DummyClassifierModel": [[93, "seldonian-models-models-dummyclassifiermodel"]], "seldonian.models.models.LinearRegressionModel": [[94, "seldonian-models-models-linearregressionmodel"]], "seldonian.models.models.LinearRegressionModelListFeatures": [[95, "seldonian-models-models-linearregressionmodellistfeatures"]], "seldonian.models.models.MultiClassLogisticRegressionModel": [[96, "seldonian-models-models-multiclasslogisticregressionmodel"]], "seldonian.models.models.RandomClassifierModel": [[97, "seldonian-models-models-randomclassifiermodel"]], "seldonian.models.models.RegressionModel": [[98, "seldonian-models-models-regressionmodel"]], "seldonian.models.models.SeldonianModel": [[99, "seldonian-models-models-seldonianmodel"]], "seldonian.models.models.SupervisedModel": [[100, "seldonian-models-models-supervisedmodel"]], "seldonian.models.objectives": [[101, "module-seldonian.models.objectives"]], "seldonian.models.objectives.Accuracy": [[102, "seldonian-models-objectives-accuracy"]], "seldonian.models.objectives.False_Negative_Rate": [[103, "seldonian-models-objectives-false-negative-rate"]], "seldonian.models.objectives.False_Positive_Rate": [[104, "seldonian-models-objectives-false-positive-rate"]], "seldonian.models.objectives.IS_estimate": [[105, "seldonian-models-objectives-is-estimate"]], "seldonian.models.objectives.Mean_Error": [[106, "seldonian-models-objectives-mean-error"]], "seldonian.models.objectives.Mean_Squared_Error": [[107, "seldonian-models-objectives-mean-squared-error"]], "seldonian.models.objectives.Negative_Rate": [[108, "seldonian-models-objectives-negative-rate"]], "seldonian.models.objectives.Positive_Rate": [[109, "seldonian-models-objectives-positive-rate"]], "seldonian.models.objectives.True_Negative_Rate": [[110, "seldonian-models-objectives-true-negative-rate"]], "seldonian.models.objectives.True_Positive_Rate": [[111, "seldonian-models-objectives-true-positive-rate"]], "seldonian.models.objectives.batcher": [[112, "seldonian-models-objectives-batcher"]], "seldonian.models.objectives.binary_logistic_loss": [[113, "seldonian-models-objectives-binary-logistic-loss"]], "seldonian.models.objectives.confusion_matrix": [[114, "seldonian-models-objectives-confusion-matrix"]], "seldonian.models.objectives.evaluate_statistic": [[115, "seldonian-models-objectives-evaluate-statistic"]], "seldonian.models.objectives.gradient_Bounded_Squared_Error": [[116, "seldonian-models-objectives-gradient-bounded-squared-error"]], "seldonian.models.objectives.gradient_Mean_Squared_Error": [[117, "seldonian-models-objectives-gradient-mean-squared-error"]], "seldonian.models.objectives.gradient_binary_logistic_loss": [[118, "seldonian-models-objectives-gradient-binary-logistic-loss"]], "seldonian.models.objectives.multiclass_logistic_loss": [[119, "seldonian-models-objectives-multiclass-logistic-loss"]], "seldonian.models.objectives.sample_from_statistic": [[120, "seldonian-models-objectives-sample-from-statistic"]], "seldonian.models.objectives.vector_Accuracy": [[121, "seldonian-models-objectives-vector-accuracy"]], "seldonian.models.objectives.vector_Error": [[122, "seldonian-models-objectives-vector-error"]], "seldonian.models.objectives.vector_False_Negative_Rate": [[123, "seldonian-models-objectives-vector-false-negative-rate"]], "seldonian.models.objectives.vector_False_Positive_Rate": [[124, "seldonian-models-objectives-vector-false-positive-rate"]], "seldonian.models.objectives.vector_IS_estimate": [[125, "seldonian-models-objectives-vector-is-estimate"]], "seldonian.models.objectives.vector_Negative_Rate": [[126, "seldonian-models-objectives-vector-negative-rate"]], "seldonian.models.objectives.vector_Positive_Rate": [[127, "seldonian-models-objectives-vector-positive-rate"]], "seldonian.models.objectives.vector_Squared_Error": [[128, "seldonian-models-objectives-vector-squared-error"]], "seldonian.models.objectives.vector_True_Negative_Rate": [[129, "seldonian-models-objectives-vector-true-negative-rate"]], "seldonian.models.objectives.vector_True_Positive_Rate": [[130, "seldonian-models-objectives-vector-true-positive-rate"]], "seldonian.models.objectives.vector_confusion_matrix": [[131, "seldonian-models-objectives-vector-confusion-matrix"]], "seldonian.models.sklearn_lr": [[132, "module-seldonian.models.sklearn_lr"]], "seldonian.models.sklearn_lr.SkLearnLinearRegressor": [[133, "seldonian-models-sklearn-lr-sklearnlinearregressor"]], "seldonian.models.sklearn_model": [[134, "module-seldonian.models.sklearn_model"]], "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel": [[135, "seldonian-models-sklearn-model-supervisedsklearnbasemodel"]], "seldonian.models.sklearn_model.sklearn_predict_vjp": [[136, "seldonian-models-sklearn-model-sklearn-predict-vjp"]], "seldonian.optimizers": [[137, "module-seldonian.optimizers"]], "seldonian.optimizers.gradient_descent": [[138, "module-seldonian.optimizers.gradient_descent"]], "seldonian.optimizers.gradient_descent.gradient_descent_adam": [[139, "seldonian-optimizers-gradient-descent-gradient-descent-adam"]], "seldonian.optimizers.gradient_descent.setup_gradients": [[140, "seldonian-optimizers-gradient-descent-setup-gradients"]], "seldonian.parse_tree": [[141, "module-seldonian.parse_tree"]], "seldonian.parse_tree.nodes": [[142, "module-seldonian.parse_tree.nodes"]], "seldonian.parse_tree.nodes.BaseNode": [[143, "seldonian-parse-tree-nodes-basenode"]], "seldonian.parse_tree.nodes.CVaRSQeBaseNode": [[144, "seldonian-parse-tree-nodes-cvarsqebasenode"]], "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode": [[145, "seldonian-parse-tree-nodes-confusionmatrixbasenode"]], "seldonian.parse_tree.nodes.ConstantNode": [[146, "seldonian-parse-tree-nodes-constantnode"]], "seldonian.parse_tree.nodes.InternalNode": [[147, "seldonian-parse-tree-nodes-internalnode"]], "seldonian.parse_tree.nodes.MEDCustomBaseNode": [[148, "seldonian-parse-tree-nodes-medcustombasenode"]], "seldonian.parse_tree.nodes.MultiClassBaseNode": [[149, "seldonian-parse-tree-nodes-multiclassbasenode"]], "seldonian.parse_tree.nodes.Node": [[150, "seldonian-parse-tree-nodes-node"]], "seldonian.parse_tree.operators": [[151, "module-seldonian.parse_tree.operators"]], "seldonian.parse_tree.parse_tree": [[152, "module-seldonian.parse_tree.parse_tree"]], "seldonian.parse_tree.parse_tree.ParseTree": [[153, "seldonian-parse-tree-parse-tree-parsetree"]], "seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints": [[154, "seldonian-parse-tree-parse-tree-make-parse-trees-from-constraints"]], "seldonian.safety_test": [[155, "module-seldonian.safety_test"]], "seldonian.safety_test.safety_test": [[156, "module-seldonian.safety_test.safety_test"]], "seldonian.safety_test.safety_test.SafetyTest": [[157, "seldonian-safety-test-safety-test-safetytest"]], "seldonian.seldonian_algorithm": [[158, "module-seldonian.seldonian_algorithm"]], "seldonian.seldonian_algorithm.SeldonianAlgorithm": [[159, "seldonian-seldonian-algorithm-seldonianalgorithm"]], "seldonian.spec": [[160, "module-seldonian.spec"]], "seldonian.spec.RLSpec": [[161, "seldonian-spec-rlspec"]], "seldonian.spec.Spec": [[162, "seldonian-spec-spec"]], "seldonian.spec.SupervisedSpec": [[163, "seldonian-spec-supervisedspec"]], "seldonian.spec.createRLSpec": [[164, "seldonian-spec-createrlspec"]], "seldonian.spec.createSupervisedSpec": [[165, "seldonian-spec-createsupervisedspec"]], "seldonian.spec.validate_parse_trees": [[166, "seldonian-spec-validate-parse-trees"]], "seldonian.utils": [[167, "module-seldonian.utils"]], "seldonian.utils.RL_utils": [[168, "module-seldonian.utils.RL_utils"]], "seldonian.utils.RL_utils.argmax_multi": [[169, "seldonian-utils-rl-utils-argmax-multi"]], "seldonian.utils.RL_utils.clamp": [[170, "seldonian-utils-rl-utils-clamp"]], "seldonian.utils.RL_utils.error": [[171, "seldonian-utils-rl-utils-error"]], "seldonian.utils.io_utils": [[172, "module-seldonian.utils.io_utils"]], "seldonian.utils.io_utils.dir_path": [[173, "seldonian-utils-io-utils-dir-path"]], "seldonian.utils.io_utils.load_json": [[174, "seldonian-utils-io-utils-load-json"]], "seldonian.utils.io_utils.load_pickle": [[175, "seldonian-utils-io-utils-load-pickle"]], "seldonian.utils.io_utils.save_json": [[176, "seldonian-utils-io-utils-save-json"]], "seldonian.utils.io_utils.save_pickle": [[177, "seldonian-utils-io-utils-save-pickle"]], "seldonian.utils.plot_utils": [[178, "module-seldonian.utils.plot_utils"]], "seldonian.utils.plot_utils.plot_gradient_descent": [[179, "seldonian-utils-plot-utils-plot-gradient-descent"]], "seldonian.utils.stats_utils": [[180, "module-seldonian.utils.stats_utils"]], "seldonian.utils.stats_utils.softmax": [[181, "seldonian-utils-stats-utils-softmax"]], "seldonian.utils.stats_utils.stddev": [[182, "seldonian-utils-stats-utils-stddev"]], "seldonian.utils.stats_utils.tinv": [[183, "seldonian-utils-stats-utils-tinv"]], "seldonian.utils.stats_utils.weighted_sum_gamma": [[184, "seldonian-utils-stats-utils-weighted-sum-gamma"]], "seldonian.utils.tutorial_utils": [[185, "module-seldonian.utils.tutorial_utils"]], "seldonian.utils.tutorial_utils.generate_clipped_data": [[186, "seldonian-utils-tutorial-utils-generate-clipped-data"]], "seldonian.utils.tutorial_utils.generate_data": [[187, "seldonian-utils-tutorial-utils-generate-data"]], "seldonian.utils.tutorial_utils.make_synthetic_regression_dataset": [[188, "seldonian-utils-tutorial-utils-make-synthetic-regression-dataset"]], "seldonian.warnings": [[189, "module-seldonian.warnings"]], "seldonian.warnings.custom_warnings": [[190, "module-seldonian.warnings.custom_warnings"]], "seldonian.warnings.custom_warnings.custom_formatwarning": [[191, "seldonian-warnings-custom-warnings-custom-formatwarning"]], "API": [[192, "api"]], "Getting Started": [[193, "getting-started"]], "Installation": [[193, "installation"]], "A first tutorial": [[193, "a-first-tutorial"]], "Seldonian Engine documentation": [[194, "seldonian-engine-documentation"]], "Table of contents": [[194, "table-of-contents"]], "Overview": [[195, "overview"]], "Interface": [[195, "interface"]], "Spec object": [[195, "spec-object"]], "Dataset object": [[195, "dataset-object"]], "Model object": [[195, "model-object"]], "Behavioral constraints": [[195, "behavioral-constraints"]], "Constraint strings": [[195, "constraint-strings"]], "What does SA.run() do?": [[195, "what-does-sa-run-do"]], "Candidate Selection": [[195, "candidate-selection"]], "Safety Test": [[195, "safety-test"]]}, "indexentries": {"module": [[0, "module-seldonian"], [1, "module-seldonian.RL"], [2, "module-seldonian.RL.Agents"], [3, "module-seldonian.RL.Agents.Agent"], [5, "module-seldonian.RL.Agents.Bases"], [6, "module-seldonian.RL.Agents.Bases.Fourier"], [8, "module-seldonian.RL.Agents.Discrete_Random_Agent"], [10, "module-seldonian.RL.Agents.Function_Approximators"], [11, "module-seldonian.RL.Agents.Function_Approximators.Function_Approximator"], [13, "module-seldonian.RL.Agents.Function_Approximators.Linear_FA"], [16, "module-seldonian.RL.Agents.Function_Approximators.Table"], [20, "module-seldonian.RL.Agents.Parameterized_non_learning_softmax_agent"], [22, "module-seldonian.RL.Agents.Policies"], [23, "module-seldonian.RL.Agents.Policies.Policy"], [26, "module-seldonian.RL.Agents.Policies.Softmax"], [29, "module-seldonian.RL.Agents.keyboard_gridworld"], [31, "module-seldonian.RL.Agents.mountain_car_rough_solution"], [33, "module-seldonian.RL.Env_Description"], [34, "module-seldonian.RL.Env_Description.Env_Description"], [37, "module-seldonian.RL.Env_Description.Spaces"], [40, "module-seldonian.RL.RL_generate_dataset_and_spec_file"], [46, "module-seldonian.RL.RL_model"], [48, "module-seldonian.RL.RL_runner"], [55, "module-seldonian.RL.environments"], [56, "module-seldonian.RL.environments.Environment"], [58, "module-seldonian.RL.environments.gridworld"], [60, "module-seldonian.RL.environments.mountaincar"], [62, "module-seldonian.RL.environments.n_step_mountaincar"], [64, "module-seldonian.RL.environments.simglucose_env"], [66, "module-seldonian.RL.generate_gridworld_episodes"], [68, "module-seldonian.RL.generate_mountaincar_episodes"], [70, "module-seldonian.RL.generate_simglucose_episodes"], [73, "module-seldonian.RL.hyperparams_and_settings"], [75, "module-seldonian.candidate_selection"], [76, "module-seldonian.candidate_selection.candidate_selection"], [78, "module-seldonian.dataset"], [85, "module-seldonian.hyperparam_search"], [87, "module-seldonian.models"], [88, "module-seldonian.models.models"], [101, "module-seldonian.models.objectives"], [132, "module-seldonian.models.sklearn_lr"], [134, "module-seldonian.models.sklearn_model"], [137, "module-seldonian.optimizers"], [138, "module-seldonian.optimizers.gradient_descent"], [141, "module-seldonian.parse_tree"], [142, "module-seldonian.parse_tree.nodes"], [151, "module-seldonian.parse_tree.operators"], [152, "module-seldonian.parse_tree.parse_tree"], [155, "module-seldonian.safety_test"], [156, "module-seldonian.safety_test.safety_test"], [158, "module-seldonian.seldonian_algorithm"], [160, "module-seldonian.spec"], [167, "module-seldonian.utils"], [168, "module-seldonian.utils.RL_utils"], [172, "module-seldonian.utils.io_utils"], [178, "module-seldonian.utils.plot_utils"], [180, "module-seldonian.utils.stats_utils"], [185, "module-seldonian.utils.tutorial_utils"], [189, "module-seldonian.warnings"], [190, "module-seldonian.warnings.custom_warnings"]], "seldonian": [[0, "module-seldonian"]], "seldonian.rl": [[1, "module-seldonian.RL"]], "seldonian.rl.agents": [[2, "module-seldonian.RL.Agents"]], "seldonian.rl.agents.agent": [[3, "module-seldonian.RL.Agents.Agent"]], "agent (class in seldonian.rl.agents.agent)": [[4, "seldonian.RL.Agents.Agent.Agent"]], "__init__() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.__init__"]], "__repr__() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.__repr__"]], "choose_action() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.choose_action"]], "get_params() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.get_params"]], "get_prob_this_action() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.get_prob_this_action"]], "set_new_params() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.set_new_params"]], "update() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.update"]], "seldonian.rl.agents.bases": [[5, "module-seldonian.RL.Agents.Bases"]], "seldonian.rl.agents.bases.fourier": [[6, "module-seldonian.RL.Agents.Bases.Fourier"]], "fourier (class in seldonian.rl.agents.bases.fourier)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier"]], "__init__() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.__init__"]], "__repr__() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.__repr__"]], "calculate_num_features() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.calculate_num_features"]], "construct_basis_matrix() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.construct_basis_matrix"]], "get_features() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.get_features"]], "get_normalized_observation() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.get_normalized_observation"]], "seldonian.rl.agents.discrete_random_agent": [[8, "module-seldonian.RL.Agents.Discrete_Random_Agent"]], "discrete_random_agent (class in seldonian.rl.agents.discrete_random_agent)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent"]], "__init__() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.__init__"]], "__repr__() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.__repr__"]], "choose_action() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.choose_action"]], "get_params() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.get_params"]], "get_prob_this_action() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.get_prob_this_action"]], "set_new_params() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.set_new_params"]], "update() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.update"]], "seldonian.rl.agents.function_approximators": [[10, "module-seldonian.RL.Agents.Function_Approximators"]], "seldonian.rl.agents.function_approximators.function_approximator": [[11, "module-seldonian.RL.Agents.Function_Approximators.Function_Approximator"]], "function_approximator (class in seldonian.rl.agents.function_approximators.function_approximator)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator"]], "__init__() (function_approximator method)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.__init__"]], "__repr__() (function_approximator method)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.__repr__"]], "set_new_params() (function_approximator method)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.set_new_params"]], "seldonian.rl.agents.function_approximators.linear_fa": [[13, "module-seldonian.RL.Agents.Function_Approximators.Linear_FA"]], "linear_fa (class in seldonian.rl.agents.function_approximators.linear_fa)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA"]], "__init__() (linear_fa method)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.__init__"]], "__repr__() (linear_fa method)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.__repr__"]], "set_new_params() (linear_fa method)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.set_new_params"]], "linear_state_action_value_fa (class in seldonian.rl.agents.function_approximators.linear_fa)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA"]], "__init__() (linear_state_action_value_fa method)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.__init__"]], "__repr__() (linear_state_action_value_fa method)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.__repr__"]], "set_new_params() (linear_state_action_value_fa method)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.set_new_params"]], "seldonian.rl.agents.function_approximators.table": [[16, "module-seldonian.RL.Agents.Function_Approximators.Table"]], "q_table (class in seldonian.rl.agents.function_approximators.table)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table"]], "__init__() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.__init__"]], "__repr__() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.__repr__"]], "from_environment_state_to_0_indexed_state() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.from_environment_state_to_0_indexed_state"]], "get_action_values_given_state() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.get_action_values_given_state"]], "get_action_values_given_zero_indexed_state() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.get_action_values_given_zero_indexed_state"]], "set_new_params() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.set_new_params"]], "table (class in seldonian.rl.agents.function_approximators.table)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table"]], "__init__() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.__init__"]], "__repr__() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.__repr__"]], "from_environment_state_to_0_indexed_state() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.from_environment_state_to_0_indexed_state"]], "set_new_params() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.set_new_params"]], "construct_q_table_from_env_description() (in module seldonian.rl.agents.function_approximators.table)": [[19, "seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description"]], "seldonian.rl.agents.parameterized_non_learning_softmax_agent": [[20, "module-seldonian.RL.Agents.Parameterized_non_learning_softmax_agent"]], "parameterized_non_learning_softmax_agent (class in seldonian.rl.agents.parameterized_non_learning_softmax_agent)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent"]], "__init__() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.__init__"]], "__repr__() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.__repr__"]], "choose_action() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.choose_action"]], "get_action_values() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.get_action_values"]], "get_params() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.get_params"]], "get_prob_this_action() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.get_prob_this_action"]], "set_new_params() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.set_new_params"]], "update() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.update"]], "seldonian.rl.agents.policies": [[22, "module-seldonian.RL.Agents.Policies"]], "seldonian.rl.agents.policies.policy": [[23, "module-seldonian.RL.Agents.Policies.Policy"]], "discrete_action_policy (class in seldonian.rl.agents.policies.policy)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy"]], "__init__() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.__init__"]], "__repr__() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.__repr__"]], "choose_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.choose_action"]], "construct_basis_and_linear_fa() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.construct_basis_and_linear_FA"]], "from_0_indexed_action_to_environment_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.from_0_indexed_action_to_environment_action"]], "from_environment_action_to_0_indexed_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.from_environment_action_to_0_indexed_action"]], "get_action_values_given_state() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.get_action_values_given_state"]], "get_params() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.get_params"]], "get_prob_this_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.get_prob_this_action"]], "make_state_action_fa() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.make_state_action_FA"]], "set_new_params() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.set_new_params"]], "policy (class in seldonian.rl.agents.policies.policy)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy"]], "__init__() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.__init__"]], "__repr__() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.__repr__"]], "choose_action() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.choose_action"]], "get_params() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.get_params"]], "get_prob_this_action() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.get_prob_this_action"]], "set_new_params() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.set_new_params"]], "seldonian.rl.agents.policies.softmax": [[26, "module-seldonian.RL.Agents.Policies.Softmax"]], "discretesoftmax (class in seldonian.rl.agents.policies.softmax)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax"]], "__init__() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.__init__"]], "__repr__() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.__repr__"]], "_arg() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax._arg"]], "_denom() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax._denom"]], "choose_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.choose_action"]], "choose_action_from_action_values() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.choose_action_from_action_values"]], "construct_basis_and_linear_fa() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.construct_basis_and_linear_FA"]], "from_0_indexed_action_to_environment_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.from_0_indexed_action_to_environment_action"]], "from_environment_action_to_0_indexed_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.from_environment_action_to_0_indexed_action"]], "get_action_probs_from_action_values() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_action_probs_from_action_values"]], "get_action_values_given_state() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_action_values_given_state"]], "get_e_to_the_something_terms() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_e_to_the_something_terms"]], "get_params() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_params"]], "get_prob_this_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_prob_this_action"]], "make_state_action_fa() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.make_state_action_FA"]], "set_new_params() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.set_new_params"]], "softmax (class in seldonian.rl.agents.policies.softmax)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax"]], "__init__() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.__init__"]], "__repr__() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.__repr__"]], "choose_action() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.choose_action"]], "choose_action_from_action_values() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.choose_action_from_action_values"]], "construct_basis_and_linear_fa() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.construct_basis_and_linear_FA"]], "from_0_indexed_action_to_environment_action() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.from_0_indexed_action_to_environment_action"]], "from_environment_action_to_0_indexed_action() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.from_environment_action_to_0_indexed_action"]], "get_action_probs_from_action_values() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_action_probs_from_action_values"]], "get_action_values_given_state() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_action_values_given_state"]], "get_e_to_the_something_terms() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_e_to_the_something_terms"]], "get_params() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_params"]], "get_prob_this_action() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_prob_this_action"]], "make_state_action_fa() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.make_state_action_FA"]], "set_new_params() (softmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.Softmax.set_new_params"]], "seldonian.rl.agents.keyboard_gridworld": [[29, "module-seldonian.RL.Agents.keyboard_gridworld"]], "keyboard_gridworld (class in seldonian.rl.agents.keyboard_gridworld)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld"]], "__init__() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.__init__"]], "__repr__() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.__repr__"]], "choose_action() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.choose_action"]], "get_params() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.get_params"]], "get_prob_this_action() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.get_prob_this_action"]], "set_new_params() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.set_new_params"]], "update() (keyboard_gridworld method)": [[30, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.update"]], "seldonian.rl.agents.mountain_car_rough_solution": [[31, "module-seldonian.RL.Agents.mountain_car_rough_solution"]], "mountain_car_rough_solution (class in seldonian.rl.agents.mountain_car_rough_solution)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution"]], "__init__() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.__init__"]], "__repr__() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.__repr__"]], "choose_action() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.choose_action"]], "get_params() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.get_params"]], "get_prob_this_action() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.get_prob_this_action"]], "set_new_params() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.set_new_params"]], "update() (mountain_car_rough_solution method)": [[32, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.update"]], "seldonian.rl.env_description": [[33, "module-seldonian.RL.Env_Description"]], "seldonian.rl.env_description.env_description": [[34, "module-seldonian.RL.Env_Description.Env_Description"]], "env_description (class in seldonian.rl.env_description.env_description)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description"]], "__init__() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.__init__"]], "__repr__() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.__repr__"]], "get_min_action() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_min_action"]], "get_min_state() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_min_state"]], "get_num_actions() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_num_actions"]], "get_num_observation_dims() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_num_observation_dims"]], "get_num_states() (env_description method)": [[35, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_num_states"]], "check_space_type() (in module seldonian.rl.env_description.env_description)": [[36, "seldonian.RL.Env_Description.Env_Description.check_space_type"]], "seldonian.rl.env_description.spaces": [[37, "module-seldonian.RL.Env_Description.Spaces"]], "continuous_space (class in seldonian.rl.env_description.spaces)": [[38, "seldonian.RL.Env_Description.Spaces.Continuous_Space"]], "__init__() (continuous_space method)": [[38, "seldonian.RL.Env_Description.Spaces.Continuous_Space.__init__"]], "__repr__() (continuous_space method)": [[38, "seldonian.RL.Env_Description.Spaces.Continuous_Space.__repr__"]], "check_bounds_valid() (continuous_space method)": [[38, "seldonian.RL.Env_Description.Spaces.Continuous_Space.check_bounds_valid"]], "get_num_dims() (continuous_space method)": [[38, "seldonian.RL.Env_Description.Spaces.Continuous_Space.get_num_dims"]], "discrete_space (class in seldonian.rl.env_description.spaces)": [[39, "seldonian.RL.Env_Description.Spaces.Discrete_Space"]], "__init__() (discrete_space method)": [[39, "seldonian.RL.Env_Description.Spaces.Discrete_Space.__init__"]], "__repr__() (discrete_space method)": [[39, "seldonian.RL.Env_Description.Spaces.Discrete_Space.__repr__"]], "get_num_values() (discrete_space method)": [[39, "seldonian.RL.Env_Description.Spaces.Discrete_Space.get_num_values"]], "seldonian.rl.rl_generate_dataset_and_spec_file": [[40, "module-seldonian.RL.RL_generate_dataset_and_spec_file"]], "get_constraint_string() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[41, "seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string"]], "get_env_kwargs() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[42, "seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs"]], "get_metadata_path() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[43, "seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path"]], "main() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[44, "seldonian.RL.RL_generate_dataset_and_spec_file.main"]], "print_return_info() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[45, "seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info"]], "seldonian.rl.rl_model": [[46, "module-seldonian.RL.RL_model"]], "rl_model (class in seldonian.rl.rl_model)": [[47, "seldonian.RL.RL_model.RL_model"]], "__init__() (rl_model method)": [[47, "seldonian.RL.RL_model.RL_model.__init__"]], "__repr__() (rl_model method)": [[47, "seldonian.RL.RL_model.RL_model.__repr__"]], "get_prob_this_action() (rl_model method)": [[47, "seldonian.RL.RL_model.RL_model.get_prob_this_action"]], "get_probs_from_observations_and_actions() (rl_model method)": [[47, "seldonian.RL.RL_model.RL_model.get_probs_from_observations_and_actions"]], "seldonian.rl.rl_runner": [[48, "module-seldonian.RL.RL_runner"]], "create_agent() (in module seldonian.rl.rl_runner)": [[49, "seldonian.RL.RL_runner.create_agent"]], "run_all_trials() (in module seldonian.rl.rl_runner)": [[50, "seldonian.RL.RL_runner.run_all_trials"]], "run_episode() (in module seldonian.rl.rl_runner)": [[51, "seldonian.RL.RL_runner.run_episode"]], "run_episode_from_dict() (in module seldonian.rl.rl_runner)": [[52, "seldonian.RL.RL_runner.run_episode_from_dict"]], "run_trial() (in module seldonian.rl.rl_runner)": [[53, "seldonian.RL.RL_runner.run_trial"]], "run_trial_given_agent_and_env() (in module seldonian.rl.rl_runner)": [[54, "seldonian.RL.RL_runner.run_trial_given_agent_and_env"]], "seldonian.rl.environments": [[55, "module-seldonian.RL.environments"]], "seldonian.rl.environments.environment": [[56, "module-seldonian.RL.environments.Environment"]], "environment (class in seldonian.rl.environments.environment)": [[57, "seldonian.RL.environments.Environment.Environment"]], "__init__() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.__init__"]], "__repr__() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.__repr__"]], "get_env_description() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.get_env_description"]], "get_observation() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.get_observation"]], "reset() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.reset"]], "start_visualizing() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.start_visualizing"]], "stop_visualizing() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.stop_visualizing"]], "terminated() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.terminated"]], "transition() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.transition"]], "visualize() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.visualize"]], "seldonian.rl.environments.gridworld": [[58, "module-seldonian.RL.environments.gridworld"]], "gridworld (class in seldonian.rl.environments.gridworld)": [[59, "seldonian.RL.environments.gridworld.Gridworld"]], "__init__() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.__init__"]], "__repr__() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.__repr__"]], "create_env_description() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.create_env_description"]], "get_env_description() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.get_env_description"]], "get_observation() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.get_observation"]], "is_in_goal_state() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.is_in_goal_state"]], "reset() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.reset"]], "start_visualizing() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.start_visualizing"]], "stop_visualizing() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.stop_visualizing"]], "terminated() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.terminated"]], "transition() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.transition"]], "update_position() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.update_position"]], "visualize() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.visualize"]], "seldonian.rl.environments.mountaincar": [[60, "module-seldonian.RL.environments.mountaincar"]], "mountaincar (class in seldonian.rl.environments.mountaincar)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar"]], "__init__() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.__init__"]], "__repr__() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.__repr__"]], "get_env_description() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.get_env_description"]], "get_observation() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.get_observation"]], "reset() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.reset"]], "start_visualizing() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.start_visualizing"]], "stop_visualizing() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.stop_visualizing"]], "terminated() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.terminated"]], "transition() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.transition"]], "visualize() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.visualize"]], "seldonian.rl.environments.n_step_mountaincar": [[62, "module-seldonian.RL.environments.n_step_mountaincar"]], "n_step_mountaincar (class in seldonian.rl.environments.n_step_mountaincar)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar"]], "__init__() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.__init__"]], "__repr__() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.__repr__"]], "get_env_description() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.get_env_description"]], "get_observation() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.get_observation"]], "reset() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.reset"]], "start_visualizing() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.start_visualizing"]], "stop_visualizing() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.stop_visualizing"]], "terminated() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.terminated"]], "transition() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.transition"]], "visualize() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.visualize"]], "seldonian.rl.environments.simglucose_env": [[64, "module-seldonian.RL.environments.simglucose_env"]], "simglucose (class in seldonian.rl.environments.simglucose_env)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose"]], "__init__() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.__init__"]], "__repr__() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.__repr__"]], "get_env_description() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.get_env_description"]], "get_observation() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.get_observation"]], "reset() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.reset"]], "start_visualizing() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.start_visualizing"]], "stop_visualizing() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.stop_visualizing"]], "terminated() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.terminated"]], "transition() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.transition"]], "visualize() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.visualize"]], "seldonian.rl.generate_gridworld_episodes": [[66, "module-seldonian.RL.generate_gridworld_episodes"]], "main() (in module seldonian.rl.generate_gridworld_episodes)": [[67, "seldonian.RL.generate_gridworld_episodes.main"]], "seldonian.rl.generate_mountaincar_episodes": [[68, "module-seldonian.RL.generate_mountaincar_episodes"]], "main() (in module seldonian.rl.generate_mountaincar_episodes)": [[69, "seldonian.RL.generate_mountaincar_episodes.main"]], "seldonian.rl.generate_simglucose_episodes": [[70, "module-seldonian.RL.generate_simglucose_episodes"]], "get_max_obs() (in module seldonian.rl.generate_simglucose_episodes)": [[71, "seldonian.RL.generate_simglucose_episodes.get_max_obs"]], "main() (in module seldonian.rl.generate_simglucose_episodes)": [[72, "seldonian.RL.generate_simglucose_episodes.main"]], "seldonian.rl.hyperparams_and_settings": [[73, "module-seldonian.RL.hyperparams_and_settings"]], "define_hyperparameter_and_setting_dict() (in module seldonian.rl.hyperparams_and_settings)": [[74, "seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict"]], "seldonian.candidate_selection": [[75, "module-seldonian.candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[76, "module-seldonian.candidate_selection.candidate_selection"]], "candidateselection (class in seldonian.candidate_selection.candidate_selection)": [[77, "seldonian.candidate_selection.candidate_selection.CandidateSelection"]], "__init__() (candidateselection method)": [[77, "seldonian.candidate_selection.candidate_selection.CandidateSelection.__init__"]], "__repr__() (candidateselection method)": [[77, "seldonian.candidate_selection.candidate_selection.CandidateSelection.__repr__"]], "calculate_batches() (candidateselection method)": [[77, "seldonian.candidate_selection.candidate_selection.CandidateSelection.calculate_batches"]], "evaluate_primary_objective() (candidateselection method)": [[77, "seldonian.candidate_selection.candidate_selection.CandidateSelection.evaluate_primary_objective"]], "get_constraint_upper_bounds() (candidateselection method)": [[77, "seldonian.candidate_selection.candidate_selection.CandidateSelection.get_constraint_upper_bounds"]], "objective_with_barrier() (candidateselection method)": [[77, "seldonian.candidate_selection.candidate_selection.CandidateSelection.objective_with_barrier"]], "run() (candidateselection method)": [[77, "seldonian.candidate_selection.candidate_selection.CandidateSelection.run"]], "seldonian.dataset": [[78, "module-seldonian.dataset"]], "dataset (class in seldonian.dataset)": [[79, "seldonian.dataset.DataSet"]], "__init__() (dataset method)": [[79, "seldonian.dataset.DataSet.__init__"]], "__repr__() (dataset method)": [[79, "seldonian.dataset.DataSet.__repr__"]], "datasetloader (class in seldonian.dataset)": [[80, "seldonian.dataset.DataSetLoader"]], "__init__() (datasetloader method)": [[80, "seldonian.dataset.DataSetLoader.__init__"]], "__repr__() (datasetloader method)": [[80, "seldonian.dataset.DataSetLoader.__repr__"]], "load_rl_dataset_from_csv() (datasetloader method)": [[80, "seldonian.dataset.DataSetLoader.load_RL_dataset_from_csv"]], "load_rl_dataset_from_episode_file() (datasetloader method)": [[80, "seldonian.dataset.DataSetLoader.load_RL_dataset_from_episode_file"]], "load_supervised_dataset() (datasetloader method)": [[80, "seldonian.dataset.DataSetLoader.load_supervised_dataset"]], "episode (class in seldonian.dataset)": [[81, "seldonian.dataset.Episode"]], "__init__() (episode method)": [[81, "seldonian.dataset.Episode.__init__"]], "__repr__() (episode method)": [[81, "seldonian.dataset.Episode.__repr__"]], "rldataset (class in seldonian.dataset)": [[82, "seldonian.dataset.RLDataSet"]], "__init__() (rldataset method)": [[82, "seldonian.dataset.RLDataSet.__init__"]], "__repr__() (rldataset method)": [[82, "seldonian.dataset.RLDataSet.__repr__"]], "superviseddataset (class in seldonian.dataset)": [[83, "seldonian.dataset.SupervisedDataSet"]], "__init__() (superviseddataset method)": [[83, "seldonian.dataset.SupervisedDataSet.__init__"]], "__repr__() (superviseddataset method)": [[83, "seldonian.dataset.SupervisedDataSet.__repr__"]], "load_supervised_metadata() (in module seldonian.dataset)": [[84, "seldonian.dataset.load_supervised_metadata"]], "seldonian.hyperparam_search": [[85, "module-seldonian.hyperparam_search"]], "hyperparamsearch (class in seldonian.hyperparam_search)": [[86, "seldonian.hyperparam_search.HyperparamSearch"]], "__init__() (hyperparamsearch method)": [[86, "seldonian.hyperparam_search.HyperparamSearch.__init__"]], "__repr__() (hyperparamsearch method)": [[86, "seldonian.hyperparam_search.HyperparamSearch.__repr__"]], "bootstrap_sample_dataset() (hyperparamsearch method)": [[86, "seldonian.hyperparam_search.HyperparamSearch.bootstrap_sample_dataset"]], "candidate_selection() (hyperparamsearch method)": [[86, "seldonian.hyperparam_search.HyperparamSearch.candidate_selection"]], "create_dataset() (hyperparamsearch method)": [[86, "seldonian.hyperparam_search.HyperparamSearch.create_dataset"]], "est_prob_pass() (hyperparamsearch method)": [[86, "seldonian.hyperparam_search.HyperparamSearch.est_prob_pass"]], "find_best_hyperparams() (hyperparamsearch method)": [[86, "seldonian.hyperparam_search.HyperparamSearch.find_best_hyperparams"]], "get_initial_solution() (hyperparamsearch method)": [[86, "seldonian.hyperparam_search.HyperparamSearch.get_initial_solution"]], "get_safety_size() (hyperparamsearch method)": [[86, "seldonian.hyperparam_search.HyperparamSearch.get_safety_size"]], "run_core() (hyperparamsearch method)": [[86, "seldonian.hyperparam_search.HyperparamSearch.run_core"]], "run_safety_test() (hyperparamsearch method)": [[86, "seldonian.hyperparam_search.HyperparamSearch.run_safety_test"]], "safety_test() (hyperparamsearch method)": [[86, "seldonian.hyperparam_search.HyperparamSearch.safety_test"]], "seldonian.models": [[87, "module-seldonian.models"]], "seldonian.models.models": [[88, "module-seldonian.models.models"]], "baselogisticregressionmodel (class in seldonian.models.models)": [[89, "seldonian.models.models.BaseLogisticRegressionModel"]], "__init__() (baselogisticregressionmodel method)": [[89, "seldonian.models.models.BaseLogisticRegressionModel.__init__"]], "__repr__() (baselogisticregressionmodel method)": [[89, "seldonian.models.models.BaseLogisticRegressionModel.__repr__"]], "fit() (baselogisticregressionmodel method)": [[89, "seldonian.models.models.BaseLogisticRegressionModel.fit"]], "binarylogisticregressionmodel (class in seldonian.models.models)": [[90, "seldonian.models.models.BinaryLogisticRegressionModel"]], "__init__() (binarylogisticregressionmodel method)": [[90, "seldonian.models.models.BinaryLogisticRegressionModel.__init__"]], "__repr__() (binarylogisticregressionmodel method)": [[90, "seldonian.models.models.BinaryLogisticRegressionModel.__repr__"]], "fit() (binarylogisticregressionmodel method)": [[90, "seldonian.models.models.BinaryLogisticRegressionModel.fit"]], "predict() (binarylogisticregressionmodel method)": [[90, "seldonian.models.models.BinaryLogisticRegressionModel.predict"]], "boundedlinearregressionmodel (class in seldonian.models.models)": [[91, "seldonian.models.models.BoundedLinearRegressionModel"]], "__init__() (boundedlinearregressionmodel method)": [[91, "seldonian.models.models.BoundedLinearRegressionModel.__init__"]], "__repr__() (boundedlinearregressionmodel method)": [[91, "seldonian.models.models.BoundedLinearRegressionModel.__repr__"]], "fit() (boundedlinearregressionmodel method)": [[91, "seldonian.models.models.BoundedLinearRegressionModel.fit"]], "predict() (boundedlinearregressionmodel method)": [[91, "seldonian.models.models.BoundedLinearRegressionModel.predict"]], "classificationmodel (class in seldonian.models.models)": [[92, "seldonian.models.models.ClassificationModel"]], "__init__() (classificationmodel method)": [[92, "seldonian.models.models.ClassificationModel.__init__"]], "__repr__() (classificationmodel method)": [[92, "seldonian.models.models.ClassificationModel.__repr__"]], "dummyclassifiermodel (class in seldonian.models.models)": [[93, "seldonian.models.models.DummyClassifierModel"]], "__init__() (dummyclassifiermodel method)": [[93, "seldonian.models.models.DummyClassifierModel.__init__"]], "__repr__() (dummyclassifiermodel method)": [[93, "seldonian.models.models.DummyClassifierModel.__repr__"]], "predict() (dummyclassifiermodel method)": [[93, "seldonian.models.models.DummyClassifierModel.predict"]], "linearregressionmodel (class in seldonian.models.models)": [[94, "seldonian.models.models.LinearRegressionModel"]], "__init__() (linearregressionmodel method)": [[94, "seldonian.models.models.LinearRegressionModel.__init__"]], "__repr__() (linearregressionmodel method)": [[94, "seldonian.models.models.LinearRegressionModel.__repr__"]], "fit() (linearregressionmodel method)": [[94, "seldonian.models.models.LinearRegressionModel.fit"]], "predict() (linearregressionmodel method)": [[94, "seldonian.models.models.LinearRegressionModel.predict"]], "linearregressionmodellistfeatures (class in seldonian.models.models)": [[95, "seldonian.models.models.LinearRegressionModelListFeatures"]], "__init__() (linearregressionmodellistfeatures method)": [[95, "seldonian.models.models.LinearRegressionModelListFeatures.__init__"]], "__repr__() (linearregressionmodellistfeatures method)": [[95, "seldonian.models.models.LinearRegressionModelListFeatures.__repr__"]], "fit() (linearregressionmodellistfeatures method)": [[95, "seldonian.models.models.LinearRegressionModelListFeatures.fit"]], "predict() (linearregressionmodellistfeatures method)": [[95, "seldonian.models.models.LinearRegressionModelListFeatures.predict"]], "multiclasslogisticregressionmodel (class in seldonian.models.models)": [[96, "seldonian.models.models.MultiClassLogisticRegressionModel"]], "__init__() (multiclasslogisticregressionmodel method)": [[96, "seldonian.models.models.MultiClassLogisticRegressionModel.__init__"]], "__repr__() (multiclasslogisticregressionmodel method)": [[96, "seldonian.models.models.MultiClassLogisticRegressionModel.__repr__"]], "fit() (multiclasslogisticregressionmodel method)": [[96, "seldonian.models.models.MultiClassLogisticRegressionModel.fit"]], "predict() (multiclasslogisticregressionmodel method)": [[96, "seldonian.models.models.MultiClassLogisticRegressionModel.predict"]], "randomclassifiermodel (class in seldonian.models.models)": [[97, "seldonian.models.models.RandomClassifierModel"]], "__init__() (randomclassifiermodel method)": [[97, "seldonian.models.models.RandomClassifierModel.__init__"]], "__repr__() (randomclassifiermodel method)": [[97, "seldonian.models.models.RandomClassifierModel.__repr__"]], "predict() (randomclassifiermodel method)": [[97, "seldonian.models.models.RandomClassifierModel.predict"]], "regressionmodel (class in seldonian.models.models)": [[98, "seldonian.models.models.RegressionModel"]], "__init__() (regressionmodel method)": [[98, "seldonian.models.models.RegressionModel.__init__"]], "__repr__() (regressionmodel method)": [[98, "seldonian.models.models.RegressionModel.__repr__"]], "seldonianmodel (class in seldonian.models.models)": [[99, "seldonian.models.models.SeldonianModel"]], "__init__() (seldonianmodel method)": [[99, "seldonian.models.models.SeldonianModel.__init__"]], "__repr__() (seldonianmodel method)": [[99, "seldonian.models.models.SeldonianModel.__repr__"]], "supervisedmodel (class in seldonian.models.models)": [[100, "seldonian.models.models.SupervisedModel"]], "__init__() (supervisedmodel method)": [[100, "seldonian.models.models.SupervisedModel.__init__"]], "__repr__() (supervisedmodel method)": [[100, "seldonian.models.models.SupervisedModel.__repr__"]], "seldonian.models.objectives": [[101, "module-seldonian.models.objectives"]], "accuracy() (in module seldonian.models.objectives)": [[102, "seldonian.models.objectives.Accuracy"]], "false_negative_rate() (in module seldonian.models.objectives)": [[103, "seldonian.models.objectives.False_Negative_Rate"]], "false_positive_rate() (in module seldonian.models.objectives)": [[104, "seldonian.models.objectives.False_Positive_Rate"]], "is_estimate() (in module seldonian.models.objectives)": [[105, "seldonian.models.objectives.IS_estimate"]], "mean_error() (in module seldonian.models.objectives)": [[106, "seldonian.models.objectives.Mean_Error"]], "mean_squared_error() (in module seldonian.models.objectives)": [[107, "seldonian.models.objectives.Mean_Squared_Error"]], "negative_rate() (in module seldonian.models.objectives)": [[108, "seldonian.models.objectives.Negative_Rate"]], "positive_rate() (in module seldonian.models.objectives)": [[109, "seldonian.models.objectives.Positive_Rate"]], "true_negative_rate() (in module seldonian.models.objectives)": [[110, "seldonian.models.objectives.True_Negative_Rate"]], "true_positive_rate() (in module seldonian.models.objectives)": [[111, "seldonian.models.objectives.True_Positive_Rate"]], "batcher() (in module seldonian.models.objectives)": [[112, "seldonian.models.objectives.batcher"]], "binary_logistic_loss() (in module seldonian.models.objectives)": [[113, "seldonian.models.objectives.binary_logistic_loss"]], "confusion_matrix() (in module seldonian.models.objectives)": [[114, "seldonian.models.objectives.confusion_matrix"]], "evaluate_statistic() (in module seldonian.models.objectives)": [[115, "seldonian.models.objectives.evaluate_statistic"]], "gradient_bounded_squared_error() (in module seldonian.models.objectives)": [[116, "seldonian.models.objectives.gradient_Bounded_Squared_Error"]], "gradient_mean_squared_error() (in module seldonian.models.objectives)": [[117, "seldonian.models.objectives.gradient_Mean_Squared_Error"]], "gradient_binary_logistic_loss() (in module seldonian.models.objectives)": [[118, "seldonian.models.objectives.gradient_binary_logistic_loss"]], "multiclass_logistic_loss() (in module seldonian.models.objectives)": [[119, "seldonian.models.objectives.multiclass_logistic_loss"]], "sample_from_statistic() (in module seldonian.models.objectives)": [[120, "seldonian.models.objectives.sample_from_statistic"]], "vector_accuracy() (in module seldonian.models.objectives)": [[121, "seldonian.models.objectives.vector_Accuracy"]], "vector_error() (in module seldonian.models.objectives)": [[122, "seldonian.models.objectives.vector_Error"]], "vector_false_negative_rate() (in module seldonian.models.objectives)": [[123, "seldonian.models.objectives.vector_False_Negative_Rate"]], "vector_false_positive_rate() (in module seldonian.models.objectives)": [[124, "seldonian.models.objectives.vector_False_Positive_Rate"]], "vector_is_estimate() (in module seldonian.models.objectives)": [[125, "seldonian.models.objectives.vector_IS_estimate"]], "vector_negative_rate() (in module seldonian.models.objectives)": [[126, "seldonian.models.objectives.vector_Negative_Rate"]], "vector_positive_rate() (in module seldonian.models.objectives)": [[127, "seldonian.models.objectives.vector_Positive_Rate"]], "vector_squared_error() (in module seldonian.models.objectives)": [[128, "seldonian.models.objectives.vector_Squared_Error"]], "vector_true_negative_rate() (in module seldonian.models.objectives)": [[129, "seldonian.models.objectives.vector_True_Negative_Rate"]], "vector_true_positive_rate() (in module seldonian.models.objectives)": [[130, "seldonian.models.objectives.vector_True_Positive_Rate"]], "vector_confusion_matrix() (in module seldonian.models.objectives)": [[131, "seldonian.models.objectives.vector_confusion_matrix"]], "seldonian.models.sklearn_lr": [[132, "module-seldonian.models.sklearn_lr"]], "sklearnlinearregressor (class in seldonian.models.sklearn_lr)": [[133, "seldonian.models.sklearn_lr.SkLearnLinearRegressor"]], "__init__() (sklearnlinearregressor method)": [[133, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.__init__"]], "__repr__() (sklearnlinearregressor method)": [[133, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.__repr__"]], "backward_pass() (sklearnlinearregressor method)": [[133, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.backward_pass"]], "create_model() (sklearnlinearregressor method)": [[133, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.create_model"]], "forward_pass() (sklearnlinearregressor method)": [[133, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.forward_pass"]], "get_model_params() (sklearnlinearregressor method)": [[133, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.get_model_params"]], "predict() (sklearnlinearregressor method)": [[133, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.predict"]], "update_model_params() (sklearnlinearregressor method)": [[133, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.update_model_params"]], "seldonian.models.sklearn_model": [[134, "module-seldonian.models.sklearn_model"]], "supervisedsklearnbasemodel (class in seldonian.models.sklearn_model)": [[135, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel"]], "__init__() (supervisedsklearnbasemodel method)": [[135, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.__init__"]], "__repr__() (supervisedsklearnbasemodel method)": [[135, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.__repr__"]], "backward_pass() (supervisedsklearnbasemodel method)": [[135, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.backward_pass"]], "create_model() (supervisedsklearnbasemodel method)": [[135, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.create_model"]], "forward_pass() (supervisedsklearnbasemodel method)": [[135, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.forward_pass"]], "get_model_params() (supervisedsklearnbasemodel method)": [[135, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.get_model_params"]], "predict() (supervisedsklearnbasemodel method)": [[135, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.predict"]], "update_model_params() (supervisedsklearnbasemodel method)": [[135, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.update_model_params"]], "sklearn_predict_vjp() (in module seldonian.models.sklearn_model)": [[136, "seldonian.models.sklearn_model.sklearn_predict_vjp"]], "seldonian.optimizers": [[137, "module-seldonian.optimizers"]], "seldonian.optimizers.gradient_descent": [[138, "module-seldonian.optimizers.gradient_descent"]], "gradient_descent_adam() (in module seldonian.optimizers.gradient_descent)": [[139, "seldonian.optimizers.gradient_descent.gradient_descent_adam"]], "setup_gradients() (in module seldonian.optimizers.gradient_descent)": [[140, "seldonian.optimizers.gradient_descent.setup_gradients"]], "seldonian.parse_tree": [[141, "module-seldonian.parse_tree"]], "seldonian.parse_tree.nodes": [[142, "module-seldonian.parse_tree.nodes"]], "basenode (class in seldonian.parse_tree.nodes)": [[143, "seldonian.parse_tree.nodes.BaseNode"]], "__init__() (basenode method)": [[143, "seldonian.parse_tree.nodes.BaseNode.__init__"]], "__repr__() (basenode method)": [[143, "seldonian.parse_tree.nodes.BaseNode.__repr__"]], "calculate_bounds() (basenode method)": [[143, "seldonian.parse_tree.nodes.BaseNode.calculate_bounds"]], "calculate_data_forbound() (basenode method)": [[143, "seldonian.parse_tree.nodes.BaseNode.calculate_data_forbound"]], "calculate_value() (basenode method)": [[143, "seldonian.parse_tree.nodes.BaseNode.calculate_value"]], "compute_hc_lowerbound() (basenode method)": [[143, "seldonian.parse_tree.nodes.BaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (basenode method)": [[143, "seldonian.parse_tree.nodes.BaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (basenode method)": [[143, "seldonian.parse_tree.nodes.BaseNode.compute_HC_upperbound"]], "mask_data() (basenode method)": [[143, "seldonian.parse_tree.nodes.BaseNode.mask_data"]], "predict_hc_lowerbound() (basenode method)": [[143, "seldonian.parse_tree.nodes.BaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (basenode method)": [[143, "seldonian.parse_tree.nodes.BaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (basenode method)": [[143, "seldonian.parse_tree.nodes.BaseNode.predict_HC_upperbound"]], "zhat() (basenode method)": [[143, "seldonian.parse_tree.nodes.BaseNode.zhat"]], "cvarsqebasenode (class in seldonian.parse_tree.nodes)": [[144, "seldonian.parse_tree.nodes.CVaRSQeBaseNode"]], "__init__() (cvarsqebasenode method)": [[144, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.__init__"]], "__repr__() (cvarsqebasenode method)": [[144, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.__repr__"]], "calculate_bounds() (cvarsqebasenode method)": [[144, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.calculate_bounds"]], "calculate_data_forbound() (cvarsqebasenode method)": [[144, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.calculate_data_forbound"]], "calculate_value() (cvarsqebasenode method)": [[144, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.calculate_value"]], "compute_hc_lowerbound() (cvarsqebasenode method)": [[144, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (cvarsqebasenode method)": [[144, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (cvarsqebasenode method)": [[144, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.compute_HC_upperbound"]], "mask_data() (cvarsqebasenode method)": [[144, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.mask_data"]], "predict_hc_lowerbound() (cvarsqebasenode method)": [[144, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (cvarsqebasenode method)": [[144, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (cvarsqebasenode method)": [[144, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.predict_HC_upperbound"]], "zhat() (cvarsqebasenode method)": [[144, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.zhat"]], "confusionmatrixbasenode (class in seldonian.parse_tree.nodes)": [[145, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode"]], "__init__() (confusionmatrixbasenode method)": [[145, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.__init__"]], "__repr__() (confusionmatrixbasenode method)": [[145, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.__repr__"]], "calculate_bounds() (confusionmatrixbasenode method)": [[145, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.calculate_bounds"]], "calculate_data_forbound() (confusionmatrixbasenode method)": [[145, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.calculate_data_forbound"]], "calculate_value() (confusionmatrixbasenode method)": [[145, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.calculate_value"]], "compute_hc_lowerbound() (confusionmatrixbasenode method)": [[145, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (confusionmatrixbasenode method)": [[145, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (confusionmatrixbasenode method)": [[145, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.compute_HC_upperbound"]], "mask_data() (confusionmatrixbasenode method)": [[145, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.mask_data"]], "predict_hc_lowerbound() (confusionmatrixbasenode method)": [[145, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (confusionmatrixbasenode method)": [[145, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (confusionmatrixbasenode method)": [[145, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.predict_HC_upperbound"]], "zhat() (confusionmatrixbasenode method)": [[145, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.zhat"]], "constantnode (class in seldonian.parse_tree.nodes)": [[146, "seldonian.parse_tree.nodes.ConstantNode"]], "__init__() (constantnode method)": [[146, "seldonian.parse_tree.nodes.ConstantNode.__init__"]], "__repr__() (constantnode method)": [[146, "seldonian.parse_tree.nodes.ConstantNode.__repr__"]], "internalnode (class in seldonian.parse_tree.nodes)": [[147, "seldonian.parse_tree.nodes.InternalNode"]], "__init__() (internalnode method)": [[147, "seldonian.parse_tree.nodes.InternalNode.__init__"]], "__repr__() (internalnode method)": [[147, "seldonian.parse_tree.nodes.InternalNode.__repr__"]], "medcustombasenode (class in seldonian.parse_tree.nodes)": [[148, "seldonian.parse_tree.nodes.MEDCustomBaseNode"]], "__init__() (medcustombasenode method)": [[148, "seldonian.parse_tree.nodes.MEDCustomBaseNode.__init__"]], "__repr__() (medcustombasenode method)": [[148, "seldonian.parse_tree.nodes.MEDCustomBaseNode.__repr__"]], "calculate_bounds() (medcustombasenode method)": [[148, "seldonian.parse_tree.nodes.MEDCustomBaseNode.calculate_bounds"]], "calculate_data_forbound() (medcustombasenode method)": [[148, "seldonian.parse_tree.nodes.MEDCustomBaseNode.calculate_data_forbound"]], "calculate_value() (medcustombasenode method)": [[148, "seldonian.parse_tree.nodes.MEDCustomBaseNode.calculate_value"]], "compute_hc_lowerbound() (medcustombasenode method)": [[148, "seldonian.parse_tree.nodes.MEDCustomBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (medcustombasenode method)": [[148, "seldonian.parse_tree.nodes.MEDCustomBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (medcustombasenode method)": [[148, "seldonian.parse_tree.nodes.MEDCustomBaseNode.compute_HC_upperbound"]], "mask_data() (medcustombasenode method)": [[148, "seldonian.parse_tree.nodes.MEDCustomBaseNode.mask_data"]], "precalculate_data() (medcustombasenode method)": [[148, "seldonian.parse_tree.nodes.MEDCustomBaseNode.precalculate_data"]], "predict_hc_lowerbound() (medcustombasenode method)": [[148, "seldonian.parse_tree.nodes.MEDCustomBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (medcustombasenode method)": [[148, "seldonian.parse_tree.nodes.MEDCustomBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (medcustombasenode method)": [[148, "seldonian.parse_tree.nodes.MEDCustomBaseNode.predict_HC_upperbound"]], "zhat() (medcustombasenode method)": [[148, "seldonian.parse_tree.nodes.MEDCustomBaseNode.zhat"]], "multiclassbasenode (class in seldonian.parse_tree.nodes)": [[149, "seldonian.parse_tree.nodes.MultiClassBaseNode"]], "__init__() (multiclassbasenode method)": [[149, "seldonian.parse_tree.nodes.MultiClassBaseNode.__init__"]], "__repr__() (multiclassbasenode method)": [[149, "seldonian.parse_tree.nodes.MultiClassBaseNode.__repr__"]], "calculate_bounds() (multiclassbasenode method)": [[149, "seldonian.parse_tree.nodes.MultiClassBaseNode.calculate_bounds"]], "calculate_data_forbound() (multiclassbasenode method)": [[149, "seldonian.parse_tree.nodes.MultiClassBaseNode.calculate_data_forbound"]], "calculate_value() (multiclassbasenode method)": [[149, "seldonian.parse_tree.nodes.MultiClassBaseNode.calculate_value"]], "compute_hc_lowerbound() (multiclassbasenode method)": [[149, "seldonian.parse_tree.nodes.MultiClassBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (multiclassbasenode method)": [[149, "seldonian.parse_tree.nodes.MultiClassBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (multiclassbasenode method)": [[149, "seldonian.parse_tree.nodes.MultiClassBaseNode.compute_HC_upperbound"]], "mask_data() (multiclassbasenode method)": [[149, "seldonian.parse_tree.nodes.MultiClassBaseNode.mask_data"]], "predict_hc_lowerbound() (multiclassbasenode method)": [[149, "seldonian.parse_tree.nodes.MultiClassBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (multiclassbasenode method)": [[149, "seldonian.parse_tree.nodes.MultiClassBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (multiclassbasenode method)": [[149, "seldonian.parse_tree.nodes.MultiClassBaseNode.predict_HC_upperbound"]], "zhat() (multiclassbasenode method)": [[149, "seldonian.parse_tree.nodes.MultiClassBaseNode.zhat"]], "node (class in seldonian.parse_tree.nodes)": [[150, "seldonian.parse_tree.nodes.Node"]], "__init__() (node method)": [[150, "seldonian.parse_tree.nodes.Node.__init__"]], "__repr__() (node method)": [[150, "seldonian.parse_tree.nodes.Node.__repr__"]], "bounds_required_dict (in module seldonian.parse_tree.operators)": [[151, "seldonian.parse_tree.operators.bounds_required_dict"]], "custom_base_node_dict (in module seldonian.parse_tree.operators)": [[151, "seldonian.parse_tree.operators.custom_base_node_dict"]], "measure_functions_dict (in module seldonian.parse_tree.operators)": [[151, "seldonian.parse_tree.operators.measure_functions_dict"]], "not_supported_op_mapper (in module seldonian.parse_tree.operators)": [[151, "seldonian.parse_tree.operators.not_supported_op_mapper"]], "op_mapper (in module seldonian.parse_tree.operators)": [[151, "seldonian.parse_tree.operators.op_mapper"]], "seldonian.parse_tree.operators": [[151, "module-seldonian.parse_tree.operators"]], "seldonian.parse_tree.parse_tree": [[152, "module-seldonian.parse_tree.parse_tree"]], "parsetree (class in seldonian.parse_tree.parse_tree)": [[153, "seldonian.parse_tree.parse_tree.ParseTree"]], "__init__() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree.__init__"]], "__repr__() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree.__repr__"]], "_abs() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree._abs"]], "_add() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree._add"]], "_assign_bounds_helper() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree._assign_bounds_helper"]], "_assign_deltas_helper() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree._assign_deltas_helper"]], "_ast2pt_node() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree._ast2pt_node"]], "_ast_tree_helper() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree._ast_tree_helper"]], "_div() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree._div"]], "_evaluator_helper() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree._evaluator_helper"]], "_exp() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree._exp"]], "_log() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree._log"]], "_max() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree._max"]], "_min() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree._min"]], "_mult() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree._mult"]], "_pow() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree._pow"]], "_preprocess_constraint_str() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree._preprocess_constraint_str"]], "_propagate_value() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree._propagate_value"]], "_propagator_helper() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree._propagator_helper"]], "_protect_nan() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree._protect_nan"]], "_sub() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree._sub"]], "assign_bounds_needed() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree.assign_bounds_needed"]], "assign_deltas() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree.assign_deltas"]], "build_tree() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree.build_tree"]], "create_from_ast() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree.create_from_ast"]], "evaluate_constraint() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree.evaluate_constraint"]], "make_viz() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree.make_viz"]], "make_viz_helper() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree.make_viz_helper"]], "propagate() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree.propagate"]], "propagate_bounds() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree.propagate_bounds"]], "reset_base_node_dict() (parsetree method)": [[153, "seldonian.parse_tree.parse_tree.ParseTree.reset_base_node_dict"]], "make_parse_trees_from_constraints() (in module seldonian.parse_tree.parse_tree)": [[154, "seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints"]], "seldonian.safety_test": [[155, "module-seldonian.safety_test"]], "seldonian.safety_test.safety_test": [[156, "module-seldonian.safety_test.safety_test"]], "safetytest (class in seldonian.safety_test.safety_test)": [[157, "seldonian.safety_test.safety_test.SafetyTest"]], "__init__() (safetytest method)": [[157, "seldonian.safety_test.safety_test.SafetyTest.__init__"]], "__repr__() (safetytest method)": [[157, "seldonian.safety_test.safety_test.SafetyTest.__repr__"]], "evaluate_primary_objective() (safetytest method)": [[157, "seldonian.safety_test.safety_test.SafetyTest.evaluate_primary_objective"]], "run() (safetytest method)": [[157, "seldonian.safety_test.safety_test.SafetyTest.run"]], "seldonian.seldonian_algorithm": [[158, "module-seldonian.seldonian_algorithm"]], "seldonianalgorithm (class in seldonian.seldonian_algorithm)": [[159, "seldonian.seldonian_algorithm.SeldonianAlgorithm"]], "__init__() (seldonianalgorithm method)": [[159, "seldonian.seldonian_algorithm.SeldonianAlgorithm.__init__"]], "__repr__() (seldonianalgorithm method)": [[159, "seldonian.seldonian_algorithm.SeldonianAlgorithm.__repr__"]], "candidate_safety_split() (seldonianalgorithm method)": [[159, "seldonian.seldonian_algorithm.SeldonianAlgorithm.candidate_safety_split"]], "candidate_selection() (seldonianalgorithm method)": [[159, "seldonian.seldonian_algorithm.SeldonianAlgorithm.candidate_selection"]], "evaluate_primary_objective() (seldonianalgorithm method)": [[159, "seldonian.seldonian_algorithm.SeldonianAlgorithm.evaluate_primary_objective"]], "get_cs_result() (seldonianalgorithm method)": [[159, "seldonian.seldonian_algorithm.SeldonianAlgorithm.get_cs_result"]], "get_st_upper_bounds() (seldonianalgorithm method)": [[159, "seldonian.seldonian_algorithm.SeldonianAlgorithm.get_st_upper_bounds"]], "run() (seldonianalgorithm method)": [[159, "seldonian.seldonian_algorithm.SeldonianAlgorithm.run"]], "run_safety_test() (seldonianalgorithm method)": [[159, "seldonian.seldonian_algorithm.SeldonianAlgorithm.run_safety_test"]], "safety_test() (seldonianalgorithm method)": [[159, "seldonian.seldonian_algorithm.SeldonianAlgorithm.safety_test"]], "seldonian.spec": [[160, "module-seldonian.spec"]], "rlspec (class in seldonian.spec)": [[161, "seldonian.spec.RLSpec"]], "__init__() (rlspec method)": [[161, "seldonian.spec.RLSpec.__init__"]], "__repr__() (rlspec method)": [[161, "seldonian.spec.RLSpec.__repr__"]], "spec (class in seldonian.spec)": [[162, "seldonian.spec.Spec"]], "__init__() (spec method)": [[162, "seldonian.spec.Spec.__init__"]], "__repr__() (spec method)": [[162, "seldonian.spec.Spec.__repr__"]], "supervisedspec (class in seldonian.spec)": [[163, "seldonian.spec.SupervisedSpec"]], "__init__() (supervisedspec method)": [[163, "seldonian.spec.SupervisedSpec.__init__"]], "__repr__() (supervisedspec method)": [[163, "seldonian.spec.SupervisedSpec.__repr__"]], "createrlspec() (in module seldonian.spec)": [[164, "seldonian.spec.createRLSpec"]], "createsupervisedspec() (in module seldonian.spec)": [[165, "seldonian.spec.createSupervisedSpec"]], "validate_parse_trees() (in module seldonian.spec)": [[166, "seldonian.spec.validate_parse_trees"]], "seldonian.utils": [[167, "module-seldonian.utils"]], "seldonian.utils.rl_utils": [[168, "module-seldonian.utils.RL_utils"]], "argmax_multi() (in module seldonian.utils.rl_utils)": [[169, "seldonian.utils.RL_utils.argmax_multi"]], "clamp() (in module seldonian.utils.rl_utils)": [[170, "seldonian.utils.RL_utils.clamp"]], "error() (in module seldonian.utils.rl_utils)": [[171, "seldonian.utils.RL_utils.error"]], "seldonian.utils.io_utils": [[172, "module-seldonian.utils.io_utils"]], "dir_path() (in module seldonian.utils.io_utils)": [[173, "seldonian.utils.io_utils.dir_path"]], "load_json() (in module seldonian.utils.io_utils)": [[174, "seldonian.utils.io_utils.load_json"]], "load_pickle() (in module seldonian.utils.io_utils)": [[175, "seldonian.utils.io_utils.load_pickle"]], "save_json() (in module seldonian.utils.io_utils)": [[176, "seldonian.utils.io_utils.save_json"]], "save_pickle() (in module seldonian.utils.io_utils)": [[177, "seldonian.utils.io_utils.save_pickle"]], "seldonian.utils.plot_utils": [[178, "module-seldonian.utils.plot_utils"]], "plot_gradient_descent() (in module seldonian.utils.plot_utils)": [[179, "seldonian.utils.plot_utils.plot_gradient_descent"]], "seldonian.utils.stats_utils": [[180, "module-seldonian.utils.stats_utils"]], "softmax() (in module seldonian.utils.stats_utils)": [[181, "seldonian.utils.stats_utils.softmax"]], "stddev() (in module seldonian.utils.stats_utils)": [[182, "seldonian.utils.stats_utils.stddev"]], "tinv() (in module seldonian.utils.stats_utils)": [[183, "seldonian.utils.stats_utils.tinv"]], "weighted_sum_gamma() (in module seldonian.utils.stats_utils)": [[184, "seldonian.utils.stats_utils.weighted_sum_gamma"]], "seldonian.utils.tutorial_utils": [[185, "module-seldonian.utils.tutorial_utils"]], "generate_clipped_data() (in module seldonian.utils.tutorial_utils)": [[186, "seldonian.utils.tutorial_utils.generate_clipped_data"]], "generate_data() (in module seldonian.utils.tutorial_utils)": [[187, "seldonian.utils.tutorial_utils.generate_data"]], "make_synthetic_regression_dataset() (in module seldonian.utils.tutorial_utils)": [[188, "seldonian.utils.tutorial_utils.make_synthetic_regression_dataset"]], "seldonian.warnings": [[189, "module-seldonian.warnings"]], "seldonian.warnings.custom_warnings": [[190, "module-seldonian.warnings.custom_warnings"]], "custom_formatwarning() (in module seldonian.warnings.custom_warnings)": [[191, "seldonian.warnings.custom_warnings.custom_formatwarning"]]}})