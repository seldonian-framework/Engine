Search.setIndex({"docnames": ["_autosummary/seldonian", "_autosummary/seldonian.RL", "_autosummary/seldonian.RL.Agents", "_autosummary/seldonian.RL.Agents.Agent", "_autosummary/seldonian.RL.Agents.Agent.Agent", "_autosummary/seldonian.RL.Agents.Bases", "_autosummary/seldonian.RL.Agents.Bases.Fourier", "_autosummary/seldonian.RL.Agents.Bases.Fourier.Fourier", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent", "_autosummary/seldonian.RL.Agents.Function_Approximators", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Q_Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent", "_autosummary/seldonian.RL.Agents.Policies", "_autosummary/seldonian.RL.Agents.Policies.Policy", "_autosummary/seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy", "_autosummary/seldonian.RL.Agents.Policies.Policy.Policy", "_autosummary/seldonian.RL.Agents.Policies.Softmax", "_autosummary/seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax", "_autosummary/seldonian.RL.Agents.Policies.Softmax.MixedSoftmax", "_autosummary/seldonian.RL.Agents.Policies.Softmax.Softmax", "_autosummary/seldonian.RL.Agents.keyboard_gridworld", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution", "_autosummary/seldonian.RL.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description.check_space_type", "_autosummary/seldonian.RL.Env_Description.Spaces", "_autosummary/seldonian.RL.Env_Description.Spaces.Continuous_Space", "_autosummary/seldonian.RL.Env_Description.Spaces.Discrete_Space", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.main", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info", "_autosummary/seldonian.RL.RL_model", "_autosummary/seldonian.RL.RL_model.RL_model", "_autosummary/seldonian.RL.RL_runner", "_autosummary/seldonian.RL.RL_runner.create_agent", "_autosummary/seldonian.RL.RL_runner.run_all_trials", "_autosummary/seldonian.RL.RL_runner.run_episode", "_autosummary/seldonian.RL.RL_runner.run_episode_from_dict", "_autosummary/seldonian.RL.RL_runner.run_trial", "_autosummary/seldonian.RL.RL_runner.run_trial_given_agent_and_env", "_autosummary/seldonian.RL.environments", "_autosummary/seldonian.RL.environments.Environment", "_autosummary/seldonian.RL.environments.Environment.Environment", "_autosummary/seldonian.RL.environments.gridworld", "_autosummary/seldonian.RL.environments.gridworld.Gridworld", "_autosummary/seldonian.RL.environments.mountaincar", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar", "_autosummary/seldonian.RL.environments.n_step_mountaincar", "_autosummary/seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar", "_autosummary/seldonian.RL.environments.simglucose_env", "_autosummary/seldonian.RL.environments.simglucose_env.Simglucose", "_autosummary/seldonian.RL.generate_gridworld_episodes", "_autosummary/seldonian.RL.generate_gridworld_episodes.main", "_autosummary/seldonian.RL.generate_mountaincar_episodes", "_autosummary/seldonian.RL.generate_mountaincar_episodes.main", "_autosummary/seldonian.RL.generate_simglucose_episodes", "_autosummary/seldonian.RL.generate_simglucose_episodes.get_max_obs", "_autosummary/seldonian.RL.generate_simglucose_episodes.main", "_autosummary/seldonian.RL.hyperparams_and_settings", "_autosummary/seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict", "_autosummary/seldonian.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection", "_autosummary/seldonian.dataset", "_autosummary/seldonian.dataset.DataSet", "_autosummary/seldonian.dataset.DataSetLoader", "_autosummary/seldonian.dataset.Episode", "_autosummary/seldonian.dataset.RLDataSet", "_autosummary/seldonian.dataset.SupervisedDataSet", "_autosummary/seldonian.dataset.load_supervised_metadata", "_autosummary/seldonian.hyperparam_search", "_autosummary/seldonian.hyperparam_search.HyperparamSearch", "_autosummary/seldonian.models", "_autosummary/seldonian.models.models", "_autosummary/seldonian.models.models.BaseLogisticRegressionModel", "_autosummary/seldonian.models.models.BinaryLogisticRegressionModel", "_autosummary/seldonian.models.models.BoundedLinearRegressionModel", "_autosummary/seldonian.models.models.ClassificationModel", "_autosummary/seldonian.models.models.DummyClassifierModel", "_autosummary/seldonian.models.models.LinearRegressionModel", "_autosummary/seldonian.models.models.LinearRegressionModelListFeatures", "_autosummary/seldonian.models.models.MultiClassLogisticRegressionModel", "_autosummary/seldonian.models.models.RandomClassifierModel", "_autosummary/seldonian.models.models.RegressionModel", "_autosummary/seldonian.models.models.SeldonianModel", "_autosummary/seldonian.models.models.SupervisedModel", "_autosummary/seldonian.models.objectives", "_autosummary/seldonian.models.objectives.Accuracy", "_autosummary/seldonian.models.objectives.False_Negative_Rate", "_autosummary/seldonian.models.objectives.False_Positive_Rate", "_autosummary/seldonian.models.objectives.IS_estimate", "_autosummary/seldonian.models.objectives.Mean_Error", "_autosummary/seldonian.models.objectives.Mean_Squared_Error", "_autosummary/seldonian.models.objectives.Negative_Rate", "_autosummary/seldonian.models.objectives.PDIS_estimate", "_autosummary/seldonian.models.objectives.Positive_Rate", "_autosummary/seldonian.models.objectives.True_Negative_Rate", "_autosummary/seldonian.models.objectives.True_Positive_Rate", "_autosummary/seldonian.models.objectives.batcher", "_autosummary/seldonian.models.objectives.binary_logistic_loss", "_autosummary/seldonian.models.objectives.confusion_matrix", "_autosummary/seldonian.models.objectives.evaluate_statistic", "_autosummary/seldonian.models.objectives.gradient_Bounded_Squared_Error", "_autosummary/seldonian.models.objectives.gradient_Mean_Squared_Error", "_autosummary/seldonian.models.objectives.gradient_binary_logistic_loss", "_autosummary/seldonian.models.objectives.multiclass_logistic_loss", "_autosummary/seldonian.models.objectives.sample_from_statistic", "_autosummary/seldonian.models.objectives.vector_Accuracy", "_autosummary/seldonian.models.objectives.vector_Error", "_autosummary/seldonian.models.objectives.vector_False_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_False_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_IS_estimate", "_autosummary/seldonian.models.objectives.vector_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_PDIS_estimate", "_autosummary/seldonian.models.objectives.vector_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_Squared_Error", "_autosummary/seldonian.models.objectives.vector_True_Negative_Rate", "_autosummary/seldonian.models.objectives.vector_True_Positive_Rate", "_autosummary/seldonian.models.objectives.vector_confusion_matrix", "_autosummary/seldonian.models.sklearn_lr", "_autosummary/seldonian.models.sklearn_lr.SkLearnLinearRegressor", "_autosummary/seldonian.models.sklearn_model", "_autosummary/seldonian.models.sklearn_model.SupervisedSkLearnBaseModel", "_autosummary/seldonian.models.sklearn_model.sklearn_predict_vjp", "_autosummary/seldonian.optimizers", "_autosummary/seldonian.optimizers.gradient_descent", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam", "_autosummary/seldonian.optimizers.gradient_descent.setup_gradients", "_autosummary/seldonian.parse_tree", "_autosummary/seldonian.parse_tree.nodes", "_autosummary/seldonian.parse_tree.nodes.BaseNode", "_autosummary/seldonian.parse_tree.nodes.CVaRSQeBaseNode", "_autosummary/seldonian.parse_tree.nodes.ConfusionMatrixBaseNode", "_autosummary/seldonian.parse_tree.nodes.ConstantNode", "_autosummary/seldonian.parse_tree.nodes.InternalNode", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode", "_autosummary/seldonian.parse_tree.nodes.MultiClassBaseNode", "_autosummary/seldonian.parse_tree.nodes.Node", "_autosummary/seldonian.parse_tree.nodes.RLAltRewardBaseNode", "_autosummary/seldonian.parse_tree.operators", "_autosummary/seldonian.parse_tree.parse_tree", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree", "_autosummary/seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints", "_autosummary/seldonian.safety_test", "_autosummary/seldonian.safety_test.safety_test", "_autosummary/seldonian.safety_test.safety_test.SafetyTest", "_autosummary/seldonian.seldonian_algorithm", "_autosummary/seldonian.seldonian_algorithm.SeldonianAlgorithm", "_autosummary/seldonian.spec", "_autosummary/seldonian.spec.RLSpec", "_autosummary/seldonian.spec.Spec", "_autosummary/seldonian.spec.SupervisedSpec", "_autosummary/seldonian.spec.createRLSpec", "_autosummary/seldonian.spec.createSimpleSupervisedSpec", "_autosummary/seldonian.spec.createSupervisedSpec", "_autosummary/seldonian.spec.validate_parse_trees", "_autosummary/seldonian.utils", "_autosummary/seldonian.utils.RL_utils", "_autosummary/seldonian.utils.RL_utils.argmax_multi", "_autosummary/seldonian.utils.RL_utils.clamp", "_autosummary/seldonian.utils.RL_utils.error", "_autosummary/seldonian.utils.io_utils", "_autosummary/seldonian.utils.io_utils.dir_path", "_autosummary/seldonian.utils.io_utils.load_json", "_autosummary/seldonian.utils.io_utils.load_pickle", "_autosummary/seldonian.utils.io_utils.save_json", "_autosummary/seldonian.utils.io_utils.save_pickle", "_autosummary/seldonian.utils.plot_utils", "_autosummary/seldonian.utils.plot_utils.plot_gradient_descent", "_autosummary/seldonian.utils.stats_utils", "_autosummary/seldonian.utils.stats_utils.custom_cumprod", "_autosummary/seldonian.utils.stats_utils.softmax", "_autosummary/seldonian.utils.stats_utils.stddev", "_autosummary/seldonian.utils.stats_utils.tinv", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma", "_autosummary/seldonian.utils.tutorial_utils", "_autosummary/seldonian.utils.tutorial_utils.generate_clipped_data", "_autosummary/seldonian.utils.tutorial_utils.generate_data", "_autosummary/seldonian.utils.tutorial_utils.make_synthetic_regression_dataset", "_autosummary/seldonian.warnings", "_autosummary/seldonian.warnings.custom_warnings", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning", "api", "getting_started", "index", "overview"], "filenames": ["_autosummary/seldonian.rst", "_autosummary/seldonian.RL.rst", "_autosummary/seldonian.RL.Agents.rst", "_autosummary/seldonian.RL.Agents.Agent.rst", "_autosummary/seldonian.RL.Agents.Agent.Agent.rst", "_autosummary/seldonian.RL.Agents.Bases.rst", "_autosummary/seldonian.RL.Agents.Bases.Fourier.rst", "_autosummary/seldonian.RL.Agents.Bases.Fourier.Fourier.rst", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.rst", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Q_Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description.rst", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.rst", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.rst", "_autosummary/seldonian.RL.Agents.Policies.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.Softmax.rst", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.rst", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.rst", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.rst", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.rst", "_autosummary/seldonian.RL.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.check_space_type.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.Continuous_Space.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.Discrete_Space.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.main.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info.rst", "_autosummary/seldonian.RL.RL_model.rst", "_autosummary/seldonian.RL.RL_model.RL_model.rst", "_autosummary/seldonian.RL.RL_runner.rst", "_autosummary/seldonian.RL.RL_runner.create_agent.rst", "_autosummary/seldonian.RL.RL_runner.run_all_trials.rst", "_autosummary/seldonian.RL.RL_runner.run_episode.rst", "_autosummary/seldonian.RL.RL_runner.run_episode_from_dict.rst", "_autosummary/seldonian.RL.RL_runner.run_trial.rst", "_autosummary/seldonian.RL.RL_runner.run_trial_given_agent_and_env.rst", "_autosummary/seldonian.RL.environments.rst", "_autosummary/seldonian.RL.environments.Environment.rst", "_autosummary/seldonian.RL.environments.Environment.Environment.rst", "_autosummary/seldonian.RL.environments.gridworld.rst", "_autosummary/seldonian.RL.environments.gridworld.Gridworld.rst", "_autosummary/seldonian.RL.environments.mountaincar.rst", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar.rst", "_autosummary/seldonian.RL.environments.n_step_mountaincar.rst", "_autosummary/seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.rst", "_autosummary/seldonian.RL.environments.simglucose_env.rst", "_autosummary/seldonian.RL.environments.simglucose_env.Simglucose.rst", "_autosummary/seldonian.RL.generate_gridworld_episodes.rst", "_autosummary/seldonian.RL.generate_gridworld_episodes.main.rst", "_autosummary/seldonian.RL.generate_mountaincar_episodes.rst", "_autosummary/seldonian.RL.generate_mountaincar_episodes.main.rst", "_autosummary/seldonian.RL.generate_simglucose_episodes.rst", "_autosummary/seldonian.RL.generate_simglucose_episodes.get_max_obs.rst", "_autosummary/seldonian.RL.generate_simglucose_episodes.main.rst", "_autosummary/seldonian.RL.hyperparams_and_settings.rst", "_autosummary/seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict.rst", "_autosummary/seldonian.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection.rst", "_autosummary/seldonian.dataset.rst", "_autosummary/seldonian.dataset.DataSet.rst", "_autosummary/seldonian.dataset.DataSetLoader.rst", "_autosummary/seldonian.dataset.Episode.rst", "_autosummary/seldonian.dataset.RLDataSet.rst", "_autosummary/seldonian.dataset.SupervisedDataSet.rst", "_autosummary/seldonian.dataset.load_supervised_metadata.rst", "_autosummary/seldonian.hyperparam_search.rst", "_autosummary/seldonian.hyperparam_search.HyperparamSearch.rst", "_autosummary/seldonian.models.rst", "_autosummary/seldonian.models.models.rst", "_autosummary/seldonian.models.models.BaseLogisticRegressionModel.rst", "_autosummary/seldonian.models.models.BinaryLogisticRegressionModel.rst", "_autosummary/seldonian.models.models.BoundedLinearRegressionModel.rst", "_autosummary/seldonian.models.models.ClassificationModel.rst", "_autosummary/seldonian.models.models.DummyClassifierModel.rst", "_autosummary/seldonian.models.models.LinearRegressionModel.rst", "_autosummary/seldonian.models.models.LinearRegressionModelListFeatures.rst", "_autosummary/seldonian.models.models.MultiClassLogisticRegressionModel.rst", "_autosummary/seldonian.models.models.RandomClassifierModel.rst", "_autosummary/seldonian.models.models.RegressionModel.rst", "_autosummary/seldonian.models.models.SeldonianModel.rst", "_autosummary/seldonian.models.models.SupervisedModel.rst", "_autosummary/seldonian.models.objectives.rst", "_autosummary/seldonian.models.objectives.Accuracy.rst", "_autosummary/seldonian.models.objectives.False_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.False_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.IS_estimate.rst", "_autosummary/seldonian.models.objectives.Mean_Error.rst", "_autosummary/seldonian.models.objectives.Mean_Squared_Error.rst", "_autosummary/seldonian.models.objectives.Negative_Rate.rst", "_autosummary/seldonian.models.objectives.PDIS_estimate.rst", "_autosummary/seldonian.models.objectives.Positive_Rate.rst", "_autosummary/seldonian.models.objectives.True_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.True_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.batcher.rst", "_autosummary/seldonian.models.objectives.binary_logistic_loss.rst", "_autosummary/seldonian.models.objectives.confusion_matrix.rst", "_autosummary/seldonian.models.objectives.evaluate_statistic.rst", "_autosummary/seldonian.models.objectives.gradient_Bounded_Squared_Error.rst", "_autosummary/seldonian.models.objectives.gradient_Mean_Squared_Error.rst", "_autosummary/seldonian.models.objectives.gradient_binary_logistic_loss.rst", "_autosummary/seldonian.models.objectives.multiclass_logistic_loss.rst", "_autosummary/seldonian.models.objectives.sample_from_statistic.rst", "_autosummary/seldonian.models.objectives.vector_Accuracy.rst", "_autosummary/seldonian.models.objectives.vector_Error.rst", "_autosummary/seldonian.models.objectives.vector_False_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_False_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_IS_estimate.rst", "_autosummary/seldonian.models.objectives.vector_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_PDIS_estimate.rst", "_autosummary/seldonian.models.objectives.vector_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_Squared_Error.rst", "_autosummary/seldonian.models.objectives.vector_True_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.vector_True_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.vector_confusion_matrix.rst", "_autosummary/seldonian.models.sklearn_lr.rst", "_autosummary/seldonian.models.sklearn_lr.SkLearnLinearRegressor.rst", "_autosummary/seldonian.models.sklearn_model.rst", "_autosummary/seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.rst", "_autosummary/seldonian.models.sklearn_model.sklearn_predict_vjp.rst", "_autosummary/seldonian.optimizers.rst", "_autosummary/seldonian.optimizers.gradient_descent.rst", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam.rst", "_autosummary/seldonian.optimizers.gradient_descent.setup_gradients.rst", "_autosummary/seldonian.parse_tree.rst", "_autosummary/seldonian.parse_tree.nodes.rst", "_autosummary/seldonian.parse_tree.nodes.BaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.CVaRSQeBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.ConstantNode.rst", "_autosummary/seldonian.parse_tree.nodes.InternalNode.rst", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.MultiClassBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.Node.rst", "_autosummary/seldonian.parse_tree.nodes.RLAltRewardBaseNode.rst", "_autosummary/seldonian.parse_tree.operators.rst", "_autosummary/seldonian.parse_tree.parse_tree.rst", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree.rst", "_autosummary/seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints.rst", "_autosummary/seldonian.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.SafetyTest.rst", "_autosummary/seldonian.seldonian_algorithm.rst", "_autosummary/seldonian.seldonian_algorithm.SeldonianAlgorithm.rst", "_autosummary/seldonian.spec.rst", "_autosummary/seldonian.spec.RLSpec.rst", "_autosummary/seldonian.spec.Spec.rst", "_autosummary/seldonian.spec.SupervisedSpec.rst", "_autosummary/seldonian.spec.createRLSpec.rst", "_autosummary/seldonian.spec.createSimpleSupervisedSpec.rst", "_autosummary/seldonian.spec.createSupervisedSpec.rst", "_autosummary/seldonian.spec.validate_parse_trees.rst", "_autosummary/seldonian.utils.rst", "_autosummary/seldonian.utils.RL_utils.rst", "_autosummary/seldonian.utils.RL_utils.argmax_multi.rst", "_autosummary/seldonian.utils.RL_utils.clamp.rst", "_autosummary/seldonian.utils.RL_utils.error.rst", "_autosummary/seldonian.utils.io_utils.rst", "_autosummary/seldonian.utils.io_utils.dir_path.rst", "_autosummary/seldonian.utils.io_utils.load_json.rst", "_autosummary/seldonian.utils.io_utils.load_pickle.rst", "_autosummary/seldonian.utils.io_utils.save_json.rst", "_autosummary/seldonian.utils.io_utils.save_pickle.rst", "_autosummary/seldonian.utils.plot_utils.rst", "_autosummary/seldonian.utils.plot_utils.plot_gradient_descent.rst", "_autosummary/seldonian.utils.stats_utils.rst", "_autosummary/seldonian.utils.stats_utils.custom_cumprod.rst", "_autosummary/seldonian.utils.stats_utils.softmax.rst", "_autosummary/seldonian.utils.stats_utils.stddev.rst", "_autosummary/seldonian.utils.stats_utils.tinv.rst", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma.rst", "_autosummary/seldonian.utils.tutorial_utils.rst", "_autosummary/seldonian.utils.tutorial_utils.generate_clipped_data.rst", "_autosummary/seldonian.utils.tutorial_utils.generate_data.rst", "_autosummary/seldonian.utils.tutorial_utils.make_synthetic_regression_dataset.rst", "_autosummary/seldonian.warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning.rst", "api.rst", "getting_started.rst", "index.rst", "overview.rst"], "titles": ["seldonian", "seldonian.RL", "seldonian.RL.Agents", "seldonian.RL.Agents.Agent", "seldonian.RL.Agents.Agent.Agent", "seldonian.RL.Agents.Bases", "seldonian.RL.Agents.Bases.Fourier", "seldonian.RL.Agents.Bases.Fourier.Fourier", "seldonian.RL.Agents.Discrete_Random_Agent", "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent", "seldonian.RL.Agents.Function_Approximators", "seldonian.RL.Agents.Function_Approximators.Function_Approximator", "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator", "seldonian.RL.Agents.Function_Approximators.Linear_FA", "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA", "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA", "seldonian.RL.Agents.Function_Approximators.Table", "seldonian.RL.Agents.Function_Approximators.Table.Q_Table", "seldonian.RL.Agents.Function_Approximators.Table.Table", "seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description", "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent", "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent", "seldonian.RL.Agents.Policies", "seldonian.RL.Agents.Policies.Policy", "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy", "seldonian.RL.Agents.Policies.Policy.Policy", "seldonian.RL.Agents.Policies.Softmax", "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax", "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax", "seldonian.RL.Agents.Policies.Softmax.Softmax", "seldonian.RL.Agents.keyboard_gridworld", "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld", "seldonian.RL.Agents.mountain_car_rough_solution", "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution", "seldonian.RL.Env_Description", "seldonian.RL.Env_Description.Env_Description", "seldonian.RL.Env_Description.Env_Description.Env_Description", "seldonian.RL.Env_Description.Env_Description.check_space_type", "seldonian.RL.Env_Description.Spaces", "seldonian.RL.Env_Description.Spaces.Continuous_Space", "seldonian.RL.Env_Description.Spaces.Discrete_Space", "seldonian.RL.RL_generate_dataset_and_spec_file", "seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string", "seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs", "seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path", "seldonian.RL.RL_generate_dataset_and_spec_file.main", "seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info", "seldonian.RL.RL_model", "seldonian.RL.RL_model.RL_model", "seldonian.RL.RL_runner", "seldonian.RL.RL_runner.create_agent", "seldonian.RL.RL_runner.run_all_trials", "seldonian.RL.RL_runner.run_episode", "seldonian.RL.RL_runner.run_episode_from_dict", "seldonian.RL.RL_runner.run_trial", "seldonian.RL.RL_runner.run_trial_given_agent_and_env", "seldonian.RL.environments", "seldonian.RL.environments.Environment", "seldonian.RL.environments.Environment.Environment", "seldonian.RL.environments.gridworld", "seldonian.RL.environments.gridworld.Gridworld", "seldonian.RL.environments.mountaincar", "seldonian.RL.environments.mountaincar.Mountaincar", "seldonian.RL.environments.n_step_mountaincar", "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar", "seldonian.RL.environments.simglucose_env", "seldonian.RL.environments.simglucose_env.Simglucose", "seldonian.RL.generate_gridworld_episodes", "seldonian.RL.generate_gridworld_episodes.main", "seldonian.RL.generate_mountaincar_episodes", "seldonian.RL.generate_mountaincar_episodes.main", "seldonian.RL.generate_simglucose_episodes", "seldonian.RL.generate_simglucose_episodes.get_max_obs", "seldonian.RL.generate_simglucose_episodes.main", "seldonian.RL.hyperparams_and_settings", "seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict", "seldonian.candidate_selection", "seldonian.candidate_selection.candidate_selection", "seldonian.candidate_selection.candidate_selection.CandidateSelection", "seldonian.dataset", "seldonian.dataset.DataSet", "seldonian.dataset.DataSetLoader", "seldonian.dataset.Episode", "seldonian.dataset.RLDataSet", "seldonian.dataset.SupervisedDataSet", "seldonian.dataset.load_supervised_metadata", "seldonian.hyperparam_search", "seldonian.hyperparam_search.HyperparamSearch", "seldonian.models", "seldonian.models.models", "seldonian.models.models.BaseLogisticRegressionModel", "seldonian.models.models.BinaryLogisticRegressionModel", "seldonian.models.models.BoundedLinearRegressionModel", "seldonian.models.models.ClassificationModel", "seldonian.models.models.DummyClassifierModel", "seldonian.models.models.LinearRegressionModel", "seldonian.models.models.LinearRegressionModelListFeatures", "seldonian.models.models.MultiClassLogisticRegressionModel", "seldonian.models.models.RandomClassifierModel", "seldonian.models.models.RegressionModel", "seldonian.models.models.SeldonianModel", "seldonian.models.models.SupervisedModel", "seldonian.models.objectives", "seldonian.models.objectives.Accuracy", "seldonian.models.objectives.False_Negative_Rate", "seldonian.models.objectives.False_Positive_Rate", "seldonian.models.objectives.IS_estimate", "seldonian.models.objectives.Mean_Error", "seldonian.models.objectives.Mean_Squared_Error", "seldonian.models.objectives.Negative_Rate", "seldonian.models.objectives.PDIS_estimate", "seldonian.models.objectives.Positive_Rate", "seldonian.models.objectives.True_Negative_Rate", "seldonian.models.objectives.True_Positive_Rate", "seldonian.models.objectives.batcher", "seldonian.models.objectives.binary_logistic_loss", "seldonian.models.objectives.confusion_matrix", "seldonian.models.objectives.evaluate_statistic", "seldonian.models.objectives.gradient_Bounded_Squared_Error", "seldonian.models.objectives.gradient_Mean_Squared_Error", "seldonian.models.objectives.gradient_binary_logistic_loss", "seldonian.models.objectives.multiclass_logistic_loss", "seldonian.models.objectives.sample_from_statistic", "seldonian.models.objectives.vector_Accuracy", "seldonian.models.objectives.vector_Error", "seldonian.models.objectives.vector_False_Negative_Rate", "seldonian.models.objectives.vector_False_Positive_Rate", "seldonian.models.objectives.vector_IS_estimate", "seldonian.models.objectives.vector_Negative_Rate", "seldonian.models.objectives.vector_PDIS_estimate", "seldonian.models.objectives.vector_Positive_Rate", "seldonian.models.objectives.vector_Squared_Error", "seldonian.models.objectives.vector_True_Negative_Rate", "seldonian.models.objectives.vector_True_Positive_Rate", "seldonian.models.objectives.vector_confusion_matrix", "seldonian.models.sklearn_lr", "seldonian.models.sklearn_lr.SkLearnLinearRegressor", "seldonian.models.sklearn_model", "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel", "seldonian.models.sklearn_model.sklearn_predict_vjp", "seldonian.optimizers", "seldonian.optimizers.gradient_descent", "seldonian.optimizers.gradient_descent.gradient_descent_adam", "seldonian.optimizers.gradient_descent.setup_gradients", "seldonian.parse_tree", "seldonian.parse_tree.nodes", "seldonian.parse_tree.nodes.BaseNode", "seldonian.parse_tree.nodes.CVaRSQeBaseNode", "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode", "seldonian.parse_tree.nodes.ConstantNode", "seldonian.parse_tree.nodes.InternalNode", "seldonian.parse_tree.nodes.MEDCustomBaseNode", "seldonian.parse_tree.nodes.MultiClassBaseNode", "seldonian.parse_tree.nodes.Node", "seldonian.parse_tree.nodes.RLAltRewardBaseNode", "seldonian.parse_tree.operators", "seldonian.parse_tree.parse_tree", "seldonian.parse_tree.parse_tree.ParseTree", "seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints", "seldonian.safety_test", "seldonian.safety_test.safety_test", "seldonian.safety_test.safety_test.SafetyTest", "seldonian.seldonian_algorithm", "seldonian.seldonian_algorithm.SeldonianAlgorithm", "seldonian.spec", "seldonian.spec.RLSpec", "seldonian.spec.Spec", "seldonian.spec.SupervisedSpec", "seldonian.spec.createRLSpec", "seldonian.spec.createSimpleSupervisedSpec", "seldonian.spec.createSupervisedSpec", "seldonian.spec.validate_parse_trees", "seldonian.utils", "seldonian.utils.RL_utils", "seldonian.utils.RL_utils.argmax_multi", "seldonian.utils.RL_utils.clamp", "seldonian.utils.RL_utils.error", "seldonian.utils.io_utils", "seldonian.utils.io_utils.dir_path", "seldonian.utils.io_utils.load_json", "seldonian.utils.io_utils.load_pickle", "seldonian.utils.io_utils.save_json", "seldonian.utils.io_utils.save_pickle", "seldonian.utils.plot_utils", "seldonian.utils.plot_utils.plot_gradient_descent", "seldonian.utils.stats_utils", "seldonian.utils.stats_utils.custom_cumprod", "seldonian.utils.stats_utils.softmax", "seldonian.utils.stats_utils.stddev", "seldonian.utils.stats_utils.tinv", "seldonian.utils.stats_utils.weighted_sum_gamma", "seldonian.utils.tutorial_utils", "seldonian.utils.tutorial_utils.generate_clipped_data", "seldonian.utils.tutorial_utils.generate_data", "seldonian.utils.tutorial_utils.make_synthetic_regression_dataset", "seldonian.warnings", "seldonian.warnings.custom_warnings", "seldonian.warnings.custom_warnings.custom_formatwarning", "API", "Getting Started", "Seldonian Engine documentation", "Overview"], "terms": {"engin": [0, 155, 199, 201], "packag": [0, 201], "modul": [0, 1, 2, 5, 10, 22, 34, 56, 76, 77, 86, 88, 89, 140, 144, 155, 156, 159, 160, 162, 164, 172, 195, 197, 201], "class": [3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 47, 48, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 109, 111, 112, 113, 116, 121, 134, 135, 136, 137, 138, 139, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 201], "base": [4, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 48, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 136, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 161, 163, 165, 166, 167, 200, 201], "object": [4, 7, 9, 12, 14, 15, 19, 21, 24, 25, 27, 28, 29, 36, 39, 40, 45, 46, 58, 60, 78, 80, 81, 82, 83, 84, 87, 100, 142, 143, 146, 147, 148, 151, 152, 153, 154, 157, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 179, 180, 181, 182, 184, 200], "__init__": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 48, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 136, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 161, 163, 165, 166, 167, 200], "__repr__": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 48, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 136, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 161, 163, 165, 166, 167, 200], "return": [4, 7, 9, 12, 14, 15, 17, 18, 19, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 42, 43, 44, 46, 48, 50, 51, 52, 53, 54, 55, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 142, 146, 147, 148, 151, 152, 154, 155, 157, 161, 163, 165, 166, 167, 174, 184, 186, 188, 189, 190, 201], "repr": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 48, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 136, 138, 157, 161, 163, 165, 166, 167], "self": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 48, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 136, 138, 157, 161, 163, 165, 166, 167], "method": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 48, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 136, 138, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 161, 163, 165, 166, 167, 201], "choose_act": [4, 9, 21, 24, 25, 27, 28, 29, 31, 33, 200], "observ": [4, 7, 9, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 48, 58, 62, 64, 66, 82, 91, 94, 97, 98, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 146, 147, 148, 151, 152, 154, 201], "choos": [4, 9, 31, 33, 201], "an": [4, 7, 9, 14, 15, 19, 21, 24, 25, 27, 28, 29, 31, 33, 36, 50, 54, 58, 60, 62, 64, 66, 139, 146, 147, 148, 152, 153, 154, 155, 178, 179, 180, 181, 182, 190, 201], "action": [4, 9, 15, 17, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 48, 58, 60, 62, 64, 66, 81, 82, 201], "given": [4, 7, 9, 17, 19, 21, 24, 25, 27, 28, 29, 31, 33, 42, 43, 44, 48, 58, 60, 62, 64, 66, 78, 136, 143, 146, 147, 148, 151, 152, 154, 157, 158, 161, 163, 201], "To": [4, 9, 31, 33, 199], "overridden": [4, 9, 25, 31, 33], "paramet": [4, 7, 9, 12, 14, 15, 17, 18, 19, 21, 24, 25, 27, 28, 29, 31, 33, 36, 37, 39, 40, 46, 48, 50, 51, 52, 53, 54, 55, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 85, 87, 90, 91, 92, 94, 95, 96, 97, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 161, 163, 165, 166, 167, 168, 169, 170, 171, 178, 179, 180, 181, 182, 184, 186, 188, 189, 190, 192, 193, 194, 201], "The": [4, 9, 14, 15, 17, 18, 21, 27, 28, 29, 31, 33, 39, 60, 78, 80, 81, 84, 85, 87, 90, 91, 92, 94, 95, 96, 97, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 139, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 161, 163, 165, 166, 167, 168, 169, 170, 182, 184, 186, 190, 192, 193, 194, 200, 201], "current": [4, 9, 21, 24, 25, 27, 28, 29, 31, 33, 58, 60, 62, 64, 66, 87, 93, 201], "type": [4, 9, 19, 21, 24, 27, 28, 29, 31, 33, 37, 48, 50, 52, 53, 60, 78, 87, 90, 91, 92, 94, 95, 96, 97, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 142, 146, 147, 148, 151, 152, 154, 157, 161, 163, 186, 188, 189, 190, 201], "depend": [4, 9, 21, 24, 27, 28, 29, 31, 33, 138, 146, 147, 148, 151, 152, 154, 201], "environ": [4, 7, 9, 14, 15, 17, 18, 19, 21, 24, 27, 28, 29, 31, 33, 36, 42, 43, 44, 48, 50, 51, 52, 53, 54, 55, 168, 200, 201], "get_param": [4, 9, 21, 24, 25, 27, 28, 29, 31, 33, 200], "retriev": [4, 9, 31, 33], "": [4, 9, 21, 31, 33, 36, 151, 157, 163, 188, 189, 201], "polici": [4, 9, 21, 31, 33, 48, 54, 82, 155, 168, 200, 201], "get_prob_this_act": [4, 9, 21, 24, 25, 27, 28, 29, 31, 33, 48, 200], "get": [4, 7, 9, 17, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 48, 58, 60, 62, 64, 66, 78, 87, 116, 134, 157, 161, 163, 200, 201], "probabl": [4, 9, 17, 21, 24, 25, 27, 28, 29, 31, 33, 48, 82, 87, 91, 94, 97, 98, 103, 104, 105, 109, 111, 112, 113, 116, 123, 125, 126, 128, 130, 132, 133, 134, 138, 147, 157, 189, 201], "provid": [4, 9, 31, 33, 36, 117, 122, 157, 163, 165, 166, 167, 168, 201], "i": [4, 9, 21, 24, 27, 28, 29, 31, 33, 39, 46, 51, 60, 78, 87, 90, 91, 92, 97, 103, 104, 105, 106, 109, 111, 112, 113, 116, 123, 125, 126, 127, 128, 130, 132, 133, 134, 136, 138, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 161, 163, 165, 166, 167, 178, 184, 199, 200, 201], "set_new_param": [4, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 29, 31, 33, 200], "theta": [4, 9, 31, 33, 78, 91, 92, 94, 95, 96, 97, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 142, 146, 147, 148, 151, 152, 154, 161, 163, 201], "updat": [4, 9, 21, 25, 31, 33, 60, 136, 138, 168, 170, 200], "model": [4, 9, 12, 14, 15, 17, 18, 31, 33, 48, 78, 87, 142, 146, 147, 148, 151, 152, 154, 161, 163, 165, 166, 167, 168, 200], "next_observ": [4, 9, 21, 31, 33], "reward": [4, 9, 21, 31, 33, 46, 60, 81, 82, 154, 155, 190, 201], "termin": [4, 9, 21, 31, 33, 58, 60, 62, 64, 66, 200], "accord": [4, 9, 21, 31, 33, 87], "learn": [4, 9, 21, 31, 33, 78, 80, 81, 84, 89, 93, 100, 101, 136, 138, 142, 146, 147, 148, 151, 152, 154, 155, 157, 158, 161, 167, 200, 201], "rule": [4, 9, 21, 31, 33], "overriden": [4, 9, 31, 33], "after": [4, 9, 21, 31, 33], "taken": [4, 9, 21, 31, 33, 36, 48], "take": [4, 9, 21, 24, 25, 31, 33, 48, 157, 201], "bool": [4, 9, 21, 31, 33, 60, 78, 153, 157, 161, 165, 166, 167, 168, 184], "whether": [4, 9, 21, 24, 27, 28, 29, 31, 33, 54, 60, 78, 87, 153, 157, 161, 163, 165, 166, 167, 168, 169, 170, 178, 184, 194, 201], "hyperparam_and_setting_dict": [7, 21, 24, 27, 28, 29], "env_desc": 7, "basi": [7, 14, 15, 24, 27, 28, 29], "us": [7, 14, 15, 21, 27, 31, 39, 40, 46, 48, 54, 58, 62, 64, 66, 78, 87, 90, 91, 92, 95, 96, 97, 136, 138, 142, 143, 146, 147, 148, 151, 152, 154, 155, 157, 163, 165, 166, 167, 168, 169, 170, 189, 190, 194, 199, 201], "linear": [7, 14, 15, 24, 27, 28, 29, 92, 95, 96, 136], "valu": [7, 15, 17, 27, 28, 29, 40, 78, 87, 114, 124, 131, 142, 146, 147, 148, 149, 151, 152, 154, 157, 161, 163, 192, 194, 201], "function": [7, 12, 14, 15, 16, 21, 24, 27, 28, 29, 35, 41, 49, 60, 67, 69, 71, 74, 78, 79, 92, 102, 114, 136, 137, 139, 141, 142, 143, 146, 148, 152, 154, 155, 156, 157, 158, 161, 164, 165, 166, 167, 168, 169, 170, 173, 177, 183, 184, 185, 189, 191, 196, 201], "approxim": [7, 12, 14, 15, 21, 24, 27, 28, 29], "see": [7, 28, 147, 151, 165, 166, 167, 200, 201], "http": [7, 28, 147, 151, 186, 189], "irl": 7, "c": [7, 28, 116, 134, 147, 148], "brown": 7, "edu": [7, 28, 147], "fb": 7, "php": 7, "refer": [7, 154, 155, 201], "hyperparameter_and_setting_dict": [7, 24, 27, 28, 29, 50, 51, 53, 54], "specifi": [7, 24, 27, 28, 29, 50, 51, 54, 55, 155, 157, 165, 166, 167, 201], "number": [7, 17, 18, 24, 27, 28, 29, 36, 39, 40, 50, 51, 54, 55, 60, 78, 80, 84, 87, 90, 91, 97, 111, 114, 116, 134, 142, 146, 147, 148, 151, 152, 154, 157, 161, 192, 193, 194, 201], "episod": [7, 24, 27, 28, 29, 45, 46, 50, 51, 52, 53, 54, 55, 68, 70, 72, 73, 80, 81, 83, 84, 106, 110, 127, 129, 200, 201], "per": [7, 24, 27, 28, 29, 50, 51, 110, 129, 184], "trial": [7, 24, 27, 28, 29, 45, 50, 51, 54, 68, 70, 73], "env_descript": [7, 9, 14, 15, 19, 21, 24, 27, 28, 29, 31, 60, 200], "access": [7, 9, 14, 15, 19, 21, 24, 27, 28, 29, 36], "attribut": [7, 9, 14, 15, 19, 21, 24, 27, 28, 29, 36, 60, 81, 83, 148, 152, 154, 157, 163, 201], "calculate_num_featur": [7, 200], "order": [7, 201], "max_coupled_var": 7, "num_obs_dim": 7, "determin": [7, 87, 142, 157, 168, 169, 170], "featur": [7, 14, 15, 81, 84, 90, 91, 92, 94, 95, 96, 97, 98, 103, 104, 105, 107, 108, 109, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 136, 138, 139, 146, 147, 148, 151, 152, 154, 163, 201], "construct_basis_matrix": [7, 200], "creat": [7, 19, 24, 27, 28, 29, 45, 50, 60, 78, 81, 87, 136, 138, 146, 147, 148, 151, 152, 154, 157, 158, 163, 168, 169, 170, 201], "matrix": [7, 116, 134, 148, 155, 201], "get_featur": [7, 200], "ob": [7, 17, 18, 21, 24, 25, 27, 28, 29, 36, 58, 60, 62, 64, 66, 81, 157], "get_normalized_observ": [7, 200], "normal": [7, 111, 192, 193, 194], "act": 9, "discret": [9, 24, 27, 28, 29, 36, 37, 40], "space": [9, 24, 27, 28, 29, 36, 37, 60, 200], "pick": 9, "uniform": 9, "random": [9, 192, 193, 194], "capabl": [9, 18], "new_param": [12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 29, 48], "set": [12, 14, 15, 17, 18, 21, 24, 27, 28, 29, 54, 78, 87, 144, 148, 149, 163, 201], "new": [12, 14, 15, 17, 18, 58, 62, 64, 66, 155, 200, 201], "weight": [12, 14, 15, 17, 18, 21, 24, 27, 28, 29, 48, 78, 87, 90, 91, 92, 94, 95, 96, 97, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 142, 146, 147, 148, 151, 152, 154, 155, 157, 158, 161, 163, 165, 166, 167, 168, 190, 201], "encod": [14, 15, 201], "A": [15, 17, 19, 27, 48, 55, 58, 60, 62, 64, 66, 83, 127, 129, 139, 148, 152, 154, 155, 157, 165, 166, 167, 178, 179, 180, 181, 182, 200], "state": [15, 17, 18, 21, 36, 60], "min_stat": [17, 18], "num_stat": [17, 18, 60], "num_act": 17, "q": [17, 19, 27], "contain": [17, 21, 25, 60, 78, 81, 87, 89, 117, 122, 142, 146, 147, 148, 151, 152, 154, 155, 157, 161, 163, 165, 166, 167, 169, 170, 201], "transit": [17, 58, 60, 62, 64, 66, 200], "int": [17, 18, 27, 40, 60, 78, 80, 84, 87, 114, 116, 134, 142, 146, 147, 148, 151, 152, 153, 154, 157, 161, 189, 192, 193, 194], "smallest": [17, 18], "total": [17, 18, 40, 87, 114, 157], "from_environment_state_to_0_indexed_st": [17, 18, 200], "env_stat": [17, 18], "convert": [17, 18, 24, 27, 28, 29, 136, 138, 139], "0": [17, 18, 24, 27, 28, 29, 39, 78, 92, 98, 103, 104, 105, 109, 111, 112, 113, 123, 125, 126, 128, 130, 132, 133, 142, 146, 147, 148, 151, 152, 154, 157, 161, 165, 166, 167, 168, 169, 170, 190, 192, 193, 194, 201], "index": [17, 18, 24, 27, 28, 29, 78, 116, 134, 148, 152, 153, 154, 190, 201], "you": [17, 18, 81, 114, 157, 161, 182, 184, 199, 200, 201], "want": [17, 18, 37, 81, 87, 114, 152, 154, 157, 161, 182, 184, 199, 201], "get_action_values_given_st": [17, 24, 27, 28, 29, 200], "state_number_not_zero_index": 17, "possibl": [17, 21, 24, 27, 28, 29, 36, 58, 60, 62, 64, 66, 147, 201], "environment": 17, "specif": [17, 24, 27, 28, 29, 50, 87, 154, 163, 164, 165, 166, 167, 201], "arrai": [17, 21, 24, 27, 28, 29, 39, 48, 78, 87, 90, 91, 97, 116, 134, 136, 138, 139, 155, 186, 190, 201], "get_action_values_given_zero_indexed_st": [17, 200], "zero_indexed_state_numb": 17, "hold": [18, 80, 82, 83, 84], "reindex": 18, "descript": [19, 24, 27, 28, 29, 58, 60, 62, 64, 66, 201], "q_tabl": [19, 21, 200], "parametr": 21, "softmax": [21, 200, 201], "pi": 21, "frac": 21, "e": [21, 46, 78, 80, 81, 83, 84, 117, 122, 142, 146, 147, 148, 151, 152, 154, 157, 158, 161, 165, 166, 167, 201], "p": [21, 189, 201], "sum_": 21, "addit": [21, 201], "info": [21, 87, 142, 163], "about": [21, 142, 157, 201], "data": [21, 78, 81, 87, 91, 97, 114, 115, 121, 146, 147, 148, 151, 152, 154, 157, 161, 163, 165, 166, 167, 168, 169, 170, 181, 182, 188, 192, 193, 194, 201], "gener": [21, 24, 29, 192, 193, 194, 201], "variabl": [21, 39, 60, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157], "fa": 21, "select": [21, 24, 25, 27, 28, 29, 76, 77, 78, 86, 87, 140, 142, 146, 147, 148, 151, 152, 154, 161, 163, 165, 166, 167, 168, 169, 200], "get_action_valu": [21, 200], "all": [21, 24, 27, 28, 29, 48, 58, 80, 84, 93, 99, 100, 101, 106, 110, 115, 121, 136, 138, 148, 152, 153, 154, 157, 161, 201], "from": [21, 24, 27, 28, 29, 48, 50, 81, 82, 85, 87, 92, 95, 96, 114, 139, 144, 151, 156, 157, 163, 179, 180, 194, 201], "thi": [21, 48, 58, 60, 62, 64, 66, 109, 111, 116, 118, 123, 125, 126, 128, 130, 132, 133, 134, 142, 146, 147, 148, 151, 152, 153, 154, 157, 163, 192, 194, 200, 201], "float": [21, 27, 28, 29, 48, 60, 87, 94, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 163, 165, 166, 167, 168, 169, 170, 186, 188, 189, 190, 192, 193, 194, 201], "Not": [21, 31, 155], "implement": [21, 25, 58, 60, 62, 64, 66, 87, 91, 92, 94, 95, 96, 97, 98, 136, 138, 142, 186, 189, 201], "where": [24, 27, 55, 78, 136, 142, 146, 147, 148, 151, 152, 154, 157, 161, 163, 168, 169, 170, 181, 184, 190, 201], "ar": [24, 27, 37, 39, 55, 78, 87, 147, 148, 154, 155, 157, 161, 163, 171, 184, 190, 200, 201], "defin": [24, 25, 39, 147, 155, 201], "how": [24, 25, 28, 157, 201], "construct_basis_and_linear_fa": [24, 27, 28, 29, 200], "dictionari": [24, 27, 28, 29, 50, 55, 85, 142, 155, 163, 165, 166, 167, 184, 201], "from_0_indexed_action_to_environment_act": [24, 27, 28, 29, 200], "action_0_index": [24, 27, 28, 29], "env": [24, 27, 28, 29, 43, 52, 53, 55], "from_environment_action_to_0_indexed_act": [24, 27, 28, 29, 200], "env_act": [24, 27, 28, 29], "make_state_action_fa": [24, 27, 28, 29, 200], "contin": [24, 27, 28, 29, 37], "four": [25, 201], "which": [25, 37, 51, 109, 136, 138, 146, 147, 148, 150, 151, 152, 154, 155, 157, 168, 170, 201], "must": [25, 136, 138, 139, 146, 201], "ani": [25, 78, 158, 201], "both": [27, 157, 201], "faster": 27, "than": [27, 39, 55, 147, 157, 161, 201], "just": [27, 138, 163], "becaus": [27, 157, 184], "cach": [27, 157], "lookup": 27, "tabl": 27, "_arg": [27, 200], "helper": [27, 60, 157], "acceler": 27, "calcul": [27, 60, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 121, 124, 125, 126, 127, 128, 129, 130, 131, 142, 146, 147, 148, 151, 152, 154, 157, 161, 190, 201], "_denom": [27, 200], "choose_action_from_action_valu": [27, 28, 29, 200], "action_valu": [27, 28, 29], "list": [27, 28, 29, 46, 48, 51, 54, 55, 78, 80, 81, 82, 83, 84, 87, 106, 110, 127, 129, 146, 147, 148, 151, 152, 154, 155, 157, 158, 161, 165, 166, 167, 168, 169, 170, 171, 201], "param": [27, 28, 29, 111, 118], "get_action_probs_from_action_valu": [27, 28, 29, 200], "get_e_to_the_something_term": [27, 28, 29, 200], "exponenti": [27, 28, 29, 142, 157], "action_prob": [27, 48, 82], "obsertavt": [27, 29], "obserav": [27, 28, 29], "alpha": [28, 147], "5": [28, 39, 98, 165, 166, 167, 201], "mix": 28, "peopl": [28, 147], "umass": [28, 147], "pthoma": [28, 147], "paper": [28, 147], "thomas2015b": 28, "pdf": [28, 147], "equat": 28, "mu": 28, "last": [28, 163, 201], "paragraph": 28, "befor": [28, 54, 136, 138, 139, 201], "section": 28, "2": [28, 39, 151, 152, 154, 181, 201], "1": [28, 39, 91, 103, 104, 105, 109, 111, 112, 113, 123, 125, 126, 128, 130, 132, 133, 136, 142, 146, 147, 148, 152, 154, 192, 193, 194, 197, 201], "stationar": 28, "hyperparamet": [28, 86, 87, 165, 166, 167, 201], "100": [28, 87, 142, 147], "far": [28, 201], "behavior": [28, 48, 78, 82, 142, 144, 155, 156, 157, 161, 165, 166, 167, 200], "can": [28, 154, 157, 168, 170, 201], "pi_b": [28, 83], "under": 28, "discrete_action_polici": [29, 200], "debug": [31, 46, 58, 62, 64, 66, 87, 142, 163], "gridworld": [31, 200], "intend": 31, "public": 31, "observation_spac": 36, "action_spac": 36, "describ": [36, 60, 81], "conveni": [36, 157, 158, 168, 169, 170, 201], "continu": [36, 39], "made": 36, "get_min_act": [36, 200], "first": [36, 152, 157, 200, 201], "get_min_st": [36, 200], "get_num_act": [36, 200], "get_num_observation_dim": [36, 200], "dimens": [36, 39, 192, 193, 194], "get_num_st": [36, 200], "also": [36, 149, 150, 153, 157, 190, 201], "call": [36, 114, 138, 146, 147, 148, 151, 152, 154, 190, 201], "here": [36, 138, 155, 201], "desired_typ": 37, "valid": [37, 39, 157, 201], "ensur": [37, 171, 201], "equival": [37, 146, 147, 148, 151, 152, 154], "discrete_spac": [37, 200], "continous_spac": 37, "we": [37, 87, 146, 147, 148, 151, 152, 154, 157, 199, 201], "match": 37, "bound": [39, 78, 92, 118, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 161, 163, 165, 166, 167, 201], "np": [39, 186], "ndarrai": [39, 78, 87, 92, 94, 95, 96, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 146, 147, 148, 151, 152, 154, 161, 163, 186, 188, 190], "shape": [39, 90, 91, 97, 116, 134, 136, 138, 201], "num_dim": 39, "min": [39, 40, 151, 201], "max": [39, 40, 201], "each": [39, 51, 82, 83, 91, 94, 97, 98, 103, 109, 111, 112, 113, 114, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 146, 147, 148, 151, 152, 154, 155, 157, 158, 163, 165, 166, 167, 184, 201], "For": [39, 152, 155, 201], "exampl": [39, 152, 201], "3d": 39, "x": [39, 90, 91, 92, 94, 95, 96, 97, 98, 103, 104, 105, 107, 108, 109, 111, 112, 113, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 136, 138, 139, 148, 151, 186, 187, 192, 193, 194], "y": [39, 90, 91, 92, 95, 96, 97, 103, 104, 105, 107, 108, 109, 111, 112, 113, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 136, 151, 192, 193, 194], "4": [39, 147, 155, 201], "z": [39, 147], "12": 39, "6": [39, 165, 167, 168, 169, 170, 201], "8": [39, 54, 201], "would": [39, 78, 142, 152, 154, 155, 165, 166, 167, 201], "check_bounds_valid": [39, 200], "check": [39, 60, 157, 178], "format": [39, 81, 201], "maximum": [39, 40, 60, 147, 157], "larger": [39, 147], "minimum": [39, 40, 147, 157, 201], "get_num_dim": [39, 200], "get_num_valu": [40, 200], "env_nam": [42, 43, 44], "name": [42, 43, 44, 78, 80, 81, 83, 84, 117, 122, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 165, 166, 167, 169, 201], "default": [42, 43, 81, 142, 143, 153, 157, 158, 165, 166, 167, 168, 170, 201], "constraint": [42, 78, 142, 143, 144, 152, 155, 156, 157, 158, 161, 163, 165, 166, 167, 168, 169, 170, 171, 184, 200], "string": [42, 78, 149, 150, 153, 154, 155, 157, 158, 163, 165, 166, 167, 168, 169, 170, 200], "kwarg": [43, 48, 78, 80, 81, 83, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 142, 146, 147, 148, 149, 150, 151, 152, 154, 157, 161, 168, 197], "path": [44, 170, 178, 184], "metadata": [44, 80, 81, 83, 84, 85, 142, 169, 170, 201], "file": [44, 81, 85, 87, 163, 168, 169, 170, 179, 180, 181, 182, 201], "run": [45, 51, 52, 53, 54, 55, 68, 70, 73, 78, 79, 87, 88, 136, 142, 160, 161, 162, 163, 164, 165, 166, 167, 184, 200], "rlspec": [45, 168, 200, 201], "save": [45, 68, 70, 73, 168, 169, 170, 181, 182, 184, 201], "disk": [45, 68, 70, 73, 78, 81], "print": [46, 58, 60, 62, 64, 66, 87, 142, 163], "sum": [46, 103, 109, 111, 112, 113, 190], "env_kwarg": [48, 168, 201], "seldonianmodel": [48, 78, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 146, 147, 148, 151, 152, 154, 161, 166, 167, 200], "parameter": [48, 201], "dict": [48, 51, 54, 117, 122, 142, 146, 147, 148, 151, 152, 154, 155, 157, 165, 166, 167, 168, 184], "pertain": [48, 168], "gamma": [48, 60, 168, 190, 201], "discount": [48, 60, 168, 190, 201], "factor": [48, 60, 168, 190, 201], "singl": [48, 52, 53, 54, 152, 157, 201], "pair": [48, 92, 95, 96, 151, 201], "timestep": [48, 60, 82, 201], "get_probs_from_observations_and_act": [48, 200], "those": [48, 155], "agent": [50, 51, 52, 53, 54, 55, 200], "mani": [51, 168, 170], "consist": [51, 54, 201], "same": [51, 136, 138, 151], "_i": [51, 136, 201], "model_param": [53, 54], "none": [53, 54, 78, 81, 106, 110, 153, 161, 163, 165, 166, 167, 168], "parallel": 54, "fals": [54, 60, 78, 87, 103, 104, 105, 112, 113, 117, 125, 126, 142, 152, 155, 157, 163, 165, 166, 167, 168, 169, 170, 181, 182, 184, 194, 201], "n_worker": 54, "arbitrari": [54, 60, 154], "process": [54, 87, 163, 201], "cpu": 54, "num_episod": 55, "wrapper": [55, 78, 86, 143, 161, 163, 179, 180, 181, 182], "run_trial": [55, 200], "explic": 55, "rather": 55, "via": [55, 157, 201], "get_env_descript": [58, 60, 62, 64, 66, 200], "overrid": [58, 60, 62, 64, 66, 92, 146, 147, 148, 151, 152, 154], "child": [58, 60, 62, 64, 66, 153, 155, 157, 201], "get_observ": [58, 60, 62, 64, 66, 200], "reset": [58, 60, 62, 64, 66, 157, 200], "initi": [58, 60, 62, 64, 66, 78, 87, 142, 157, 165, 166, 167, 168], "start_visu": [58, 60, 62, 64, 66, 200], "turn": [58, 60, 62, 64, 66], "visual": [58, 60, 62, 64, 66, 149, 150, 153, 157, 199, 200, 201], "debugg": [58, 60, 62, 64, 66], "stop_visu": [58, 60, 62, 64, 66, 200], "off": [58, 60, 62, 64, 66], "out": [58, 60, 62, 64, 66, 87, 142, 163], "size": [60, 78, 87, 114], "3": [60, 147, 152, 192, 194, 201], "squar": [60, 107, 108, 118, 119, 131, 147, 155, 201], "grid": 60, "cell": 60, "side": [60, 157], "distinct": 60, "terminal_st": 60, "occupi": 60, "time": [60, 114, 161, 163], "max_tim": 60, "allow": [60, 154], "expect": [60, 146, 147, 148, 151, 152, 154, 155], "create_env_descript": [60, 200], "is_in_goal_st": [60, 200], "goal": [60, 201], "true": [60, 103, 105, 112, 113, 116, 123, 132, 133, 134, 146, 147, 148, 151, 152, 154, 155, 165, 166, 167, 168, 169, 170, 184, 201], "go": [60, 201], "back": [60, 136, 138, 139, 165, 166, 167], "between": [60, 103, 104, 105, 109, 111, 112, 113, 123, 125, 126, 128, 130, 132, 133, 151, 175, 201], "reach": 60, "next": 60, "update_posit": [60, 200], "posit": [60, 91, 94, 98, 103, 104, 105, 109, 111, 112, 113, 117, 125, 126, 128, 130, 133, 147, 152, 155, 157, 201], "inform": [60, 201], "candid": [76, 77, 78, 87, 140, 142, 146, 147, 148, 151, 152, 154, 161, 163, 165, 166, 167, 168, 169, 200], "candidate_dataset": [78, 87], "n_safeti": [78, 87, 147], "parse_tre": [78, 161, 165, 166, 167, 171, 200, 201], "primary_object": [78, 142, 143, 161, 163, 165, 166, 167], "optimization_techniqu": [78, 165, 166, 167, 201], "barrier_funct": [78, 165, 166, 167, 201], "optim": [78, 87, 163, 165, 166, 167, 200, 201], "powel": [78, 201], "initial_solut": [78, 87], "regim": [78, 80, 81, 84, 155, 157, 158, 161, 201], "supervised_learn": [78, 80, 81, 84, 157, 158, 161, 201], "write_logfil": [78, 87, 163], "dataset": [78, 87, 124, 131, 146, 147, 148, 151, 152, 154, 158, 161, 163, 165, 166, 167, 168, 169, 170, 194, 200], "length": [78, 91, 147, 155], "safeti": [78, 87, 142, 146, 147, 148, 151, 152, 154, 159, 160, 161, 163, 165, 166, 167, 168, 169, 200], "when": [78, 103, 104, 105, 112, 113, 146, 148, 152, 154, 157, 184, 201], "predict": [78, 91, 92, 94, 95, 96, 97, 98, 104, 105, 111, 116, 123, 125, 126, 132, 133, 134, 136, 138, 148, 152, 200, 201], "confid": [78, 146, 147, 148, 150, 151, 152, 153, 154, 157, 168, 169, 170, 201], "dure": [78, 87, 155, 163, 165, 166, 167, 201], "parsetre": [78, 161, 165, 166, 171, 200, 201], "pars": [78, 144, 146, 149, 150, 151, 153, 155, 156, 157, 158, 161, 165, 166, 167, 171, 199, 201], "tree": [78, 144, 146, 149, 150, 151, 153, 155, 156, 157, 158, 161, 165, 166, 167, 171, 199, 201], "sole": [78, 142, 165, 166, 167], "absenc": [78, 142, 165, 166, 167], "loss": [78, 115, 120, 121, 142, 165, 166, 167, 201], "str": [78, 80, 81, 83, 84, 117, 122, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 161, 163, 165, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 184], "g": [78, 80, 81, 83, 84, 117, 122, 142, 146, 147, 148, 151, 152, 154, 157, 158, 161, 165, 166, 167, 201], "gradient_desc": [78, 165, 166, 167, 200, 201], "categori": [78, 80, 81, 84, 157, 158, 161, 197], "machin": [78, 80, 81, 84, 89, 93, 100, 146, 147, 148, 151, 152, 154, 157, 158, 161, 200, 201], "algorithm": [78, 79, 80, 81, 84, 86, 87, 88, 151, 157, 158, 161, 162, 163, 164, 165, 166, 167, 201], "reinforcement_learn": [78, 80, 81, 84, 157, 158, 161, 201], "write": [78, 87, 152, 163, 201], "output": [78, 138, 201], "calculate_batch": [78, 200], "batch_index": 78, "batch_siz": [78, 114, 142], "batch": [78, 114], "gradient": [78, 118, 119, 120, 138, 142, 143, 165, 166, 167, 168, 184, 201], "descent": [78, 142, 184, 201], "doe": [78, 151, 157, 200], "anyth": 78, "instead": 78, "batch_dataset": 78, "evaluate_primary_object": [78, 161, 163, 200], "primari": [78, 142, 143, 154, 161, 163, 165, 166, 167, 168, 184, 201], "fix": [78, 147, 161, 163, 201], "input": [78, 94, 98, 114, 146, 147, 148, 151, 152, 154, 178, 179, 186, 190, 201], "numpi": [78, 87, 92, 94, 95, 96, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 146, 147, 148, 151, 152, 154, 161, 163, 186, 188, 190], "evalu": [78, 117, 118, 122, 146, 147, 148, 151, 152, 154, 157, 161, 163], "get_constraint_upper_bound": [78, 200], "upper": [78, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 161, 163, 201], "objective_with_barri": [78, 200], "minimization_techniqu": 78, "barrier": [78, 201], "add": [78, 157], "larg": 78, "penalti": 78, "violat": [78, 157, 201], "nsf": [78, 87, 163, 201], "build": [79, 144, 156, 157, 164], "load": [79, 81, 85, 179, 180, 201], "num_datapoint": [80, 84], "meta_inform": [80, 83, 84], "datafram": [80, 83, 84, 106, 110, 127, 129, 146, 147, 148, 151, 152, 154, 157], "row": [80, 84, 116, 134, 148, 151, 184, 201], "rl": [80, 82, 83, 84, 157, 165, 190, 200, 201], "column": [80, 84, 116, 134, 146, 147, 148, 151, 152, 154, 157, 158, 169, 201], "load_rl_dataset_from_csv": [81, 200, 201], "filenam": [81, 85, 179, 180, 181, 182, 197, 201], "metadata_filenam": [81, 201], "rldataset": [81, 200, 201], "csv": [81, 201], "episode_index": 81, "probability_of_act": 81, "load_rl_dataset_from_episode_fil": [81, 200, 201], "pickl": [81, 163, 180, 182, 201], "load_supervised_dataset": [81, 200, 201], "file_typ": 81, "superviseddataset": [81, 200, 201], "label": [81, 84, 90, 91, 92, 94, 95, 96, 97, 98, 105, 107, 108, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 136, 138, 146, 147, 148, 151, 152, 154, 163, 184, 201], "sensit": [81, 163, 169, 201], "extens": 81, "alt_reward": 82, "episode_col_nam": 83, "o": 83, "r": [83, 119, 120], "sensitive_col_nam": [83, 169], "sensitive_attr": [83, 84], "json": [85, 179, 181, 201], "spec": [87, 163, 200], "all_frac_data_in_candidate_select": 87, "find": [87, 142, 201], "best": [87, 201], "safe": 87, "solut": [87, 142, 157, 161, 163, 184, 201], "note": [87, 201], "onli": [87, 93, 147, 155, 184, 201], "split": [87, 157, 163, 201], "percentag": 87, "complet": [87, 163, 200, 201], "fraction": [87, 163, 165, 166, 167, 168, 169], "being": [87, 103, 109, 111, 112, 113, 125, 126, 128, 130, 132, 133, 146, 148, 152, 154], "consid": [87, 147], "bootstrap_sample_dataset": [87, 200], "n_bootstrap": 87, "bootstrap": 87, "sampl": [87, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 119, 122, 127, 129, 147, 188, 201], "point": [87, 91, 97, 115, 121, 142, 151, 179, 180, 192, 193, 194, 201], "desir": 87, "candidate_select": [87, 163, 200], "should": [87, 201], "create_dataset": [87, 200], "frac_data_in_safeti": [87, 163, 165, 166, 167, 168, 169, 170], "shuffl": 87, "partit": [87, 201], "test": [87, 142, 146, 147, 148, 151, 152, 154, 159, 160, 161, 163, 165, 166, 167, 168, 169, 184, 200], "remain": [87, 163, 165, 166, 167, 168, 169], "est_prob_pass": [87, 200], "rho_prim": 87, "safety_dataset": [87, 161], "n_candid": [87, 147], "write_cs_logfil": [87, 163, 201], "bootstrap_it": 87, "estim": [87, 106, 110, 127, 129, 146, 147, 148, 152, 154, 201], "probabiilti": 87, "find_best_hyperparam": [87, 200], "indic": [87, 148, 163, 174, 201], "includ": [87, 90, 91, 97, 116, 134, 157, 201], "rtyle": 87, "tupl": [87, 157, 163, 201], "get_initial_solut": [87, 200], "soluion": 87, "get_safety_s": [87, 200], "n_total": 87, "amount": 87, "run_cor": [87, 200], "core": [87, 200], "log": [87, 157, 163, 201], "passed_safeti": [87, 163, 201], "found": [87, 142, 161, 163, 201], "pass": [87, 136, 138, 139, 146, 147, 148, 151, 152, 154, 157, 161, 163, 168, 201], "run_safety_test": [87, 163, 200], "candidate_solut": [87, 163], "some": [87, 157, 163, 201], "other": [87, 152, 163, 201], "mean": [87, 107, 108, 119, 124, 131, 151, 155, 163, 192, 193, 194, 201], "safety_test": [87, 163, 200, 201], "main": [89, 156, 200], "classificationmodel": [90, 94, 98, 200, 201], "binari": [90, 91, 93, 115, 120], "multi": [90, 97, 121, 155], "logist": [90, 91, 97, 115, 120, 121], "regress": [90, 91, 92, 95, 96, 97, 99, 151, 155, 157, 158, 167, 169, 201], "fit": [90, 91, 92, 95, 96, 97, 200, 201], "train": [90, 91, 92, 95, 96, 97, 201], "let": [90, 91, 97, 116, 134, 201], "datapoint": [90, 91, 97, 114, 116, 134, 136, 161], "j": [90, 91, 97, 116, 134, 136, 148], "bia": [90, 91, 97, 116, 134], "term": [90, 91, 97, 116, 134, 136, 142], "provi": [90, 91, 97, 116, 134, 201], "k": [90, 91, 97, 116, 134, 148], "baselogisticregressionmodel": [91, 97, 200], "have": [91, 94, 97, 98, 157, 201], "linearregressionmodel": [92, 200, 201], "sever": [92, 147, 151, 201], "parent": [92, 93, 99, 100, 101, 147, 151], "assum": 92, "intercept": [92, 136], "nxm": [92, 95, 96], "nx1": [92, 95, 96], "origin": 92, "squash": 92, "supervisedmodel": [93, 99, 138, 200], "classif": [93, 115, 121, 152, 155, 157, 167, 169, 201], "support": [93, 155, 201], "classifi": [94, 98], "alwai": [94, 98, 142, 146, 147, 148, 151, 152, 154, 157, 201], "regardless": [94, 98, 201], "regressionmodel": [95, 96, 200, 201], "ha": [98, 152, 155, 201], "prob": 98, "supervis": [101, 138, 155, 157, 167, 201], "neg": [103, 104, 105, 109, 112, 123, 125, 126, 128, 132, 155, 157], "rate": [103, 104, 105, 109, 111, 112, 113, 117, 123, 125, 126, 128, 130, 132, 133, 142, 152, 155, 157, 201], "whole": [103, 104, 105, 107, 108, 109, 111, 112, 113, 117, 157], "fact": [103, 112, 113], "wa": [103, 104, 105, 112, 113, 116, 134, 151, 152, 157, 163, 201], "instanc": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 139], "probabilist": [104, 105], "averag": [104, 105, 115, 121, 184], "over": [104, 105, 106, 107, 108, 110, 115, 117, 121, 136, 161, 201], "truth": 104, "weighted_return": [106, 110, 127, 129], "unweight": [106, 127], "import": [106, 110, 127, 129, 142, 199, 201], "error": [107, 108, 118, 119, 124, 131, 147, 151, 155, 200, 201], "y_hat": 107, "decis": [110, 129], "pdi": [110, 129], "func": 114, "n": [114, 184, 201], "num_batch": 114, "up": [114, 151, 157, 201], "measur": [114, 146, 148, 152, 154, 155, 157, 161, 201], "l_i": [116, 134], "l_k": [116, 134], "element": [116, 134], "confus": [116, 134, 148, 155], "correspond": [116, 134, 158, 189, 201], "statistic_nam": [117, 122], "data_dict": [117, 122, 146, 147, 148, 151, 152, 154], "datas": [117, 122, 146, 147, 148, 151, 152, 154], "statist": [117, 122, 146, 152, 155, 201], "fpr": [117, 122, 146, 155, 201], "analyt": 118, "w": [119, 120], "t": [119, 120, 146, 147, 148, 151, 152, 154, 189], "perceptron": 120, "correct": [123, 188], "vector": [124, 127, 129, 131, 138, 139, 142, 146, 147, 148, 151, 152, 154, 188], "subject": [125, 126, 132, 133, 201], "actual": [125, 126, 132, 133, 147, 201], "supervisedsklearnbasemodel": [136, 139, 200], "regressor": 136, "scikit": [136, 138, 201], "backward_pass": [136, 138, 200], "jacobian": [136, 139], "d": [136, 139], "forward_pass": [136, 138, 200], "dtheta_": 136, "keep": [136, 157], "mind": 136, "henc": 136, "create_model": [136, 138, 200], "make": [136, 157, 184, 201], "get_model_param": [136, 138, 200], "arg": [136, 138, 197], "flatten": [136, 138], "1d": [136, 138], "do": [136, 138, 139, 200], "forward": [136, 138, 139], "through": [136, 138, 139, 151, 157, 161], "sklearn": [136, 138, 139], "pred_numpi": [136, 138], "rtype": [136, 138], "update_model_param": [136, 138, 200], "reshap": [136, 138], "external_grad": 138, "backward": [138, 139], "respect": 138, "obtain": [139, 143], "pred": 139, "dtheta": 139, "result": [139, 201], "inherit": [139, 148, 152, 154, 201], "fn": 139, "repres": [139, 146, 149, 150, 155, 157, 201], "oper": [139, 146, 150, 200, 201], "n_constraint": 142, "upper_bounds_funct": [142, 143], "theta_init": 142, "lambda_init": [142, 165, 166, 167], "batch_calcul": 142, "n_batch": 142, "n_epoch": 142, "alpha_theta": [142, 165, 166, 167], "05": [142, 146, 147, 148, 151, 152, 154, 201], "alpha_lamb": [142, 165, 166, 167], "beta_veloc": [142, 165, 166, 167], "9": [142, 165, 166, 167, 190, 201], "beta_rmsprop": [142, 165, 166, 167], "gradient_librari": [142, 143, 165, 166, 167], "autograd": [142, 143, 165, 166, 167, 168, 186], "verbos": [142, 165, 166, 167, 168, 169, 170, 181, 182], "simultan": 142, "ascent": 142, "adam": [142, 165, 166, 167, 201], "lagrangian": [142, 184, 201], "l": [142, 163, 184, 201], "lambda": [142, 201], "f": [142, 151, 163, 184, 201], "lagrang": [142, 184], "multipli": [142, 157, 184], "done": 142, "saddl": 142, "Being": 142, "part": [142, 201], "No": [142, 201], "decai": 142, "veloc": 142, "rmsprop": 142, "num_it": [142, 165, 166, 167], "iter": [142, 151, 201], "librari": [142, 143, 200, 201], "comput": [142, 143, 151, 152, 154, 157, 165, 166, 167], "automat": [142, 143], "boolean": [142, 155, 168, 169, 170, 182, 194, 201], "flag": [142, 168, 169, 170, 182, 194, 201], "control": [142, 168, 169, 170, 194, 201], "lower": [146, 147, 148, 149, 150, 151, 152, 153, 154, 157], "inf": [146, 147, 148, 150, 151, 152, 154], "conditional_column": [146, 147, 148, 151, 152, 154], "leaf": [146, 149, 150, 161], "condit": [146, 147, 148, 151, 152, 154, 157, 158], "node_typ": [146, 149], "equal": [146, 157, 158, 161, 201], "base_nod": 146, "delta": [146, 147, 148, 151, 152, 154, 157, 158, 168, 169, 170, 201], "share": [146, 147, 151], "put": [146, 147, 151], "measure_function_nam": 146, "measure_funct": [146, 201], "calculate_bound": [146, 147, 148, 151, 152, 154, 200], "bound_method": [146, 147, 148, 151, 152, 154], "calculate_data_forbound": [146, 147, 148, 151, 152, 154, 200], "prepar": [146, 147, 148, 152, 154], "calculate_valu": [146, 147, 148, 151, 152, 154, 200], "etc": [146, 148, 150, 151, 152, 154], "compute_hc_lowerbound": [146, 147, 148, 151, 152, 154, 200], "high": [146, 147, 148, 151, 152, 154], "level": [146, 147, 148, 151, 152, 154, 157, 201], "compute_hc_upper_and_lowerbound": [146, 147, 148, 151, 152, 154, 200], "compute_hc_upperbound": [146, 147, 148, 151, 152, 154, 200], "independ": [146, 147, 148, 151, 152, 154, 201], "mask_data": [146, 147, 148, 151, 152, 154, 200], "mask": [146, 147, 148, 151, 152, 154], "joint": [146, 147, 148, 151, 152, 154], "AND": [146, 147, 148, 151, 152, 154], "predict_hc_lowerbound": [146, 147, 148, 151, 152, 154, 200], "predict_hc_upper_and_lowerbound": [146, 147, 148, 151, 152, 154, 200], "predict_hc_upperbound": [146, 147, 148, 151, 152, 154, 200], "zhat": [146, 147, 148, 151, 152, 154, 200], "unbias": [146, 147, 148, 152, 154], "basenod": [147, 148, 151, 152, 154, 200], "custom": [147, 151, 155, 186, 201], "cvar_alpha": 147, "definit": [147, 201], "least": [147, 201], "var_alpha": 147, "largest": 147, "thoma": [147, 151], "miller": 147, "2019": [147, 151], "thomas2019": 147, "theorem": 147, "threshold": [147, 168, 169, 170], "cvar": 147, "sort": 147, "b": [147, 155, 157], "cm_true_index": 148, "cm_pred_index": 148, "c_00": 148, "c_01": 148, "c_0k": 148, "______": 148, "_____": 148, "c_10": 148, "c_11": 148, "c_1k": 148, "c_k0": 148, "c_k1": 148, "c_kk": 148, "constant": [149, 157, 190, 201], "constant_nod": 149, "represent": [149, 150, 153, 155], "what": [149, 150, 153, 200], "displai": [149, 150, 153, 157, 184], "insid": [149, 150, 153], "box": [149, 150, 153, 201], "graph": [149, 150, 153, 157, 199], "intern": [150, 201], "non": 150, "These": [150, 154, 201], "perform": [150, 155, 201], "wise": 151, "differ": [151, 201], "male": [151, 201], "femal": [151, 201], "present": [151, 157], "et": 151, "al": 151, "www": [151, 189], "scienc": 151, "org": 151, "stoken": 151, "author": 151, "token": 151, "st": 151, "119": 151, "full": [151, 184, 201], "figur": [151, 184, 201], "precalculate_data": [151, 200], "preconfigur": 151, "so": [151, 154, 157, 201], "need": [151, 153, 157, 158, 164, 201], "recalcul": 151, "panda": 151, "y_i": 151, "y_hat_i": 151, "m": [151, 157, 201], "y_j": 151, "y_hat_j": 151, "There": [151, 154, 157, 201], "mai": [151, 178, 201], "n_male": 151, "n_femal": 151, "class_index": 152, "against": 152, "one": [152, 154, 155, 157, 165, 166, 167, 168, 201], "thei": [152, 155, 184, 201], "fpr_": 152, "left": [153, 157, 201], "right": [153, 157, 201], "will_lower_bound": 153, "will_upper_bound": 153, "alt_reward_numb": 154, "altern": 154, "besid": 154, "second": [154, 201], "j_pi_new_": 154, "global": 155, "construct": [155, 201], "measure_functions_dict": [155, 200], "sub_regim": [155, 157, 158, 167, 169, 201], "appear": [155, 157, 201], "recogn": 155, "special": [155, 201], "organ": 155, "sub": [155, 157, 158, 201], "pr": [155, 157, 201], "nr": 155, "tpr": [155, 201], "fnr": 155, "tnr": 155, "acc": 155, "accuraci": [155, 200], "cm": 155, "relev": [155, 184], "mean_error": [155, 157, 200], "mean_squared_error": [155, 200, 201], "reinforc": [155, 201], "j_pi_new": [155, 201], "custom_base_node_dict": [155, 200], "map": 155, "node": [155, 157, 158, 161, 165, 166, 167, 200, 201], "op_mapp": [155, 200], "ast": [155, 157], "not_supported_op_mapp": [155, 200], "bounds_required_dict": [155, 200], "requir": [155, 157, 166, 199, 201], "If": [155, 157, 165, 166, 167, 168, 199, 200, 201], "two": [155, 157, 201], "children": [155, 157], "like": [155, 157, 201], "need_a_low": 155, "need_a_upp": 155, "need_b_low": 155, "need_b_upp": 155, "ml": [157, 201], "user": [157, 201], "appropri": 157, "root": [157, 161], "assign": 157, "built": [157, 165, 166, 167, 168, 201], "constraint_str": [157, 158, 168, 169, 170], "express": [157, 201], "n_node": 157, "n_base_nod": 157, "more": [157, 201], "onc": [157, 201], "contribut": 157, "base_node_dict": 157, "track": 157, "uniqu": 157, "been": [157, 201], "alreadi": [157, 201], "help": [157, 189], "handl": 157, "case": [157, 174, 201], "duplic": [157, 171], "node_fonts": 157, "fontsiz": 157, "graphviz": [157, 199], "available_measure_funct": 157, "_ab": [157, 200], "absolut": [157, 201], "interv": 157, "_add": [157, 200], "_assign_bounds_help": [157, 200], "lower_need": 157, "upper_need": 157, "travers": 157, "_assign_deltas_help": [157, 200], "weight_method": 157, "_ast2pt_nod": [157, 200], "ast_nod": 157, "_ast_tree_help": [157, 200], "recurs": 157, "_div": [157, 200], "divid": 157, "_evaluator_help": [157, 200], "_exp": [157, 200], "_log": [157, 200], "_max": [157, 200], "_min": [157, 200], "_mult": [157, 200], "_pow": [157, 200], "pow": 157, "_preprocess_constraint_str": [157, 200], "inequ": [157, 201], "move": 157, "everyth": 157, "final": 157, "form": [157, 201], "sure": 157, "mathemat": [157, 201], "written": [157, 201], "python": [157, 189, 199, 201], "syntax": 157, "_propagate_valu": [157, 200], "propag": [157, 161, 200], "_propagator_help": [157, 200], "_protect_nan": [157, 200], "bound_typ": 157, "nan": 157, "infin": 157, "postit": 157, "_sub": [157, 200], "subract": 157, "assign_bounds_need": [157, 200], "breadth": 157, "search": 157, "decid": 157, "eventu": 157, "necessari": [157, 201], "end": [157, 201], "care": 157, "assign_delta": [157, 200], "among": 157, "build_tre": [157, 200], "delta_weight_method": [157, 158], "create_from_ast": [157, 200], "structur": 157, "evaluate_constraint": [157, 200], "itself": 157, "postord": 157, "logic": 157, "make_viz": [157, 200], "titl": 157, "diagram": 157, "top": [157, 201], "make_viz_help": [157, 200], "edg": 157, "digraph": 157, "propagate_bound": [157, 200], "reset_base_node_dict": [157, 200], "reset_data": 157, "less": [157, 161, 201], "frequent": 157, "defult": 158, "classifict": 158, "across": 158, "batch_size_safeti": [161, 163, 165, 166, 167], "loop": 161, "introspect": 163, "candidate_safety_split": [163, 200], "f_c": 163, "f_": 163, "l_c": 163, "l_": 163, "s_c": 163, "s_": 163, "detail": [163, 201], "branch": 163, "either": [163, 201], "get_cs_result": [163, 200], "get_st_upper_bound": [163, 200], "upper_bounds_dict": 163, "kei": [163, 201], "initial_solution_fn": [165, 166, 167, 168], "base_node_bound_method_dict": [165, 166, 167], "use_builtin_primary_gradient_fn": [165, 166, 167, 168], "custom_primary_gradient_fn": [165, 166, 167], "optimization_hyperparam": [165, 166, 167, 201], "005": [165, 166, 167], "95": [165, 166, 167], "hyper_search": [165, 166, 167], "200": [165, 166, 167], "use_batch": [165, 167], "regularization_hyperparam": [165, 166, 167], "rl_model": [165, 168, 200, 201], "exist": [165, 166, 167, 168], "fall": [165, 166, 167], "builtin": [165, 166, 167], "regular": [165, 166, 167], "save_dir": [168, 169, 170], "later": [168, 170], "chang": [168, 170, 184], "directori": [168, 169, 170, 178, 201], "pkl": [168, 169, 170, 201], "glag": [168, 169, 170], "supervisedspec": [169, 170, 200, 201], "without": 169, "metadata_pth": 170, "array_in": 174, "argmax": 174, "multipl": [174, 201], "tie": 174, "val_in": 175, "min_val": 175, "max_val": 175, "limit": 175, "output_str": 176, "indent": 181, "abl": 182, "primary_objective_nam": [184, 201], "plot_running_avg": 184, "savenam": 184, "png": 184, "show": [184, 201], "evolut": [184, 201], "One": [184, 201], "subplot": [184, 201], "repeat": [184, 201], "plot": [184, 201], "ii": 184, "lambda_i": [184, 201], "iii": 184, "g_i": [184, 201], "iv": 184, "lagranian": 184, "sum_i": 184, "plt": 184, "cumprod": 186, "work": [186, 201], "sourc": [186, 200], "github": [186, 200], "com": [186, 189], "hip": 186, "issu": 186, "257": 186, "cumul": 186, "product": 186, "v": 188, "standard": [188, 192, 193, 194], "deviat": [188, 192, 193, 194], "bessel": 188, "nu": 189, "invers": [189, 201], "student": 189, "cdf": 189, "degre": 189, "freedom": 189, "matlab": 189, "mathwork": 189, "stat": 189, "html": 189, "arr": 190, "num_point": [192, 193, 194], "loc_x": [192, 193, 194], "loc_i": [192, 193, 194], "sigma_x": [192, 193, 194], "sigma_i": [192, 193, 194], "clip_min": [192, 194], "clip_max": [192, 194], "2d": [192, 193, 194], "distribut": [192, 193, 194], "clip": [192, 194], "option": [194, 201], "msg": 197, "lineno": 197, "seldonian": [199, 201], "pip": 199, "Then": 199, "system": 199, "wide": 199, "recommend": 199, "welcom": 200, "toolkit": [200, 201], "code": [200, 201], "host": 200, "overview": 200, "interfac": 200, "sa": 200, "start": [200, 201], "instal": 200, "tutori": [200, 201], "api": [200, 201], "fourier": 200, "discrete_random_ag": 200, "function_approxim": 200, "linear_fa": 200, "linear_state_action_value_fa": 200, "construct_q_table_from_env_descript": 200, "parameterized_non_learning_softmax_ag": 200, "discretesoftmax": [200, 201], "mixedsoftmax": 200, "keyboard_gridworld": 200, "mountain_car_rough_solut": 200, "check_space_typ": 200, "continuous_spac": 200, "rl_generate_dataset_and_spec_fil": 200, "get_constraint_str": 200, "get_env_kwarg": 200, "get_metadata_path": 200, "print_return_info": 200, "rl_runner": 200, "create_ag": 200, "run_all_tri": 200, "run_episod": 200, "run_episode_from_dict": 200, "run_trial_given_agent_and_env": 200, "mountaincar": 200, "n_step_mountaincar": 200, "simglucose_env": 200, "simglucos": 200, "generate_gridworld_episod": 200, "generate_mountaincar_episod": 200, "generate_simglucose_episod": 200, "get_max_ob": 200, "hyperparams_and_set": 200, "define_hyperparameter_and_setting_dict": 200, "candidateselect": [200, 201], "load_supervised_metadata": 200, "datasetload": [200, 201], "hyperparam_search": 200, "hyperparamsearch": 200, "binarylogisticregressionmodel": 200, "boundedlinearregressionmodel": 200, "dummyclassifiermodel": 200, "linearregressionmodellistfeatur": 200, "multiclasslogisticregressionmodel": 200, "randomclassifiermodel": 200, "false_negative_r": 200, "false_positive_r": 200, "is_estim": 200, "negative_r": 200, "pdis_estim": 200, "positive_r": 200, "true_negative_r": 200, "true_positive_r": 200, "batcher": 200, "binary_logistic_loss": 200, "confusion_matrix": 200, "evaluate_statist": 200, "gradient_bounded_squared_error": 200, "gradient_mean_squared_error": 200, "gradient_binary_logistic_loss": 200, "multiclass_logistic_loss": 200, "sample_from_statist": 200, "vector_accuraci": 200, "vector_error": 200, "vector_false_negative_r": 200, "vector_false_positive_r": 200, "vector_is_estim": 200, "vector_negative_r": 200, "vector_pdis_estim": 200, "vector_positive_r": 200, "vector_squared_error": 200, "vector_true_negative_r": 200, "vector_true_positive_r": 200, "vector_confusion_matrix": 200, "sklearn_lr": 200, "sklearnlinearregressor": 200, "sklearn_model": 200, "sklearn_predict_vjp": 200, "gradient_descent_adam": 200, "setup_gradi": 200, "cvarsqebasenod": 200, "confusionmatrixbasenod": 200, "constantnod": 200, "internalnod": 200, "medcustombasenod": 200, "multiclassbasenod": 200, "rlaltrewardbasenod": 200, "make_parse_trees_from_constraint": 200, "safetytest": [200, 201], "seldonian_algorithm": [200, 201], "seldonianalgorithm": [200, 201], "createrlspec": [200, 201], "createsimplesupervisedspec": 200, "createsupervisedspec": [200, 201], "validate_parse_tre": 200, "util": [200, 201], "rl_util": 200, "argmax_multi": 200, "clamp": 200, "io_util": [200, 201], "dir_path": 200, "load_json": 200, "load_pickl": [200, 201], "save_json": 200, "save_pickl": 200, "plot_util": [200, 201], "plot_gradient_desc": [200, 201], "stats_util": 200, "custom_cumprod": 200, "stddev": 200, "tinv": 200, "weighted_sum_gamma": 200, "tutorial_util": 200, "generate_clipped_data": 200, "generate_data": 200, "make_synthetic_regression_dataset": 200, "warn": 200, "custom_warn": 200, "custom_formatwarn": 200, "document": 201, "homepag": 201, "In": 201, "page": 201, "few": 201, "hand": 201, "illustr": 201, "simul": 201, "realist": 201, "most": 201, "piec": 201, "cover": 201, "could": 201, "unifi": 201, "pattern": 201, "concept": 201, "conceptu": 201, "enforc": 201, "develop": 201, "design": 201, "applic": 201, "command": 201, "line": 201, "graphic": 201, "short": 201, "underli": 201, "discuss": 201, "below": 201, "well": 201, "manual": 201, "loader": 201, "comma": 201, "separ": 201, "header": 201, "categor": 201, "numer": 201, "might": 201, "look": 201, "622": 201, "491": 201, "56": 201, "439": 201, "93": 201, "707": 201, "64": 201, "663": 201, "65": 201, "557": 201, "09": 201, "711": 201, "37": 201, "731": 201, "31": 201, "509": 201, "33333": 201, "538": 201, "490": 201, "58": 201, "406": 201, "59": 201, "529": 201, "532": 201, "28": 201, "447": 201, "23": 201, "527": 201, "379": 201, "14": 201, "488": 201, "98333": 201, "455": 201, "18": 201, "440": 201, "570": 201, "86": 201, "417": 201, "54": 201, "453": 201, "53": 201, "425": 201, "87": 201, "475": 201, "63": 201, "476": 201, "11": 201, "407": 201, "15": 201, "97333": 201, "756": 201, "91": 201, "679": 201, "62": 201, "531": 201, "583": 201, "534": 201, "42": 201, "521": 201, "592": 201, "41": 201, "783": 201, "76": 201, "588": 201, "26": 201, "53333": 201, "hot": 201, "10": 201, "integ": 201, "25": 201, "intention": 201, "exclud": 201, "your": 201, "problem": 201, "label_column": 201, "try": 201, "sensitive_column": 201, "biggest": 201, "logisticregressionmodel": 201, "essenti": 201, "wrap": 201, "linearregress": 201, "unless": 201, "own": 201, "know": 201, "though": 201, "chosen": 201, "explicitli": 201, "thing": 201, "extend": 201, "py": 201, "_": 201, "directli": 201, "often": 201, "five": 201, "follow": 201, "math": 201, "nativ": 201, "ab": 201, "exp": 201, "239": 201, "trigger": 201, "open": 201, "ad": 201, "quantiti": 201, "It": 201, "someth": 201, "wai": 201, "wrote": 201, "instruct": 201, "recal": 201, "leq": 201, "satisfi": 201, "howev": 201, "cumbersom": 201, "symbol": 201, "interpret": 201, "ident": 201, "themselv": 201, "tri": 201, "basic": 201, "plain": 201, "english": 201, "88": 201, "greater": 201, "commonli": 201, "fair": 201, "filter": 201, "atr1": 201, "atr2": 201, "placehold": 201, "parenthes": 201, "surround": 201, "statement": 201, "sai": 201, "r1": 201, "r2": 201, "stand": 201, "race": 201, "demograph": 201, "pariti": 201, "toler": 201, "ratio": 201, "dispar": 201, "impact": 201, "anoth": 201, "permit": 201, "belong": 201, "bundl": 201, "shown": 201, "block": 201, "At": 201, "broad": 201, "scope": 201, "throught": 201, "now": 201, "happen": 201, "even": 201, "small": 201, "techniqu": 201, "black": 201, "cost": 201, "forc": 201, "toward": 201, "feasibl": 201, "cg": 201, "nelder": 201, "mead": 201, "bfg": 201, "cma": 201, "scipi": 201, "minim": 201, "solver": 201, "covari": 201, "adapt": 201, "strategi": 201, "kkt": 201, "situat": 201, "contraint": 201, "conflict": 201, "vanilla": 201, "oscil": 201, "boundari": 201, "dampen": 201, "momentum": 201, "our": 201, "mitig": 201, "accept": 201, "hat": 201, "mathcal": 201, "ran": 201, "convent": 201, "candidate_selection_log": 201, "increas": 201, "overwritten": 201, "log_fil": 201, "candidate_selection_log0": 201, "cs_dict": 201, "produc": 201, "1500": 201, "red": 201, "area": 201, "middl": 201, "region": 201, "dot": 201, "its": 201, "deem": 201, "assembl": 201, "interact": 201}, "objects": {"": [[0, 0, 0, "-", "seldonian"]], "seldonian": [[1, 0, 0, "-", "RL"], [76, 0, 0, "-", "candidate_selection"], [79, 0, 0, "-", "dataset"], [86, 0, 0, "-", "hyperparam_search"], [88, 0, 0, "-", "models"], [140, 0, 0, "-", "optimizers"], [144, 0, 0, "-", "parse_tree"], [159, 0, 0, "-", "safety_test"], [162, 0, 0, "-", "seldonian_algorithm"], [164, 0, 0, "-", "spec"], [172, 0, 0, "-", "utils"], [195, 0, 0, "-", "warnings"]], "seldonian.RL": [[2, 0, 0, "-", "Agents"], [34, 0, 0, "-", "Env_Description"], [41, 0, 0, "-", "RL_generate_dataset_and_spec_file"], [47, 0, 0, "-", "RL_model"], [49, 0, 0, "-", "RL_runner"], [56, 0, 0, "-", "environments"], [67, 0, 0, "-", "generate_gridworld_episodes"], [69, 0, 0, "-", "generate_mountaincar_episodes"], [71, 0, 0, "-", "generate_simglucose_episodes"], [74, 0, 0, "-", "hyperparams_and_settings"]], "seldonian.RL.Agents": [[3, 0, 0, "-", "Agent"], [5, 0, 0, "-", "Bases"], [8, 0, 0, "-", "Discrete_Random_Agent"], [10, 0, 0, "-", "Function_Approximators"], [20, 0, 0, "-", "Parameterized_non_learning_softmax_agent"], [22, 0, 0, "-", "Policies"], [30, 0, 0, "-", "keyboard_gridworld"], [32, 0, 0, "-", "mountain_car_rough_solution"]], "seldonian.RL.Agents.Agent": [[4, 1, 1, "", "Agent"]], "seldonian.RL.Agents.Agent.Agent": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "__repr__"], [4, 2, 1, "", "choose_action"], [4, 2, 1, "", "get_params"], [4, 2, 1, "", "get_prob_this_action"], [4, 2, 1, "", "set_new_params"], [4, 2, 1, "", "update"]], "seldonian.RL.Agents.Bases": [[6, 0, 0, "-", "Fourier"]], "seldonian.RL.Agents.Bases.Fourier": [[7, 1, 1, "", "Fourier"]], "seldonian.RL.Agents.Bases.Fourier.Fourier": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "__repr__"], [7, 2, 1, "", "calculate_num_features"], [7, 2, 1, "", "construct_basis_matrix"], [7, 2, 1, "", "get_features"], [7, 2, 1, "", "get_normalized_observation"]], "seldonian.RL.Agents.Discrete_Random_Agent": [[9, 1, 1, "", "Discrete_Random_Agent"]], "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "__repr__"], [9, 2, 1, "", "choose_action"], [9, 2, 1, "", "get_params"], [9, 2, 1, "", "get_prob_this_action"], [9, 2, 1, "", "set_new_params"], [9, 2, 1, "", "update"]], "seldonian.RL.Agents.Function_Approximators": [[11, 0, 0, "-", "Function_Approximator"], [13, 0, 0, "-", "Linear_FA"], [16, 0, 0, "-", "Table"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator": [[12, 1, 1, "", "Function_Approximator"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "__repr__"], [12, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA": [[14, 1, 1, "", "Linear_FA"], [15, 1, 1, "", "Linear_state_action_value_FA"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "__repr__"], [14, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "__repr__"], [15, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Table": [[17, 1, 1, "", "Q_Table"], [18, 1, 1, "", "Table"], [19, 3, 1, "", "construct_Q_Table_From_Env_Description"]], "seldonian.RL.Agents.Function_Approximators.Table.Q_Table": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "__repr__"], [17, 2, 1, "", "from_environment_state_to_0_indexed_state"], [17, 2, 1, "", "get_action_values_given_state"], [17, 2, 1, "", "get_action_values_given_zero_indexed_state"], [17, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Table.Table": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "__repr__"], [18, 2, 1, "", "from_environment_state_to_0_indexed_state"], [18, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent": [[21, 1, 1, "", "Parameterized_non_learning_softmax_agent"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "__repr__"], [21, 2, 1, "", "choose_action"], [21, 2, 1, "", "get_action_values"], [21, 2, 1, "", "get_params"], [21, 2, 1, "", "get_prob_this_action"], [21, 2, 1, "", "set_new_params"], [21, 2, 1, "", "update"]], "seldonian.RL.Agents.Policies": [[23, 0, 0, "-", "Policy"], [26, 0, 0, "-", "Softmax"]], "seldonian.RL.Agents.Policies.Policy": [[24, 1, 1, "", "Discrete_Action_Policy"], [25, 1, 1, "", "Policy"]], "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "__repr__"], [24, 2, 1, "", "choose_action"], [24, 2, 1, "", "construct_basis_and_linear_FA"], [24, 2, 1, "", "from_0_indexed_action_to_environment_action"], [24, 2, 1, "", "from_environment_action_to_0_indexed_action"], [24, 2, 1, "", "get_action_values_given_state"], [24, 2, 1, "", "get_params"], [24, 2, 1, "", "get_prob_this_action"], [24, 2, 1, "", "make_state_action_FA"], [24, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Policy.Policy": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "__repr__"], [25, 2, 1, "", "choose_action"], [25, 2, 1, "", "get_params"], [25, 2, 1, "", "get_prob_this_action"], [25, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Softmax": [[27, 1, 1, "", "DiscreteSoftmax"], [28, 1, 1, "", "MixedSoftmax"], [29, 1, 1, "", "Softmax"]], "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "__repr__"], [27, 2, 1, "", "_arg"], [27, 2, 1, "", "_denom"], [27, 2, 1, "", "choose_action"], [27, 2, 1, "", "choose_action_from_action_values"], [27, 2, 1, "", "construct_basis_and_linear_FA"], [27, 2, 1, "", "from_0_indexed_action_to_environment_action"], [27, 2, 1, "", "from_environment_action_to_0_indexed_action"], [27, 2, 1, "", "get_action_probs_from_action_values"], [27, 2, 1, "", "get_action_values_given_state"], [27, 2, 1, "", "get_e_to_the_something_terms"], [27, 2, 1, "", "get_params"], [27, 2, 1, "", "get_prob_this_action"], [27, 2, 1, "", "make_state_action_FA"], [27, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "__repr__"], [28, 2, 1, "", "choose_action"], [28, 2, 1, "", "choose_action_from_action_values"], [28, 2, 1, "", "construct_basis_and_linear_FA"], [28, 2, 1, "", "from_0_indexed_action_to_environment_action"], [28, 2, 1, "", "from_environment_action_to_0_indexed_action"], [28, 2, 1, "", "get_action_probs_from_action_values"], [28, 2, 1, "", "get_action_values_given_state"], [28, 2, 1, "", "get_e_to_the_something_terms"], [28, 2, 1, "", "get_params"], [28, 2, 1, "", "get_prob_this_action"], [28, 2, 1, "", "make_state_action_FA"], [28, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Softmax.Softmax": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "__repr__"], [29, 2, 1, "", "choose_action"], [29, 2, 1, "", "choose_action_from_action_values"], [29, 2, 1, "", "construct_basis_and_linear_FA"], [29, 2, 1, "", "from_0_indexed_action_to_environment_action"], [29, 2, 1, "", "from_environment_action_to_0_indexed_action"], [29, 2, 1, "", "get_action_probs_from_action_values"], [29, 2, 1, "", "get_action_values_given_state"], [29, 2, 1, "", "get_e_to_the_something_terms"], [29, 2, 1, "", "get_params"], [29, 2, 1, "", "get_prob_this_action"], [29, 2, 1, "", "make_state_action_FA"], [29, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.keyboard_gridworld": [[31, 1, 1, "", "Keyboard_gridworld"]], "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "__repr__"], [31, 2, 1, "", "choose_action"], [31, 2, 1, "", "get_params"], [31, 2, 1, "", "get_prob_this_action"], [31, 2, 1, "", "set_new_params"], [31, 2, 1, "", "update"]], "seldonian.RL.Agents.mountain_car_rough_solution": [[33, 1, 1, "", "Mountain_car_rough_solution"]], "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution": [[33, 2, 1, "", "__init__"], [33, 2, 1, "", "__repr__"], [33, 2, 1, "", "choose_action"], [33, 2, 1, "", "get_params"], [33, 2, 1, "", "get_prob_this_action"], [33, 2, 1, "", "set_new_params"], [33, 2, 1, "", "update"]], "seldonian.RL.Env_Description": [[35, 0, 0, "-", "Env_Description"], [38, 0, 0, "-", "Spaces"]], "seldonian.RL.Env_Description.Env_Description": [[36, 1, 1, "", "Env_Description"], [37, 3, 1, "", "check_space_type"]], "seldonian.RL.Env_Description.Env_Description.Env_Description": [[36, 2, 1, "", "__init__"], [36, 2, 1, "", "__repr__"], [36, 2, 1, "", "get_min_action"], [36, 2, 1, "", "get_min_state"], [36, 2, 1, "", "get_num_actions"], [36, 2, 1, "", "get_num_observation_dims"], [36, 2, 1, "", "get_num_states"]], "seldonian.RL.Env_Description.Spaces": [[39, 1, 1, "", "Continuous_Space"], [40, 1, 1, "", "Discrete_Space"]], "seldonian.RL.Env_Description.Spaces.Continuous_Space": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "__repr__"], [39, 2, 1, "", "check_bounds_valid"], [39, 2, 1, "", "get_num_dims"]], "seldonian.RL.Env_Description.Spaces.Discrete_Space": [[40, 2, 1, "", "__init__"], [40, 2, 1, "", "__repr__"], [40, 2, 1, "", "get_num_values"]], "seldonian.RL.RL_generate_dataset_and_spec_file": [[42, 3, 1, "", "get_constraint_string"], [43, 3, 1, "", "get_env_kwargs"], [44, 3, 1, "", "get_metadata_path"], [45, 3, 1, "", "main"], [46, 3, 1, "", "print_return_info"]], "seldonian.RL.RL_model": [[48, 1, 1, "", "RL_model"]], "seldonian.RL.RL_model.RL_model": [[48, 2, 1, "", "__init__"], [48, 2, 1, "", "__repr__"], [48, 2, 1, "", "get_prob_this_action"], [48, 2, 1, "", "get_probs_from_observations_and_actions"]], "seldonian.RL.RL_runner": [[50, 3, 1, "", "create_agent"], [51, 3, 1, "", "run_all_trials"], [52, 3, 1, "", "run_episode"], [53, 3, 1, "", "run_episode_from_dict"], [54, 3, 1, "", "run_trial"], [55, 3, 1, "", "run_trial_given_agent_and_env"]], "seldonian.RL.environments": [[57, 0, 0, "-", "Environment"], [59, 0, 0, "-", "gridworld"], [61, 0, 0, "-", "mountaincar"], [63, 0, 0, "-", "n_step_mountaincar"], [65, 0, 0, "-", "simglucose_env"]], "seldonian.RL.environments.Environment": [[58, 1, 1, "", "Environment"]], "seldonian.RL.environments.Environment.Environment": [[58, 2, 1, "", "__init__"], [58, 2, 1, "", "__repr__"], [58, 2, 1, "", "get_env_description"], [58, 2, 1, "", "get_observation"], [58, 2, 1, "", "reset"], [58, 2, 1, "", "start_visualizing"], [58, 2, 1, "", "stop_visualizing"], [58, 2, 1, "", "terminated"], [58, 2, 1, "", "transition"], [58, 2, 1, "", "visualize"]], "seldonian.RL.environments.gridworld": [[60, 1, 1, "", "Gridworld"]], "seldonian.RL.environments.gridworld.Gridworld": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "__repr__"], [60, 2, 1, "", "create_env_description"], [60, 2, 1, "", "get_env_description"], [60, 2, 1, "", "get_observation"], [60, 2, 1, "", "is_in_goal_state"], [60, 2, 1, "", "reset"], [60, 2, 1, "", "start_visualizing"], [60, 2, 1, "", "stop_visualizing"], [60, 2, 1, "", "terminated"], [60, 2, 1, "", "transition"], [60, 2, 1, "", "update_position"], [60, 2, 1, "", "visualize"]], "seldonian.RL.environments.mountaincar": [[62, 1, 1, "", "Mountaincar"]], "seldonian.RL.environments.mountaincar.Mountaincar": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "__repr__"], [62, 2, 1, "", "get_env_description"], [62, 2, 1, "", "get_observation"], [62, 2, 1, "", "reset"], [62, 2, 1, "", "start_visualizing"], [62, 2, 1, "", "stop_visualizing"], [62, 2, 1, "", "terminated"], [62, 2, 1, "", "transition"], [62, 2, 1, "", "visualize"]], "seldonian.RL.environments.n_step_mountaincar": [[64, 1, 1, "", "N_step_mountaincar"]], "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "__repr__"], [64, 2, 1, "", "get_env_description"], [64, 2, 1, "", "get_observation"], [64, 2, 1, "", "reset"], [64, 2, 1, "", "start_visualizing"], [64, 2, 1, "", "stop_visualizing"], [64, 2, 1, "", "terminated"], [64, 2, 1, "", "transition"], [64, 2, 1, "", "visualize"]], "seldonian.RL.environments.simglucose_env": [[66, 1, 1, "", "Simglucose"]], "seldonian.RL.environments.simglucose_env.Simglucose": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "__repr__"], [66, 2, 1, "", "get_env_description"], [66, 2, 1, "", "get_observation"], [66, 2, 1, "", "reset"], [66, 2, 1, "", "start_visualizing"], [66, 2, 1, "", "stop_visualizing"], [66, 2, 1, "", "terminated"], [66, 2, 1, "", "transition"], [66, 2, 1, "", "visualize"]], "seldonian.RL.generate_gridworld_episodes": [[68, 3, 1, "", "main"]], "seldonian.RL.generate_mountaincar_episodes": [[70, 3, 1, "", "main"]], "seldonian.RL.generate_simglucose_episodes": [[72, 3, 1, "", "get_max_obs"], [73, 3, 1, "", "main"]], "seldonian.RL.hyperparams_and_settings": [[75, 3, 1, "", "define_hyperparameter_and_setting_dict"]], "seldonian.candidate_selection": [[77, 0, 0, "-", "candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[78, 1, 1, "", "CandidateSelection"]], "seldonian.candidate_selection.candidate_selection.CandidateSelection": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "__repr__"], [78, 2, 1, "", "calculate_batches"], [78, 2, 1, "", "evaluate_primary_objective"], [78, 2, 1, "", "get_constraint_upper_bounds"], [78, 2, 1, "", "objective_with_barrier"], [78, 2, 1, "", "run"]], "seldonian.dataset": [[80, 1, 1, "", "DataSet"], [81, 1, 1, "", "DataSetLoader"], [82, 1, 1, "", "Episode"], [83, 1, 1, "", "RLDataSet"], [84, 1, 1, "", "SupervisedDataSet"], [85, 3, 1, "", "load_supervised_metadata"]], "seldonian.dataset.DataSet": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "__repr__"]], "seldonian.dataset.DataSetLoader": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__repr__"], [81, 2, 1, "", "load_RL_dataset_from_csv"], [81, 2, 1, "", "load_RL_dataset_from_episode_file"], [81, 2, 1, "", "load_supervised_dataset"]], "seldonian.dataset.Episode": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "__repr__"]], "seldonian.dataset.RLDataSet": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "__repr__"]], "seldonian.dataset.SupervisedDataSet": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__repr__"]], "seldonian.hyperparam_search": [[87, 1, 1, "", "HyperparamSearch"]], "seldonian.hyperparam_search.HyperparamSearch": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "__repr__"], [87, 2, 1, "", "bootstrap_sample_dataset"], [87, 2, 1, "", "candidate_selection"], [87, 2, 1, "", "create_dataset"], [87, 2, 1, "", "est_prob_pass"], [87, 2, 1, "", "find_best_hyperparams"], [87, 2, 1, "", "get_initial_solution"], [87, 2, 1, "", "get_safety_size"], [87, 2, 1, "", "run_core"], [87, 2, 1, "", "run_safety_test"], [87, 2, 1, "", "safety_test"]], "seldonian.models": [[89, 0, 0, "-", "models"], [102, 0, 0, "-", "objectives"], [135, 0, 0, "-", "sklearn_lr"], [137, 0, 0, "-", "sklearn_model"]], "seldonian.models.models": [[90, 1, 1, "", "BaseLogisticRegressionModel"], [91, 1, 1, "", "BinaryLogisticRegressionModel"], [92, 1, 1, "", "BoundedLinearRegressionModel"], [93, 1, 1, "", "ClassificationModel"], [94, 1, 1, "", "DummyClassifierModel"], [95, 1, 1, "", "LinearRegressionModel"], [96, 1, 1, "", "LinearRegressionModelListFeatures"], [97, 1, 1, "", "MultiClassLogisticRegressionModel"], [98, 1, 1, "", "RandomClassifierModel"], [99, 1, 1, "", "RegressionModel"], [100, 1, 1, "", "SeldonianModel"], [101, 1, 1, "", "SupervisedModel"]], "seldonian.models.models.BaseLogisticRegressionModel": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "__repr__"], [90, 2, 1, "", "fit"]], "seldonian.models.models.BinaryLogisticRegressionModel": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "__repr__"], [91, 2, 1, "", "fit"], [91, 2, 1, "", "predict"]], "seldonian.models.models.BoundedLinearRegressionModel": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "__repr__"], [92, 2, 1, "", "fit"], [92, 2, 1, "", "predict"]], "seldonian.models.models.ClassificationModel": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "__repr__"]], "seldonian.models.models.DummyClassifierModel": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "__repr__"], [94, 2, 1, "", "predict"]], "seldonian.models.models.LinearRegressionModel": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "__repr__"], [95, 2, 1, "", "fit"], [95, 2, 1, "", "predict"]], "seldonian.models.models.LinearRegressionModelListFeatures": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "__repr__"], [96, 2, 1, "", "fit"], [96, 2, 1, "", "predict"]], "seldonian.models.models.MultiClassLogisticRegressionModel": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "__repr__"], [97, 2, 1, "", "fit"], [97, 2, 1, "", "predict"]], "seldonian.models.models.RandomClassifierModel": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "__repr__"], [98, 2, 1, "", "predict"]], "seldonian.models.models.RegressionModel": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "__repr__"]], "seldonian.models.models.SeldonianModel": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "__repr__"]], "seldonian.models.models.SupervisedModel": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "__repr__"]], "seldonian.models.objectives": [[103, 3, 1, "", "Accuracy"], [104, 3, 1, "", "False_Negative_Rate"], [105, 3, 1, "", "False_Positive_Rate"], [106, 3, 1, "", "IS_estimate"], [107, 3, 1, "", "Mean_Error"], [108, 3, 1, "", "Mean_Squared_Error"], [109, 3, 1, "", "Negative_Rate"], [110, 3, 1, "", "PDIS_estimate"], [111, 3, 1, "", "Positive_Rate"], [112, 3, 1, "", "True_Negative_Rate"], [113, 3, 1, "", "True_Positive_Rate"], [114, 3, 1, "", "batcher"], [115, 3, 1, "", "binary_logistic_loss"], [116, 3, 1, "", "confusion_matrix"], [117, 3, 1, "", "evaluate_statistic"], [118, 3, 1, "", "gradient_Bounded_Squared_Error"], [119, 3, 1, "", "gradient_Mean_Squared_Error"], [120, 3, 1, "", "gradient_binary_logistic_loss"], [121, 3, 1, "", "multiclass_logistic_loss"], [122, 3, 1, "", "sample_from_statistic"], [123, 3, 1, "", "vector_Accuracy"], [124, 3, 1, "", "vector_Error"], [125, 3, 1, "", "vector_False_Negative_Rate"], [126, 3, 1, "", "vector_False_Positive_Rate"], [127, 3, 1, "", "vector_IS_estimate"], [128, 3, 1, "", "vector_Negative_Rate"], [129, 3, 1, "", "vector_PDIS_estimate"], [130, 3, 1, "", "vector_Positive_Rate"], [131, 3, 1, "", "vector_Squared_Error"], [132, 3, 1, "", "vector_True_Negative_Rate"], [133, 3, 1, "", "vector_True_Positive_Rate"], [134, 3, 1, "", "vector_confusion_matrix"]], "seldonian.models.sklearn_lr": [[136, 1, 1, "", "SkLearnLinearRegressor"]], "seldonian.models.sklearn_lr.SkLearnLinearRegressor": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "__repr__"], [136, 2, 1, "", "backward_pass"], [136, 2, 1, "", "create_model"], [136, 2, 1, "", "forward_pass"], [136, 2, 1, "", "get_model_params"], [136, 2, 1, "", "predict"], [136, 2, 1, "", "update_model_params"]], "seldonian.models.sklearn_model": [[138, 1, 1, "", "SupervisedSkLearnBaseModel"], [139, 3, 1, "", "sklearn_predict_vjp"]], "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel": [[138, 2, 1, "", "__init__"], [138, 2, 1, "", "__repr__"], [138, 2, 1, "", "backward_pass"], [138, 2, 1, "", "create_model"], [138, 2, 1, "", "forward_pass"], [138, 2, 1, "", "get_model_params"], [138, 2, 1, "", "predict"], [138, 2, 1, "", "update_model_params"]], "seldonian.optimizers": [[141, 0, 0, "-", "gradient_descent"]], "seldonian.optimizers.gradient_descent": [[142, 3, 1, "", "gradient_descent_adam"], [143, 3, 1, "", "setup_gradients"]], "seldonian.parse_tree": [[145, 0, 0, "-", "nodes"], [155, 0, 0, "-", "operators"], [156, 0, 0, "-", "parse_tree"]], "seldonian.parse_tree.nodes": [[146, 1, 1, "", "BaseNode"], [147, 1, 1, "", "CVaRSQeBaseNode"], [148, 1, 1, "", "ConfusionMatrixBaseNode"], [149, 1, 1, "", "ConstantNode"], [150, 1, 1, "", "InternalNode"], [151, 1, 1, "", "MEDCustomBaseNode"], [152, 1, 1, "", "MultiClassBaseNode"], [153, 1, 1, "", "Node"], [154, 1, 1, "", "RLAltRewardBaseNode"]], "seldonian.parse_tree.nodes.BaseNode": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "__repr__"], [146, 2, 1, "", "calculate_bounds"], [146, 2, 1, "", "calculate_data_forbound"], [146, 2, 1, "", "calculate_value"], [146, 2, 1, "", "compute_HC_lowerbound"], [146, 2, 1, "", "compute_HC_upper_and_lowerbound"], [146, 2, 1, "", "compute_HC_upperbound"], [146, 2, 1, "", "mask_data"], [146, 2, 1, "", "predict_HC_lowerbound"], [146, 2, 1, "", "predict_HC_upper_and_lowerbound"], [146, 2, 1, "", "predict_HC_upperbound"], [146, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.CVaRSQeBaseNode": [[147, 2, 1, "", "__init__"], [147, 2, 1, "", "__repr__"], [147, 2, 1, "", "calculate_bounds"], [147, 2, 1, "", "calculate_data_forbound"], [147, 2, 1, "", "calculate_value"], [147, 2, 1, "", "compute_HC_lowerbound"], [147, 2, 1, "", "compute_HC_upper_and_lowerbound"], [147, 2, 1, "", "compute_HC_upperbound"], [147, 2, 1, "", "mask_data"], [147, 2, 1, "", "predict_HC_lowerbound"], [147, 2, 1, "", "predict_HC_upper_and_lowerbound"], [147, 2, 1, "", "predict_HC_upperbound"], [147, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "__repr__"], [148, 2, 1, "", "calculate_bounds"], [148, 2, 1, "", "calculate_data_forbound"], [148, 2, 1, "", "calculate_value"], [148, 2, 1, "", "compute_HC_lowerbound"], [148, 2, 1, "", "compute_HC_upper_and_lowerbound"], [148, 2, 1, "", "compute_HC_upperbound"], [148, 2, 1, "", "mask_data"], [148, 2, 1, "", "predict_HC_lowerbound"], [148, 2, 1, "", "predict_HC_upper_and_lowerbound"], [148, 2, 1, "", "predict_HC_upperbound"], [148, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.ConstantNode": [[149, 2, 1, "", "__init__"], [149, 2, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.InternalNode": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.MEDCustomBaseNode": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "__repr__"], [151, 2, 1, "", "calculate_bounds"], [151, 2, 1, "", "calculate_data_forbound"], [151, 2, 1, "", "calculate_value"], [151, 2, 1, "", "compute_HC_lowerbound"], [151, 2, 1, "", "compute_HC_upper_and_lowerbound"], [151, 2, 1, "", "compute_HC_upperbound"], [151, 2, 1, "", "mask_data"], [151, 2, 1, "", "precalculate_data"], [151, 2, 1, "", "predict_HC_lowerbound"], [151, 2, 1, "", "predict_HC_upper_and_lowerbound"], [151, 2, 1, "", "predict_HC_upperbound"], [151, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.MultiClassBaseNode": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "__repr__"], [152, 2, 1, "", "calculate_bounds"], [152, 2, 1, "", "calculate_data_forbound"], [152, 2, 1, "", "calculate_value"], [152, 2, 1, "", "compute_HC_lowerbound"], [152, 2, 1, "", "compute_HC_upper_and_lowerbound"], [152, 2, 1, "", "compute_HC_upperbound"], [152, 2, 1, "", "mask_data"], [152, 2, 1, "", "predict_HC_lowerbound"], [152, 2, 1, "", "predict_HC_upper_and_lowerbound"], [152, 2, 1, "", "predict_HC_upperbound"], [152, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.Node": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.RLAltRewardBaseNode": [[154, 2, 1, "", "__init__"], [154, 2, 1, "", "__repr__"], [154, 2, 1, "", "calculate_bounds"], [154, 2, 1, "", "calculate_data_forbound"], [154, 2, 1, "", "calculate_value"], [154, 2, 1, "", "compute_HC_lowerbound"], [154, 2, 1, "", "compute_HC_upper_and_lowerbound"], [154, 2, 1, "", "compute_HC_upperbound"], [154, 2, 1, "", "mask_data"], [154, 2, 1, "", "predict_HC_lowerbound"], [154, 2, 1, "", "predict_HC_upper_and_lowerbound"], [154, 2, 1, "", "predict_HC_upperbound"], [154, 2, 1, "", "zhat"]], "seldonian.parse_tree.operators": [[155, 4, 1, "", "bounds_required_dict"], [155, 4, 1, "", "custom_base_node_dict"], [155, 4, 1, "", "measure_functions_dict"], [155, 4, 1, "", "not_supported_op_mapper"], [155, 4, 1, "", "op_mapper"]], "seldonian.parse_tree.parse_tree": [[157, 1, 1, "", "ParseTree"], [158, 3, 1, "", "make_parse_trees_from_constraints"]], "seldonian.parse_tree.parse_tree.ParseTree": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "__repr__"], [157, 2, 1, "", "_abs"], [157, 2, 1, "", "_add"], [157, 2, 1, "", "_assign_bounds_helper"], [157, 2, 1, "", "_assign_deltas_helper"], [157, 2, 1, "", "_ast2pt_node"], [157, 2, 1, "", "_ast_tree_helper"], [157, 2, 1, "", "_div"], [157, 2, 1, "", "_evaluator_helper"], [157, 2, 1, "", "_exp"], [157, 2, 1, "", "_log"], [157, 2, 1, "", "_max"], [157, 2, 1, "", "_min"], [157, 2, 1, "", "_mult"], [157, 2, 1, "", "_pow"], [157, 2, 1, "", "_preprocess_constraint_str"], [157, 2, 1, "", "_propagate_value"], [157, 2, 1, "", "_propagator_helper"], [157, 2, 1, "", "_protect_nan"], [157, 2, 1, "", "_sub"], [157, 2, 1, "", "assign_bounds_needed"], [157, 2, 1, "", "assign_deltas"], [157, 2, 1, "", "build_tree"], [157, 2, 1, "", "create_from_ast"], [157, 2, 1, "", "evaluate_constraint"], [157, 2, 1, "", "make_viz"], [157, 2, 1, "", "make_viz_helper"], [157, 2, 1, "", "propagate"], [157, 2, 1, "", "propagate_bounds"], [157, 2, 1, "", "reset_base_node_dict"]], "seldonian.safety_test": [[160, 0, 0, "-", "safety_test"]], "seldonian.safety_test.safety_test": [[161, 1, 1, "", "SafetyTest"]], "seldonian.safety_test.safety_test.SafetyTest": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "__repr__"], [161, 2, 1, "", "evaluate_primary_objective"], [161, 2, 1, "", "run"]], "seldonian.seldonian_algorithm": [[163, 1, 1, "", "SeldonianAlgorithm"]], "seldonian.seldonian_algorithm.SeldonianAlgorithm": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "__repr__"], [163, 2, 1, "", "candidate_safety_split"], [163, 2, 1, "", "candidate_selection"], [163, 2, 1, "", "evaluate_primary_objective"], [163, 2, 1, "", "get_cs_result"], [163, 2, 1, "", "get_st_upper_bounds"], [163, 2, 1, "", "run"], [163, 2, 1, "", "run_safety_test"], [163, 2, 1, "", "safety_test"]], "seldonian.spec": [[165, 1, 1, "", "RLSpec"], [166, 1, 1, "", "Spec"], [167, 1, 1, "", "SupervisedSpec"], [168, 3, 1, "", "createRLSpec"], [169, 3, 1, "", "createSimpleSupervisedSpec"], [170, 3, 1, "", "createSupervisedSpec"], [171, 3, 1, "", "validate_parse_trees"]], "seldonian.spec.RLSpec": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "__repr__"]], "seldonian.spec.Spec": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "__repr__"]], "seldonian.spec.SupervisedSpec": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "__repr__"]], "seldonian.utils": [[173, 0, 0, "-", "RL_utils"], [177, 0, 0, "-", "io_utils"], [183, 0, 0, "-", "plot_utils"], [185, 0, 0, "-", "stats_utils"], [191, 0, 0, "-", "tutorial_utils"]], "seldonian.utils.RL_utils": [[174, 3, 1, "", "argmax_multi"], [175, 3, 1, "", "clamp"], [176, 3, 1, "", "error"]], "seldonian.utils.io_utils": [[178, 3, 1, "", "dir_path"], [179, 3, 1, "", "load_json"], [180, 3, 1, "", "load_pickle"], [181, 3, 1, "", "save_json"], [182, 3, 1, "", "save_pickle"]], "seldonian.utils.plot_utils": [[184, 3, 1, "", "plot_gradient_descent"]], "seldonian.utils.stats_utils": [[186, 3, 1, "", "custom_cumprod"], [187, 3, 1, "", "softmax"], [188, 3, 1, "", "stddev"], [189, 3, 1, "", "tinv"], [190, 3, 1, "", "weighted_sum_gamma"]], "seldonian.utils.tutorial_utils": [[192, 3, 1, "", "generate_clipped_data"], [193, 3, 1, "", "generate_data"], [194, 3, 1, "", "make_synthetic_regression_dataset"]], "seldonian.warnings": [[196, 0, 0, "-", "custom_warnings"]], "seldonian.warnings.custom_warnings": [[197, 3, 1, "", "custom_formatwarning"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"seldonian": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200], "rl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "agent": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "base": [5, 6, 7], "fourier": [6, 7], "discrete_random_ag": [8, 9], "function_approxim": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "linear_fa": [13, 14, 15], "linear_state_action_value_fa": 15, "tabl": [16, 17, 18, 19, 200], "q_tabl": 17, "construct_q_table_from_env_descript": 19, "parameterized_non_learning_softmax_ag": [20, 21], "polici": [22, 23, 24, 25, 26, 27, 28, 29], "discrete_action_polici": 24, "softmax": [26, 27, 28, 29, 187], "discretesoftmax": 27, "mixedsoftmax": 28, "keyboard_gridworld": [30, 31], "mountain_car_rough_solut": [32, 33], "env_descript": [34, 35, 36, 37, 38, 39, 40], "check_space_typ": 37, "space": [38, 39, 40], "continuous_spac": 39, "discrete_spac": 40, "rl_generate_dataset_and_spec_fil": [41, 42, 43, 44, 45, 46], "get_constraint_str": 42, "get_env_kwarg": 43, "get_metadata_path": 44, "main": [45, 68, 70, 73], "print_return_info": 46, "rl_model": [47, 48], "rl_runner": [49, 50, 51, 52, 53, 54, 55], "create_ag": 50, "run_all_tri": 51, "run_episod": 52, "run_episode_from_dict": 53, "run_trial": 54, "run_trial_given_agent_and_env": 55, "environ": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "gridworld": [59, 60], "mountaincar": [61, 62], "n_step_mountaincar": [63, 64], "simglucose_env": [65, 66], "simglucos": 66, "generate_gridworld_episod": [67, 68], "generate_mountaincar_episod": [69, 70], "generate_simglucose_episod": [71, 72, 73], "get_max_ob": 72, "hyperparams_and_set": [74, 75], "define_hyperparameter_and_setting_dict": 75, "candidate_select": [76, 77, 78], "candidateselect": 78, "dataset": [79, 80, 81, 82, 83, 84, 85, 201], "datasetload": 81, "episod": 82, "rldataset": 83, "superviseddataset": 84, "load_supervised_metadata": 85, "hyperparam_search": [86, 87], "hyperparamsearch": 87, "model": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 201], "baselogisticregressionmodel": 90, "binarylogisticregressionmodel": 91, "boundedlinearregressionmodel": 92, "classificationmodel": 93, "dummyclassifiermodel": 94, "linearregressionmodel": 95, "linearregressionmodellistfeatur": 96, "multiclasslogisticregressionmodel": 97, "randomclassifiermodel": 98, "regressionmodel": 99, "seldonianmodel": 100, "supervisedmodel": 101, "object": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 201], "accuraci": 103, "false_negative_r": 104, "false_positive_r": 105, "is_estim": 106, "mean_error": 107, "mean_squared_error": 108, "negative_r": 109, "pdis_estim": 110, "positive_r": 111, "true_negative_r": 112, "true_positive_r": 113, "batcher": 114, "binary_logistic_loss": 115, "confusion_matrix": 116, "evaluate_statist": 117, "gradient_bounded_squared_error": 118, "gradient_mean_squared_error": 119, "gradient_binary_logistic_loss": 120, "multiclass_logistic_loss": 121, "sample_from_statist": 122, "vector_accuraci": 123, "vector_error": 124, "vector_false_negative_r": 125, "vector_false_positive_r": 126, "vector_is_estim": 127, "vector_negative_r": 128, "vector_pdis_estim": 129, "vector_positive_r": 130, "vector_squared_error": 131, "vector_true_negative_r": 132, "vector_true_positive_r": 133, "vector_confusion_matrix": 134, "sklearn_lr": [135, 136], "sklearnlinearregressor": 136, "sklearn_model": [137, 138, 139], "supervisedsklearnbasemodel": 138, "sklearn_predict_vjp": 139, "optim": [140, 141, 142, 143], "gradient_desc": [141, 142, 143], "gradient_descent_adam": 142, "setup_gradi": 143, "parse_tre": [144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "node": [145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "basenod": 146, "cvarsqebasenod": 147, "confusionmatrixbasenod": 148, "constantnod": 149, "internalnod": 150, "medcustombasenod": 151, "multiclassbasenod": 152, "rlaltrewardbasenod": 154, "oper": 155, "parsetre": 157, "make_parse_trees_from_constraint": 158, "safety_test": [159, 160, 161], "safetytest": 161, "seldonian_algorithm": [162, 163], "seldonianalgorithm": 163, "spec": [164, 165, 166, 167, 168, 169, 170, 171, 201], "rlspec": 165, "supervisedspec": 167, "createrlspec": 168, "createsimplesupervisedspec": 169, "createsupervisedspec": 170, "validate_parse_tre": 171, "util": [172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194], "rl_util": [173, 174, 175, 176], "argmax_multi": 174, "clamp": 175, "error": 176, "io_util": [177, 178, 179, 180, 181, 182], "dir_path": 178, "load_json": 179, "load_pickl": 180, "save_json": 181, "save_pickl": 182, "plot_util": [183, 184], "plot_gradient_desc": 184, "stats_util": [185, 186, 187, 188, 189, 190], "custom_cumprod": 186, "stddev": 188, "tinv": 189, "weighted_sum_gamma": 190, "tutorial_util": [191, 192, 193, 194], "generate_clipped_data": 192, "generate_data": 193, "make_synthetic_regression_dataset": 194, "warn": [195, 196, 197], "custom_warn": [196, 197], "custom_formatwarn": 197, "api": 198, "get": 199, "start": 199, "instal": 199, "A": 199, "first": 199, "tutori": 199, "engin": 200, "document": 200, "content": 200, "overview": 201, "interfac": 201, "behavior": 201, "constraint": 201, "string": 201, "what": 201, "doe": 201, "sa": 201, "run": 201, "do": 201, "candid": 201, "select": 201, "safeti": 201, "test": 201}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"seldonian": [[0, "module-seldonian"]], "seldonian.RL": [[1, "module-seldonian.RL"]], "seldonian.RL.Agents": [[2, "module-seldonian.RL.Agents"]], "seldonian.RL.Agents.Agent": [[3, "module-seldonian.RL.Agents.Agent"]], "seldonian.RL.Agents.Agent.Agent": [[4, "seldonian-rl-agents-agent-agent"]], "seldonian.RL.Agents.Bases": [[5, "module-seldonian.RL.Agents.Bases"]], "seldonian.RL.Agents.Bases.Fourier": [[6, "module-seldonian.RL.Agents.Bases.Fourier"]], "seldonian.RL.Agents.Bases.Fourier.Fourier": [[7, "seldonian-rl-agents-bases-fourier-fourier"]], "seldonian.RL.Agents.Discrete_Random_Agent": [[8, "module-seldonian.RL.Agents.Discrete_Random_Agent"]], "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent": [[9, "seldonian-rl-agents-discrete-random-agent-discrete-random-agent"]], "seldonian.RL.Agents.Function_Approximators": [[10, "module-seldonian.RL.Agents.Function_Approximators"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator": [[11, "module-seldonian.RL.Agents.Function_Approximators.Function_Approximator"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator": [[12, "seldonian-rl-agents-function-approximators-function-approximator-function-approximator"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA": [[13, "module-seldonian.RL.Agents.Function_Approximators.Linear_FA"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA": [[14, "seldonian-rl-agents-function-approximators-linear-fa-linear-fa"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA": [[15, "seldonian-rl-agents-function-approximators-linear-fa-linear-state-action-value-fa"]], "seldonian.RL.Agents.Function_Approximators.Table": [[16, "module-seldonian.RL.Agents.Function_Approximators.Table"]], "seldonian.RL.Agents.Function_Approximators.Table.Q_Table": [[17, "seldonian-rl-agents-function-approximators-table-q-table"]], "seldonian.RL.Agents.Function_Approximators.Table.Table": [[18, "seldonian-rl-agents-function-approximators-table-table"]], "seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description": [[19, "seldonian-rl-agents-function-approximators-table-construct-q-table-from-env-description"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent": [[20, "module-seldonian.RL.Agents.Parameterized_non_learning_softmax_agent"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent": [[21, "seldonian-rl-agents-parameterized-non-learning-softmax-agent-parameterized-non-learning-softmax-agent"]], "seldonian.RL.Agents.Policies": [[22, "module-seldonian.RL.Agents.Policies"]], "seldonian.RL.Agents.Policies.Policy": [[23, "module-seldonian.RL.Agents.Policies.Policy"]], "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy": [[24, "seldonian-rl-agents-policies-policy-discrete-action-policy"]], "seldonian.RL.Agents.Policies.Policy.Policy": [[25, "seldonian-rl-agents-policies-policy-policy"]], "seldonian.RL.Agents.Policies.Softmax": [[26, "module-seldonian.RL.Agents.Policies.Softmax"]], "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax": [[27, "seldonian-rl-agents-policies-softmax-discretesoftmax"]], "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax": [[28, "seldonian-rl-agents-policies-softmax-mixedsoftmax"]], "seldonian.RL.Agents.Policies.Softmax.Softmax": [[29, "seldonian-rl-agents-policies-softmax-softmax"]], "seldonian.RL.Agents.keyboard_gridworld": [[30, "module-seldonian.RL.Agents.keyboard_gridworld"]], "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld": [[31, "seldonian-rl-agents-keyboard-gridworld-keyboard-gridworld"]], "seldonian.RL.Agents.mountain_car_rough_solution": [[32, "module-seldonian.RL.Agents.mountain_car_rough_solution"]], "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution": [[33, "seldonian-rl-agents-mountain-car-rough-solution-mountain-car-rough-solution"]], "seldonian.RL.Env_Description": [[34, "module-seldonian.RL.Env_Description"]], "seldonian.RL.Env_Description.Env_Description": [[35, "module-seldonian.RL.Env_Description.Env_Description"]], "seldonian.RL.Env_Description.Env_Description.Env_Description": [[36, "seldonian-rl-env-description-env-description-env-description"]], "seldonian.RL.Env_Description.Env_Description.check_space_type": [[37, "seldonian-rl-env-description-env-description-check-space-type"]], "seldonian.RL.Env_Description.Spaces": [[38, "module-seldonian.RL.Env_Description.Spaces"]], "seldonian.RL.Env_Description.Spaces.Continuous_Space": [[39, "seldonian-rl-env-description-spaces-continuous-space"]], "seldonian.RL.Env_Description.Spaces.Discrete_Space": [[40, "seldonian-rl-env-description-spaces-discrete-space"]], "seldonian.RL.RL_generate_dataset_and_spec_file": [[41, "module-seldonian.RL.RL_generate_dataset_and_spec_file"]], "seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string": [[42, "seldonian-rl-rl-generate-dataset-and-spec-file-get-constraint-string"]], "seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs": [[43, "seldonian-rl-rl-generate-dataset-and-spec-file-get-env-kwargs"]], "seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path": [[44, "seldonian-rl-rl-generate-dataset-and-spec-file-get-metadata-path"]], "seldonian.RL.RL_generate_dataset_and_spec_file.main": [[45, "seldonian-rl-rl-generate-dataset-and-spec-file-main"]], "seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info": [[46, "seldonian-rl-rl-generate-dataset-and-spec-file-print-return-info"]], "seldonian.RL.RL_model": [[47, "module-seldonian.RL.RL_model"]], "seldonian.RL.RL_model.RL_model": [[48, "seldonian-rl-rl-model-rl-model"]], "seldonian.RL.RL_runner": [[49, "module-seldonian.RL.RL_runner"]], "seldonian.RL.RL_runner.create_agent": [[50, "seldonian-rl-rl-runner-create-agent"]], "seldonian.RL.RL_runner.run_all_trials": [[51, "seldonian-rl-rl-runner-run-all-trials"]], "seldonian.RL.RL_runner.run_episode": [[52, "seldonian-rl-rl-runner-run-episode"]], "seldonian.RL.RL_runner.run_episode_from_dict": [[53, "seldonian-rl-rl-runner-run-episode-from-dict"]], "seldonian.RL.RL_runner.run_trial": [[54, "seldonian-rl-rl-runner-run-trial"]], "seldonian.RL.RL_runner.run_trial_given_agent_and_env": [[55, "seldonian-rl-rl-runner-run-trial-given-agent-and-env"]], "seldonian.RL.environments": [[56, "module-seldonian.RL.environments"]], "seldonian.RL.environments.Environment": [[57, "module-seldonian.RL.environments.Environment"]], "seldonian.RL.environments.Environment.Environment": [[58, "seldonian-rl-environments-environment-environment"]], "seldonian.RL.environments.gridworld": [[59, "module-seldonian.RL.environments.gridworld"]], "seldonian.RL.environments.gridworld.Gridworld": [[60, "seldonian-rl-environments-gridworld-gridworld"]], "seldonian.RL.environments.mountaincar": [[61, "module-seldonian.RL.environments.mountaincar"]], "seldonian.RL.environments.mountaincar.Mountaincar": [[62, "seldonian-rl-environments-mountaincar-mountaincar"]], "seldonian.RL.environments.n_step_mountaincar": [[63, "module-seldonian.RL.environments.n_step_mountaincar"]], "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar": [[64, "seldonian-rl-environments-n-step-mountaincar-n-step-mountaincar"]], "seldonian.RL.environments.simglucose_env": [[65, "module-seldonian.RL.environments.simglucose_env"]], "seldonian.RL.environments.simglucose_env.Simglucose": [[66, "seldonian-rl-environments-simglucose-env-simglucose"]], "seldonian.RL.generate_gridworld_episodes": [[67, "module-seldonian.RL.generate_gridworld_episodes"]], "seldonian.RL.generate_gridworld_episodes.main": [[68, "seldonian-rl-generate-gridworld-episodes-main"]], "seldonian.RL.generate_mountaincar_episodes": [[69, "module-seldonian.RL.generate_mountaincar_episodes"]], "seldonian.RL.generate_mountaincar_episodes.main": [[70, "seldonian-rl-generate-mountaincar-episodes-main"]], "seldonian.RL.generate_simglucose_episodes": [[71, "module-seldonian.RL.generate_simglucose_episodes"]], "seldonian.RL.generate_simglucose_episodes.get_max_obs": [[72, "seldonian-rl-generate-simglucose-episodes-get-max-obs"]], "seldonian.RL.generate_simglucose_episodes.main": [[73, "seldonian-rl-generate-simglucose-episodes-main"]], "seldonian.RL.hyperparams_and_settings": [[74, "module-seldonian.RL.hyperparams_and_settings"]], "seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict": [[75, "seldonian-rl-hyperparams-and-settings-define-hyperparameter-and-setting-dict"]], "seldonian.candidate_selection": [[76, "module-seldonian.candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[77, "module-seldonian.candidate_selection.candidate_selection"]], "seldonian.candidate_selection.candidate_selection.CandidateSelection": [[78, "seldonian-candidate-selection-candidate-selection-candidateselection"]], "seldonian.dataset": [[79, "module-seldonian.dataset"]], "seldonian.dataset.DataSet": [[80, "seldonian-dataset-dataset"]], "seldonian.dataset.DataSetLoader": [[81, "seldonian-dataset-datasetloader"]], "seldonian.dataset.Episode": [[82, "seldonian-dataset-episode"]], "seldonian.dataset.RLDataSet": [[83, "seldonian-dataset-rldataset"]], "seldonian.dataset.SupervisedDataSet": [[84, "seldonian-dataset-superviseddataset"]], "seldonian.dataset.load_supervised_metadata": [[85, "seldonian-dataset-load-supervised-metadata"]], "seldonian.hyperparam_search": [[86, "module-seldonian.hyperparam_search"]], "seldonian.hyperparam_search.HyperparamSearch": [[87, "seldonian-hyperparam-search-hyperparamsearch"]], "seldonian.models": [[88, "module-seldonian.models"]], "seldonian.models.models": [[89, "module-seldonian.models.models"]], "seldonian.models.models.BaseLogisticRegressionModel": [[90, "seldonian-models-models-baselogisticregressionmodel"]], "seldonian.models.models.BinaryLogisticRegressionModel": [[91, "seldonian-models-models-binarylogisticregressionmodel"]], "seldonian.models.models.BoundedLinearRegressionModel": [[92, "seldonian-models-models-boundedlinearregressionmodel"]], "seldonian.models.models.ClassificationModel": [[93, "seldonian-models-models-classificationmodel"]], "seldonian.models.models.DummyClassifierModel": [[94, "seldonian-models-models-dummyclassifiermodel"]], "seldonian.models.models.LinearRegressionModel": [[95, "seldonian-models-models-linearregressionmodel"]], "seldonian.models.models.LinearRegressionModelListFeatures": [[96, "seldonian-models-models-linearregressionmodellistfeatures"]], "seldonian.models.models.MultiClassLogisticRegressionModel": [[97, "seldonian-models-models-multiclasslogisticregressionmodel"]], "seldonian.models.models.RandomClassifierModel": [[98, "seldonian-models-models-randomclassifiermodel"]], "seldonian.models.models.RegressionModel": [[99, "seldonian-models-models-regressionmodel"]], "seldonian.models.models.SeldonianModel": [[100, "seldonian-models-models-seldonianmodel"]], "seldonian.models.models.SupervisedModel": [[101, "seldonian-models-models-supervisedmodel"]], "seldonian.models.objectives": [[102, "module-seldonian.models.objectives"]], "seldonian.models.objectives.Accuracy": [[103, "seldonian-models-objectives-accuracy"]], "seldonian.models.objectives.False_Negative_Rate": [[104, "seldonian-models-objectives-false-negative-rate"]], "seldonian.models.objectives.False_Positive_Rate": [[105, "seldonian-models-objectives-false-positive-rate"]], "seldonian.models.objectives.IS_estimate": [[106, "seldonian-models-objectives-is-estimate"]], "seldonian.models.objectives.Mean_Error": [[107, "seldonian-models-objectives-mean-error"]], "seldonian.models.objectives.Mean_Squared_Error": [[108, "seldonian-models-objectives-mean-squared-error"]], "seldonian.models.objectives.Negative_Rate": [[109, "seldonian-models-objectives-negative-rate"]], "seldonian.models.objectives.PDIS_estimate": [[110, "seldonian-models-objectives-pdis-estimate"]], "seldonian.models.objectives.Positive_Rate": [[111, "seldonian-models-objectives-positive-rate"]], "seldonian.models.objectives.True_Negative_Rate": [[112, "seldonian-models-objectives-true-negative-rate"]], "seldonian.models.objectives.True_Positive_Rate": [[113, "seldonian-models-objectives-true-positive-rate"]], "seldonian.models.objectives.batcher": [[114, "seldonian-models-objectives-batcher"]], "seldonian.models.objectives.binary_logistic_loss": [[115, "seldonian-models-objectives-binary-logistic-loss"]], "seldonian.models.objectives.confusion_matrix": [[116, "seldonian-models-objectives-confusion-matrix"]], "seldonian.models.objectives.evaluate_statistic": [[117, "seldonian-models-objectives-evaluate-statistic"]], "seldonian.models.objectives.gradient_Bounded_Squared_Error": [[118, "seldonian-models-objectives-gradient-bounded-squared-error"]], "seldonian.models.objectives.gradient_Mean_Squared_Error": [[119, "seldonian-models-objectives-gradient-mean-squared-error"]], "seldonian.models.objectives.gradient_binary_logistic_loss": [[120, "seldonian-models-objectives-gradient-binary-logistic-loss"]], "seldonian.models.objectives.multiclass_logistic_loss": [[121, "seldonian-models-objectives-multiclass-logistic-loss"]], "seldonian.models.objectives.sample_from_statistic": [[122, "seldonian-models-objectives-sample-from-statistic"]], "seldonian.models.objectives.vector_Accuracy": [[123, "seldonian-models-objectives-vector-accuracy"]], "seldonian.models.objectives.vector_Error": [[124, "seldonian-models-objectives-vector-error"]], "seldonian.models.objectives.vector_False_Negative_Rate": [[125, "seldonian-models-objectives-vector-false-negative-rate"]], "seldonian.models.objectives.vector_False_Positive_Rate": [[126, "seldonian-models-objectives-vector-false-positive-rate"]], "seldonian.models.objectives.vector_IS_estimate": [[127, "seldonian-models-objectives-vector-is-estimate"]], "seldonian.models.objectives.vector_Negative_Rate": [[128, "seldonian-models-objectives-vector-negative-rate"]], "seldonian.models.objectives.vector_PDIS_estimate": [[129, "seldonian-models-objectives-vector-pdis-estimate"]], "seldonian.models.objectives.vector_Positive_Rate": [[130, "seldonian-models-objectives-vector-positive-rate"]], "seldonian.models.objectives.vector_Squared_Error": [[131, "seldonian-models-objectives-vector-squared-error"]], "seldonian.models.objectives.vector_True_Negative_Rate": [[132, "seldonian-models-objectives-vector-true-negative-rate"]], "seldonian.models.objectives.vector_True_Positive_Rate": [[133, "seldonian-models-objectives-vector-true-positive-rate"]], "seldonian.models.objectives.vector_confusion_matrix": [[134, "seldonian-models-objectives-vector-confusion-matrix"]], "seldonian.models.sklearn_lr": [[135, "module-seldonian.models.sklearn_lr"]], "seldonian.models.sklearn_lr.SkLearnLinearRegressor": [[136, "seldonian-models-sklearn-lr-sklearnlinearregressor"]], "seldonian.models.sklearn_model": [[137, "module-seldonian.models.sklearn_model"]], "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel": [[138, "seldonian-models-sklearn-model-supervisedsklearnbasemodel"]], "seldonian.models.sklearn_model.sklearn_predict_vjp": [[139, "seldonian-models-sklearn-model-sklearn-predict-vjp"]], "seldonian.optimizers": [[140, "module-seldonian.optimizers"]], "seldonian.optimizers.gradient_descent": [[141, "module-seldonian.optimizers.gradient_descent"]], "seldonian.optimizers.gradient_descent.gradient_descent_adam": [[142, "seldonian-optimizers-gradient-descent-gradient-descent-adam"]], "seldonian.optimizers.gradient_descent.setup_gradients": [[143, "seldonian-optimizers-gradient-descent-setup-gradients"]], "seldonian.parse_tree": [[144, "module-seldonian.parse_tree"]], "seldonian.parse_tree.nodes": [[145, "module-seldonian.parse_tree.nodes"]], "seldonian.parse_tree.nodes.BaseNode": [[146, "seldonian-parse-tree-nodes-basenode"]], "seldonian.parse_tree.nodes.CVaRSQeBaseNode": [[147, "seldonian-parse-tree-nodes-cvarsqebasenode"]], "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode": [[148, "seldonian-parse-tree-nodes-confusionmatrixbasenode"]], "seldonian.parse_tree.nodes.ConstantNode": [[149, "seldonian-parse-tree-nodes-constantnode"]], "seldonian.parse_tree.nodes.InternalNode": [[150, "seldonian-parse-tree-nodes-internalnode"]], "seldonian.parse_tree.nodes.MEDCustomBaseNode": [[151, "seldonian-parse-tree-nodes-medcustombasenode"]], "seldonian.parse_tree.nodes.MultiClassBaseNode": [[152, "seldonian-parse-tree-nodes-multiclassbasenode"]], "seldonian.parse_tree.nodes.Node": [[153, "seldonian-parse-tree-nodes-node"]], "seldonian.parse_tree.nodes.RLAltRewardBaseNode": [[154, "seldonian-parse-tree-nodes-rlaltrewardbasenode"]], "seldonian.parse_tree.operators": [[155, "module-seldonian.parse_tree.operators"]], "seldonian.parse_tree.parse_tree": [[156, "module-seldonian.parse_tree.parse_tree"]], "seldonian.parse_tree.parse_tree.ParseTree": [[157, "seldonian-parse-tree-parse-tree-parsetree"]], "seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints": [[158, "seldonian-parse-tree-parse-tree-make-parse-trees-from-constraints"]], "seldonian.safety_test": [[159, "module-seldonian.safety_test"]], "seldonian.safety_test.safety_test": [[160, "module-seldonian.safety_test.safety_test"]], "seldonian.safety_test.safety_test.SafetyTest": [[161, "seldonian-safety-test-safety-test-safetytest"]], "seldonian.seldonian_algorithm": [[162, "module-seldonian.seldonian_algorithm"]], "seldonian.seldonian_algorithm.SeldonianAlgorithm": [[163, "seldonian-seldonian-algorithm-seldonianalgorithm"]], "seldonian.spec": [[164, "module-seldonian.spec"]], "seldonian.spec.RLSpec": [[165, "seldonian-spec-rlspec"]], "seldonian.spec.Spec": [[166, "seldonian-spec-spec"]], "seldonian.spec.SupervisedSpec": [[167, "seldonian-spec-supervisedspec"]], "seldonian.spec.createRLSpec": [[168, "seldonian-spec-createrlspec"]], "seldonian.spec.createSimpleSupervisedSpec": [[169, "seldonian-spec-createsimplesupervisedspec"]], "seldonian.spec.createSupervisedSpec": [[170, "seldonian-spec-createsupervisedspec"]], "seldonian.spec.validate_parse_trees": [[171, "seldonian-spec-validate-parse-trees"]], "seldonian.utils": [[172, "module-seldonian.utils"]], "seldonian.utils.RL_utils": [[173, "module-seldonian.utils.RL_utils"]], "seldonian.utils.RL_utils.argmax_multi": [[174, "seldonian-utils-rl-utils-argmax-multi"]], "seldonian.utils.RL_utils.clamp": [[175, "seldonian-utils-rl-utils-clamp"]], "seldonian.utils.RL_utils.error": [[176, "seldonian-utils-rl-utils-error"]], "seldonian.utils.io_utils": [[177, "module-seldonian.utils.io_utils"]], "seldonian.utils.io_utils.dir_path": [[178, "seldonian-utils-io-utils-dir-path"]], "seldonian.utils.io_utils.load_json": [[179, "seldonian-utils-io-utils-load-json"]], "seldonian.utils.io_utils.load_pickle": [[180, "seldonian-utils-io-utils-load-pickle"]], "seldonian.utils.io_utils.save_json": [[181, "seldonian-utils-io-utils-save-json"]], "seldonian.utils.io_utils.save_pickle": [[182, "seldonian-utils-io-utils-save-pickle"]], "seldonian.utils.plot_utils": [[183, "module-seldonian.utils.plot_utils"]], "seldonian.utils.plot_utils.plot_gradient_descent": [[184, "seldonian-utils-plot-utils-plot-gradient-descent"]], "seldonian.utils.stats_utils": [[185, "module-seldonian.utils.stats_utils"]], "seldonian.utils.stats_utils.custom_cumprod": [[186, "seldonian-utils-stats-utils-custom-cumprod"]], "seldonian.utils.stats_utils.softmax": [[187, "seldonian-utils-stats-utils-softmax"]], "seldonian.utils.stats_utils.stddev": [[188, "seldonian-utils-stats-utils-stddev"]], "seldonian.utils.stats_utils.tinv": [[189, "seldonian-utils-stats-utils-tinv"]], "seldonian.utils.stats_utils.weighted_sum_gamma": [[190, "seldonian-utils-stats-utils-weighted-sum-gamma"]], "seldonian.utils.tutorial_utils": [[191, "module-seldonian.utils.tutorial_utils"]], "seldonian.utils.tutorial_utils.generate_clipped_data": [[192, "seldonian-utils-tutorial-utils-generate-clipped-data"]], "seldonian.utils.tutorial_utils.generate_data": [[193, "seldonian-utils-tutorial-utils-generate-data"]], "seldonian.utils.tutorial_utils.make_synthetic_regression_dataset": [[194, "seldonian-utils-tutorial-utils-make-synthetic-regression-dataset"]], "seldonian.warnings": [[195, "module-seldonian.warnings"]], "seldonian.warnings.custom_warnings": [[196, "module-seldonian.warnings.custom_warnings"]], "seldonian.warnings.custom_warnings.custom_formatwarning": [[197, "seldonian-warnings-custom-warnings-custom-formatwarning"]], "API": [[198, "api"]], "Getting Started": [[199, "getting-started"]], "Installation": [[199, "installation"]], "A first tutorial": [[199, "a-first-tutorial"]], "Seldonian Engine documentation": [[200, "seldonian-engine-documentation"]], "Table of contents": [[200, "table-of-contents"]], "Overview": [[201, "overview"]], "Interface": [[201, "interface"]], "Spec object": [[201, "spec-object"]], "Dataset object": [[201, "dataset-object"]], "Model object": [[201, "model-object"]], "Behavioral constraints": [[201, "behavioral-constraints"]], "Constraint strings": [[201, "constraint-strings"]], "What does SA.run() do?": [[201, "what-does-sa-run-do"]], "Candidate Selection": [[201, "candidate-selection"]], "Safety Test": [[201, "safety-test"]]}, "indexentries": {"module": [[0, "module-seldonian"], [1, "module-seldonian.RL"], [2, "module-seldonian.RL.Agents"], [3, "module-seldonian.RL.Agents.Agent"], [5, "module-seldonian.RL.Agents.Bases"], [6, "module-seldonian.RL.Agents.Bases.Fourier"], [8, "module-seldonian.RL.Agents.Discrete_Random_Agent"], [10, "module-seldonian.RL.Agents.Function_Approximators"], [11, "module-seldonian.RL.Agents.Function_Approximators.Function_Approximator"], [13, "module-seldonian.RL.Agents.Function_Approximators.Linear_FA"], [16, "module-seldonian.RL.Agents.Function_Approximators.Table"], [20, "module-seldonian.RL.Agents.Parameterized_non_learning_softmax_agent"], [22, "module-seldonian.RL.Agents.Policies"], [23, "module-seldonian.RL.Agents.Policies.Policy"], [26, "module-seldonian.RL.Agents.Policies.Softmax"], [30, "module-seldonian.RL.Agents.keyboard_gridworld"], [32, "module-seldonian.RL.Agents.mountain_car_rough_solution"], [34, "module-seldonian.RL.Env_Description"], [35, "module-seldonian.RL.Env_Description.Env_Description"], [38, "module-seldonian.RL.Env_Description.Spaces"], [41, "module-seldonian.RL.RL_generate_dataset_and_spec_file"], [47, "module-seldonian.RL.RL_model"], [49, "module-seldonian.RL.RL_runner"], [56, "module-seldonian.RL.environments"], [57, "module-seldonian.RL.environments.Environment"], [59, "module-seldonian.RL.environments.gridworld"], [61, "module-seldonian.RL.environments.mountaincar"], [63, "module-seldonian.RL.environments.n_step_mountaincar"], [65, "module-seldonian.RL.environments.simglucose_env"], [67, "module-seldonian.RL.generate_gridworld_episodes"], [69, "module-seldonian.RL.generate_mountaincar_episodes"], [71, "module-seldonian.RL.generate_simglucose_episodes"], [74, "module-seldonian.RL.hyperparams_and_settings"], [76, "module-seldonian.candidate_selection"], [77, "module-seldonian.candidate_selection.candidate_selection"], [79, "module-seldonian.dataset"], [86, "module-seldonian.hyperparam_search"], [88, "module-seldonian.models"], [89, "module-seldonian.models.models"], [102, "module-seldonian.models.objectives"], [135, "module-seldonian.models.sklearn_lr"], [137, "module-seldonian.models.sklearn_model"], [140, "module-seldonian.optimizers"], [141, "module-seldonian.optimizers.gradient_descent"], [144, "module-seldonian.parse_tree"], [145, "module-seldonian.parse_tree.nodes"], [155, "module-seldonian.parse_tree.operators"], [156, "module-seldonian.parse_tree.parse_tree"], [159, "module-seldonian.safety_test"], [160, "module-seldonian.safety_test.safety_test"], [162, "module-seldonian.seldonian_algorithm"], [164, "module-seldonian.spec"], [172, "module-seldonian.utils"], [173, "module-seldonian.utils.RL_utils"], [177, "module-seldonian.utils.io_utils"], [183, "module-seldonian.utils.plot_utils"], [185, "module-seldonian.utils.stats_utils"], [191, "module-seldonian.utils.tutorial_utils"], [195, "module-seldonian.warnings"], [196, "module-seldonian.warnings.custom_warnings"]], "seldonian": [[0, "module-seldonian"]], "seldonian.rl": [[1, "module-seldonian.RL"]], "seldonian.rl.agents": [[2, "module-seldonian.RL.Agents"]], "seldonian.rl.agents.agent": [[3, "module-seldonian.RL.Agents.Agent"]], "agent (class in seldonian.rl.agents.agent)": [[4, "seldonian.RL.Agents.Agent.Agent"]], "__init__() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.__init__"]], "__repr__() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.__repr__"]], "choose_action() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.choose_action"]], "get_params() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.get_params"]], "get_prob_this_action() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.get_prob_this_action"]], "set_new_params() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.set_new_params"]], "update() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.update"]], "seldonian.rl.agents.bases": [[5, "module-seldonian.RL.Agents.Bases"]], "seldonian.rl.agents.bases.fourier": [[6, "module-seldonian.RL.Agents.Bases.Fourier"]], "fourier (class in seldonian.rl.agents.bases.fourier)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier"]], "__init__() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.__init__"]], "__repr__() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.__repr__"]], "calculate_num_features() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.calculate_num_features"]], "construct_basis_matrix() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.construct_basis_matrix"]], "get_features() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.get_features"]], "get_normalized_observation() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.get_normalized_observation"]], "seldonian.rl.agents.discrete_random_agent": [[8, "module-seldonian.RL.Agents.Discrete_Random_Agent"]], "discrete_random_agent (class in seldonian.rl.agents.discrete_random_agent)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent"]], "__init__() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.__init__"]], "__repr__() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.__repr__"]], "choose_action() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.choose_action"]], "get_params() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.get_params"]], "get_prob_this_action() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.get_prob_this_action"]], "set_new_params() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.set_new_params"]], "update() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.update"]], "seldonian.rl.agents.function_approximators": [[10, "module-seldonian.RL.Agents.Function_Approximators"]], "seldonian.rl.agents.function_approximators.function_approximator": [[11, "module-seldonian.RL.Agents.Function_Approximators.Function_Approximator"]], "function_approximator (class in seldonian.rl.agents.function_approximators.function_approximator)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator"]], "__init__() (function_approximator method)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.__init__"]], "__repr__() (function_approximator method)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.__repr__"]], "set_new_params() (function_approximator method)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.set_new_params"]], "seldonian.rl.agents.function_approximators.linear_fa": [[13, "module-seldonian.RL.Agents.Function_Approximators.Linear_FA"]], "linear_fa (class in seldonian.rl.agents.function_approximators.linear_fa)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA"]], "__init__() (linear_fa method)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.__init__"]], "__repr__() (linear_fa method)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.__repr__"]], "set_new_params() (linear_fa method)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.set_new_params"]], "linear_state_action_value_fa (class in seldonian.rl.agents.function_approximators.linear_fa)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA"]], "__init__() (linear_state_action_value_fa method)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.__init__"]], "__repr__() (linear_state_action_value_fa method)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.__repr__"]], "set_new_params() (linear_state_action_value_fa method)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.set_new_params"]], "seldonian.rl.agents.function_approximators.table": [[16, "module-seldonian.RL.Agents.Function_Approximators.Table"]], "q_table (class in seldonian.rl.agents.function_approximators.table)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table"]], "__init__() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.__init__"]], "__repr__() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.__repr__"]], "from_environment_state_to_0_indexed_state() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.from_environment_state_to_0_indexed_state"]], "get_action_values_given_state() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.get_action_values_given_state"]], "get_action_values_given_zero_indexed_state() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.get_action_values_given_zero_indexed_state"]], "set_new_params() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.set_new_params"]], "table (class in seldonian.rl.agents.function_approximators.table)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table"]], "__init__() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.__init__"]], "__repr__() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.__repr__"]], "from_environment_state_to_0_indexed_state() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.from_environment_state_to_0_indexed_state"]], "set_new_params() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.set_new_params"]], "construct_q_table_from_env_description() (in module seldonian.rl.agents.function_approximators.table)": [[19, "seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description"]], "seldonian.rl.agents.parameterized_non_learning_softmax_agent": [[20, "module-seldonian.RL.Agents.Parameterized_non_learning_softmax_agent"]], "parameterized_non_learning_softmax_agent (class in seldonian.rl.agents.parameterized_non_learning_softmax_agent)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent"]], "__init__() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.__init__"]], "__repr__() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.__repr__"]], "choose_action() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.choose_action"]], "get_action_values() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.get_action_values"]], "get_params() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.get_params"]], "get_prob_this_action() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.get_prob_this_action"]], "set_new_params() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.set_new_params"]], "update() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.update"]], "seldonian.rl.agents.policies": [[22, "module-seldonian.RL.Agents.Policies"]], "seldonian.rl.agents.policies.policy": [[23, "module-seldonian.RL.Agents.Policies.Policy"]], "discrete_action_policy (class in seldonian.rl.agents.policies.policy)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy"]], "__init__() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.__init__"]], "__repr__() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.__repr__"]], "choose_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.choose_action"]], "construct_basis_and_linear_fa() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.construct_basis_and_linear_FA"]], "from_0_indexed_action_to_environment_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.from_0_indexed_action_to_environment_action"]], "from_environment_action_to_0_indexed_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.from_environment_action_to_0_indexed_action"]], "get_action_values_given_state() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.get_action_values_given_state"]], "get_params() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.get_params"]], "get_prob_this_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.get_prob_this_action"]], "make_state_action_fa() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.make_state_action_FA"]], "set_new_params() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.set_new_params"]], "policy (class in seldonian.rl.agents.policies.policy)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy"]], "__init__() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.__init__"]], "__repr__() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.__repr__"]], "choose_action() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.choose_action"]], "get_params() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.get_params"]], "get_prob_this_action() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.get_prob_this_action"]], "set_new_params() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.set_new_params"]], "seldonian.rl.agents.policies.softmax": [[26, "module-seldonian.RL.Agents.Policies.Softmax"]], "discretesoftmax (class in seldonian.rl.agents.policies.softmax)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax"]], "__init__() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.__init__"]], "__repr__() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.__repr__"]], "_arg() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax._arg"]], "_denom() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax._denom"]], "choose_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.choose_action"]], "choose_action_from_action_values() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.choose_action_from_action_values"]], "construct_basis_and_linear_fa() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.construct_basis_and_linear_FA"]], "from_0_indexed_action_to_environment_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.from_0_indexed_action_to_environment_action"]], "from_environment_action_to_0_indexed_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.from_environment_action_to_0_indexed_action"]], "get_action_probs_from_action_values() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_action_probs_from_action_values"]], "get_action_values_given_state() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_action_values_given_state"]], "get_e_to_the_something_terms() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_e_to_the_something_terms"]], "get_params() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_params"]], "get_prob_this_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_prob_this_action"]], "make_state_action_fa() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.make_state_action_FA"]], "set_new_params() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.set_new_params"]], "mixedsoftmax (class in seldonian.rl.agents.policies.softmax)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax"]], "__init__() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.__init__"]], "__repr__() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.__repr__"]], "choose_action() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.choose_action"]], "choose_action_from_action_values() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.choose_action_from_action_values"]], "construct_basis_and_linear_fa() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.construct_basis_and_linear_FA"]], "from_0_indexed_action_to_environment_action() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.from_0_indexed_action_to_environment_action"]], "from_environment_action_to_0_indexed_action() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.from_environment_action_to_0_indexed_action"]], "get_action_probs_from_action_values() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.get_action_probs_from_action_values"]], "get_action_values_given_state() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.get_action_values_given_state"]], "get_e_to_the_something_terms() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.get_e_to_the_something_terms"]], "get_params() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.get_params"]], "get_prob_this_action() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.get_prob_this_action"]], "make_state_action_fa() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.make_state_action_FA"]], "set_new_params() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.set_new_params"]], "softmax (class in seldonian.rl.agents.policies.softmax)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax"]], "__init__() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.__init__"]], "__repr__() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.__repr__"]], "choose_action() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.choose_action"]], "choose_action_from_action_values() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.choose_action_from_action_values"]], "construct_basis_and_linear_fa() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.construct_basis_and_linear_FA"]], "from_0_indexed_action_to_environment_action() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.from_0_indexed_action_to_environment_action"]], "from_environment_action_to_0_indexed_action() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.from_environment_action_to_0_indexed_action"]], "get_action_probs_from_action_values() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_action_probs_from_action_values"]], "get_action_values_given_state() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_action_values_given_state"]], "get_e_to_the_something_terms() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_e_to_the_something_terms"]], "get_params() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_params"]], "get_prob_this_action() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_prob_this_action"]], "make_state_action_fa() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.make_state_action_FA"]], "set_new_params() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.set_new_params"]], "seldonian.rl.agents.keyboard_gridworld": [[30, "module-seldonian.RL.Agents.keyboard_gridworld"]], "keyboard_gridworld (class in seldonian.rl.agents.keyboard_gridworld)": [[31, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld"]], "__init__() (keyboard_gridworld method)": [[31, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.__init__"]], "__repr__() (keyboard_gridworld method)": [[31, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.__repr__"]], "choose_action() (keyboard_gridworld method)": [[31, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.choose_action"]], "get_params() (keyboard_gridworld method)": [[31, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.get_params"]], "get_prob_this_action() (keyboard_gridworld method)": [[31, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.get_prob_this_action"]], "set_new_params() (keyboard_gridworld method)": [[31, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.set_new_params"]], "update() (keyboard_gridworld method)": [[31, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.update"]], "seldonian.rl.agents.mountain_car_rough_solution": [[32, "module-seldonian.RL.Agents.mountain_car_rough_solution"]], "mountain_car_rough_solution (class in seldonian.rl.agents.mountain_car_rough_solution)": [[33, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution"]], "__init__() (mountain_car_rough_solution method)": [[33, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.__init__"]], "__repr__() (mountain_car_rough_solution method)": [[33, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.__repr__"]], "choose_action() (mountain_car_rough_solution method)": [[33, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.choose_action"]], "get_params() (mountain_car_rough_solution method)": [[33, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.get_params"]], "get_prob_this_action() (mountain_car_rough_solution method)": [[33, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.get_prob_this_action"]], "set_new_params() (mountain_car_rough_solution method)": [[33, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.set_new_params"]], "update() (mountain_car_rough_solution method)": [[33, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.update"]], "seldonian.rl.env_description": [[34, "module-seldonian.RL.Env_Description"]], "seldonian.rl.env_description.env_description": [[35, "module-seldonian.RL.Env_Description.Env_Description"]], "env_description (class in seldonian.rl.env_description.env_description)": [[36, "seldonian.RL.Env_Description.Env_Description.Env_Description"]], "__init__() (env_description method)": [[36, "seldonian.RL.Env_Description.Env_Description.Env_Description.__init__"]], "__repr__() (env_description method)": [[36, "seldonian.RL.Env_Description.Env_Description.Env_Description.__repr__"]], "get_min_action() (env_description method)": [[36, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_min_action"]], "get_min_state() (env_description method)": [[36, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_min_state"]], "get_num_actions() (env_description method)": [[36, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_num_actions"]], "get_num_observation_dims() (env_description method)": [[36, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_num_observation_dims"]], "get_num_states() (env_description method)": [[36, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_num_states"]], "check_space_type() (in module seldonian.rl.env_description.env_description)": [[37, "seldonian.RL.Env_Description.Env_Description.check_space_type"]], "seldonian.rl.env_description.spaces": [[38, "module-seldonian.RL.Env_Description.Spaces"]], "continuous_space (class in seldonian.rl.env_description.spaces)": [[39, "seldonian.RL.Env_Description.Spaces.Continuous_Space"]], "__init__() (continuous_space method)": [[39, "seldonian.RL.Env_Description.Spaces.Continuous_Space.__init__"]], "__repr__() (continuous_space method)": [[39, "seldonian.RL.Env_Description.Spaces.Continuous_Space.__repr__"]], "check_bounds_valid() (continuous_space method)": [[39, "seldonian.RL.Env_Description.Spaces.Continuous_Space.check_bounds_valid"]], "get_num_dims() (continuous_space method)": [[39, "seldonian.RL.Env_Description.Spaces.Continuous_Space.get_num_dims"]], "discrete_space (class in seldonian.rl.env_description.spaces)": [[40, "seldonian.RL.Env_Description.Spaces.Discrete_Space"]], "__init__() (discrete_space method)": [[40, "seldonian.RL.Env_Description.Spaces.Discrete_Space.__init__"]], "__repr__() (discrete_space method)": [[40, "seldonian.RL.Env_Description.Spaces.Discrete_Space.__repr__"]], "get_num_values() (discrete_space method)": [[40, "seldonian.RL.Env_Description.Spaces.Discrete_Space.get_num_values"]], "seldonian.rl.rl_generate_dataset_and_spec_file": [[41, "module-seldonian.RL.RL_generate_dataset_and_spec_file"]], "get_constraint_string() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[42, "seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string"]], "get_env_kwargs() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[43, "seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs"]], "get_metadata_path() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[44, "seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path"]], "main() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[45, "seldonian.RL.RL_generate_dataset_and_spec_file.main"]], "print_return_info() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[46, "seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info"]], "seldonian.rl.rl_model": [[47, "module-seldonian.RL.RL_model"]], "rl_model (class in seldonian.rl.rl_model)": [[48, "seldonian.RL.RL_model.RL_model"]], "__init__() (rl_model method)": [[48, "seldonian.RL.RL_model.RL_model.__init__"]], "__repr__() (rl_model method)": [[48, "seldonian.RL.RL_model.RL_model.__repr__"]], "get_prob_this_action() (rl_model method)": [[48, "seldonian.RL.RL_model.RL_model.get_prob_this_action"]], "get_probs_from_observations_and_actions() (rl_model method)": [[48, "seldonian.RL.RL_model.RL_model.get_probs_from_observations_and_actions"]], "seldonian.rl.rl_runner": [[49, "module-seldonian.RL.RL_runner"]], "create_agent() (in module seldonian.rl.rl_runner)": [[50, "seldonian.RL.RL_runner.create_agent"]], "run_all_trials() (in module seldonian.rl.rl_runner)": [[51, "seldonian.RL.RL_runner.run_all_trials"]], "run_episode() (in module seldonian.rl.rl_runner)": [[52, "seldonian.RL.RL_runner.run_episode"]], "run_episode_from_dict() (in module seldonian.rl.rl_runner)": [[53, "seldonian.RL.RL_runner.run_episode_from_dict"]], "run_trial() (in module seldonian.rl.rl_runner)": [[54, "seldonian.RL.RL_runner.run_trial"]], "run_trial_given_agent_and_env() (in module seldonian.rl.rl_runner)": [[55, "seldonian.RL.RL_runner.run_trial_given_agent_and_env"]], "seldonian.rl.environments": [[56, "module-seldonian.RL.environments"]], "seldonian.rl.environments.environment": [[57, "module-seldonian.RL.environments.Environment"]], "environment (class in seldonian.rl.environments.environment)": [[58, "seldonian.RL.environments.Environment.Environment"]], "__init__() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.__init__"]], "__repr__() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.__repr__"]], "get_env_description() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.get_env_description"]], "get_observation() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.get_observation"]], "reset() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.reset"]], "start_visualizing() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.start_visualizing"]], "stop_visualizing() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.stop_visualizing"]], "terminated() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.terminated"]], "transition() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.transition"]], "visualize() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.visualize"]], "seldonian.rl.environments.gridworld": [[59, "module-seldonian.RL.environments.gridworld"]], "gridworld (class in seldonian.rl.environments.gridworld)": [[60, "seldonian.RL.environments.gridworld.Gridworld"]], "__init__() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.__init__"]], "__repr__() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.__repr__"]], "create_env_description() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.create_env_description"]], "get_env_description() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.get_env_description"]], "get_observation() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.get_observation"]], "is_in_goal_state() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.is_in_goal_state"]], "reset() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.reset"]], "start_visualizing() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.start_visualizing"]], "stop_visualizing() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.stop_visualizing"]], "terminated() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.terminated"]], "transition() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.transition"]], "update_position() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.update_position"]], "visualize() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.visualize"]], "seldonian.rl.environments.mountaincar": [[61, "module-seldonian.RL.environments.mountaincar"]], "mountaincar (class in seldonian.rl.environments.mountaincar)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar"]], "__init__() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.__init__"]], "__repr__() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.__repr__"]], "get_env_description() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.get_env_description"]], "get_observation() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.get_observation"]], "reset() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.reset"]], "start_visualizing() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.start_visualizing"]], "stop_visualizing() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.stop_visualizing"]], "terminated() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.terminated"]], "transition() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.transition"]], "visualize() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.visualize"]], "seldonian.rl.environments.n_step_mountaincar": [[63, "module-seldonian.RL.environments.n_step_mountaincar"]], "n_step_mountaincar (class in seldonian.rl.environments.n_step_mountaincar)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar"]], "__init__() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.__init__"]], "__repr__() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.__repr__"]], "get_env_description() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.get_env_description"]], "get_observation() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.get_observation"]], "reset() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.reset"]], "start_visualizing() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.start_visualizing"]], "stop_visualizing() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.stop_visualizing"]], "terminated() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.terminated"]], "transition() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.transition"]], "visualize() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.visualize"]], "seldonian.rl.environments.simglucose_env": [[65, "module-seldonian.RL.environments.simglucose_env"]], "simglucose (class in seldonian.rl.environments.simglucose_env)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose"]], "__init__() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.__init__"]], "__repr__() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.__repr__"]], "get_env_description() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.get_env_description"]], "get_observation() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.get_observation"]], "reset() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.reset"]], "start_visualizing() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.start_visualizing"]], "stop_visualizing() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.stop_visualizing"]], "terminated() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.terminated"]], "transition() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.transition"]], "visualize() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.visualize"]], "seldonian.rl.generate_gridworld_episodes": [[67, "module-seldonian.RL.generate_gridworld_episodes"]], "main() (in module seldonian.rl.generate_gridworld_episodes)": [[68, "seldonian.RL.generate_gridworld_episodes.main"]], "seldonian.rl.generate_mountaincar_episodes": [[69, "module-seldonian.RL.generate_mountaincar_episodes"]], "main() (in module seldonian.rl.generate_mountaincar_episodes)": [[70, "seldonian.RL.generate_mountaincar_episodes.main"]], "seldonian.rl.generate_simglucose_episodes": [[71, "module-seldonian.RL.generate_simglucose_episodes"]], "get_max_obs() (in module seldonian.rl.generate_simglucose_episodes)": [[72, "seldonian.RL.generate_simglucose_episodes.get_max_obs"]], "main() (in module seldonian.rl.generate_simglucose_episodes)": [[73, "seldonian.RL.generate_simglucose_episodes.main"]], "seldonian.rl.hyperparams_and_settings": [[74, "module-seldonian.RL.hyperparams_and_settings"]], "define_hyperparameter_and_setting_dict() (in module seldonian.rl.hyperparams_and_settings)": [[75, "seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict"]], "seldonian.candidate_selection": [[76, "module-seldonian.candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[77, "module-seldonian.candidate_selection.candidate_selection"]], "candidateselection (class in seldonian.candidate_selection.candidate_selection)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection"]], "__init__() (candidateselection method)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection.__init__"]], "__repr__() (candidateselection method)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection.__repr__"]], "calculate_batches() (candidateselection method)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection.calculate_batches"]], "evaluate_primary_objective() (candidateselection method)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection.evaluate_primary_objective"]], "get_constraint_upper_bounds() (candidateselection method)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection.get_constraint_upper_bounds"]], "objective_with_barrier() (candidateselection method)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection.objective_with_barrier"]], "run() (candidateselection method)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection.run"]], "seldonian.dataset": [[79, "module-seldonian.dataset"]], "dataset (class in seldonian.dataset)": [[80, "seldonian.dataset.DataSet"]], "__init__() (dataset method)": [[80, "seldonian.dataset.DataSet.__init__"]], "__repr__() (dataset method)": [[80, "seldonian.dataset.DataSet.__repr__"]], "datasetloader (class in seldonian.dataset)": [[81, "seldonian.dataset.DataSetLoader"]], "__init__() (datasetloader method)": [[81, "seldonian.dataset.DataSetLoader.__init__"]], "__repr__() (datasetloader method)": [[81, "seldonian.dataset.DataSetLoader.__repr__"]], "load_rl_dataset_from_csv() (datasetloader method)": [[81, "seldonian.dataset.DataSetLoader.load_RL_dataset_from_csv"]], "load_rl_dataset_from_episode_file() (datasetloader method)": [[81, "seldonian.dataset.DataSetLoader.load_RL_dataset_from_episode_file"]], "load_supervised_dataset() (datasetloader method)": [[81, "seldonian.dataset.DataSetLoader.load_supervised_dataset"]], "episode (class in seldonian.dataset)": [[82, "seldonian.dataset.Episode"]], "__init__() (episode method)": [[82, "seldonian.dataset.Episode.__init__"]], "__repr__() (episode method)": [[82, "seldonian.dataset.Episode.__repr__"]], "rldataset (class in seldonian.dataset)": [[83, "seldonian.dataset.RLDataSet"]], "__init__() (rldataset method)": [[83, "seldonian.dataset.RLDataSet.__init__"]], "__repr__() (rldataset method)": [[83, "seldonian.dataset.RLDataSet.__repr__"]], "superviseddataset (class in seldonian.dataset)": [[84, "seldonian.dataset.SupervisedDataSet"]], "__init__() (superviseddataset method)": [[84, "seldonian.dataset.SupervisedDataSet.__init__"]], "__repr__() (superviseddataset method)": [[84, "seldonian.dataset.SupervisedDataSet.__repr__"]], "load_supervised_metadata() (in module seldonian.dataset)": [[85, "seldonian.dataset.load_supervised_metadata"]], "seldonian.hyperparam_search": [[86, "module-seldonian.hyperparam_search"]], "hyperparamsearch (class in seldonian.hyperparam_search)": [[87, "seldonian.hyperparam_search.HyperparamSearch"]], "__init__() (hyperparamsearch method)": [[87, "seldonian.hyperparam_search.HyperparamSearch.__init__"]], "__repr__() (hyperparamsearch method)": [[87, "seldonian.hyperparam_search.HyperparamSearch.__repr__"]], "bootstrap_sample_dataset() (hyperparamsearch method)": [[87, "seldonian.hyperparam_search.HyperparamSearch.bootstrap_sample_dataset"]], "candidate_selection() (hyperparamsearch method)": [[87, "seldonian.hyperparam_search.HyperparamSearch.candidate_selection"]], "create_dataset() (hyperparamsearch method)": [[87, "seldonian.hyperparam_search.HyperparamSearch.create_dataset"]], "est_prob_pass() (hyperparamsearch method)": [[87, "seldonian.hyperparam_search.HyperparamSearch.est_prob_pass"]], "find_best_hyperparams() (hyperparamsearch method)": [[87, "seldonian.hyperparam_search.HyperparamSearch.find_best_hyperparams"]], "get_initial_solution() (hyperparamsearch method)": [[87, "seldonian.hyperparam_search.HyperparamSearch.get_initial_solution"]], "get_safety_size() (hyperparamsearch method)": [[87, "seldonian.hyperparam_search.HyperparamSearch.get_safety_size"]], "run_core() (hyperparamsearch method)": [[87, "seldonian.hyperparam_search.HyperparamSearch.run_core"]], "run_safety_test() (hyperparamsearch method)": [[87, "seldonian.hyperparam_search.HyperparamSearch.run_safety_test"]], "safety_test() (hyperparamsearch method)": [[87, "seldonian.hyperparam_search.HyperparamSearch.safety_test"]], "seldonian.models": [[88, "module-seldonian.models"]], "seldonian.models.models": [[89, "module-seldonian.models.models"]], "baselogisticregressionmodel (class in seldonian.models.models)": [[90, "seldonian.models.models.BaseLogisticRegressionModel"]], "__init__() (baselogisticregressionmodel method)": [[90, "seldonian.models.models.BaseLogisticRegressionModel.__init__"]], "__repr__() (baselogisticregressionmodel method)": [[90, "seldonian.models.models.BaseLogisticRegressionModel.__repr__"]], "fit() (baselogisticregressionmodel method)": [[90, "seldonian.models.models.BaseLogisticRegressionModel.fit"]], "binarylogisticregressionmodel (class in seldonian.models.models)": [[91, "seldonian.models.models.BinaryLogisticRegressionModel"]], "__init__() (binarylogisticregressionmodel method)": [[91, "seldonian.models.models.BinaryLogisticRegressionModel.__init__"]], "__repr__() (binarylogisticregressionmodel method)": [[91, "seldonian.models.models.BinaryLogisticRegressionModel.__repr__"]], "fit() (binarylogisticregressionmodel method)": [[91, "seldonian.models.models.BinaryLogisticRegressionModel.fit"]], "predict() (binarylogisticregressionmodel method)": [[91, "seldonian.models.models.BinaryLogisticRegressionModel.predict"]], "boundedlinearregressionmodel (class in seldonian.models.models)": [[92, "seldonian.models.models.BoundedLinearRegressionModel"]], "__init__() (boundedlinearregressionmodel method)": [[92, "seldonian.models.models.BoundedLinearRegressionModel.__init__"]], "__repr__() (boundedlinearregressionmodel method)": [[92, "seldonian.models.models.BoundedLinearRegressionModel.__repr__"]], "fit() (boundedlinearregressionmodel method)": [[92, "seldonian.models.models.BoundedLinearRegressionModel.fit"]], "predict() (boundedlinearregressionmodel method)": [[92, "seldonian.models.models.BoundedLinearRegressionModel.predict"]], "classificationmodel (class in seldonian.models.models)": [[93, "seldonian.models.models.ClassificationModel"]], "__init__() (classificationmodel method)": [[93, "seldonian.models.models.ClassificationModel.__init__"]], "__repr__() (classificationmodel method)": [[93, "seldonian.models.models.ClassificationModel.__repr__"]], "dummyclassifiermodel (class in seldonian.models.models)": [[94, "seldonian.models.models.DummyClassifierModel"]], "__init__() (dummyclassifiermodel method)": [[94, "seldonian.models.models.DummyClassifierModel.__init__"]], "__repr__() (dummyclassifiermodel method)": [[94, "seldonian.models.models.DummyClassifierModel.__repr__"]], "predict() (dummyclassifiermodel method)": [[94, "seldonian.models.models.DummyClassifierModel.predict"]], "linearregressionmodel (class in seldonian.models.models)": [[95, "seldonian.models.models.LinearRegressionModel"]], "__init__() (linearregressionmodel method)": [[95, "seldonian.models.models.LinearRegressionModel.__init__"]], "__repr__() (linearregressionmodel method)": [[95, "seldonian.models.models.LinearRegressionModel.__repr__"]], "fit() (linearregressionmodel method)": [[95, "seldonian.models.models.LinearRegressionModel.fit"]], "predict() (linearregressionmodel method)": [[95, "seldonian.models.models.LinearRegressionModel.predict"]], "linearregressionmodellistfeatures (class in seldonian.models.models)": [[96, "seldonian.models.models.LinearRegressionModelListFeatures"]], "__init__() (linearregressionmodellistfeatures method)": [[96, "seldonian.models.models.LinearRegressionModelListFeatures.__init__"]], "__repr__() (linearregressionmodellistfeatures method)": [[96, "seldonian.models.models.LinearRegressionModelListFeatures.__repr__"]], "fit() (linearregressionmodellistfeatures method)": [[96, "seldonian.models.models.LinearRegressionModelListFeatures.fit"]], "predict() (linearregressionmodellistfeatures method)": [[96, "seldonian.models.models.LinearRegressionModelListFeatures.predict"]], "multiclasslogisticregressionmodel (class in seldonian.models.models)": [[97, "seldonian.models.models.MultiClassLogisticRegressionModel"]], "__init__() (multiclasslogisticregressionmodel method)": [[97, "seldonian.models.models.MultiClassLogisticRegressionModel.__init__"]], "__repr__() (multiclasslogisticregressionmodel method)": [[97, "seldonian.models.models.MultiClassLogisticRegressionModel.__repr__"]], "fit() (multiclasslogisticregressionmodel method)": [[97, "seldonian.models.models.MultiClassLogisticRegressionModel.fit"]], "predict() (multiclasslogisticregressionmodel method)": [[97, "seldonian.models.models.MultiClassLogisticRegressionModel.predict"]], "randomclassifiermodel (class in seldonian.models.models)": [[98, "seldonian.models.models.RandomClassifierModel"]], "__init__() (randomclassifiermodel method)": [[98, "seldonian.models.models.RandomClassifierModel.__init__"]], "__repr__() (randomclassifiermodel method)": [[98, "seldonian.models.models.RandomClassifierModel.__repr__"]], "predict() (randomclassifiermodel method)": [[98, "seldonian.models.models.RandomClassifierModel.predict"]], "regressionmodel (class in seldonian.models.models)": [[99, "seldonian.models.models.RegressionModel"]], "__init__() (regressionmodel method)": [[99, "seldonian.models.models.RegressionModel.__init__"]], "__repr__() (regressionmodel method)": [[99, "seldonian.models.models.RegressionModel.__repr__"]], "seldonianmodel (class in seldonian.models.models)": [[100, "seldonian.models.models.SeldonianModel"]], "__init__() (seldonianmodel method)": [[100, "seldonian.models.models.SeldonianModel.__init__"]], "__repr__() (seldonianmodel method)": [[100, "seldonian.models.models.SeldonianModel.__repr__"]], "supervisedmodel (class in seldonian.models.models)": [[101, "seldonian.models.models.SupervisedModel"]], "__init__() (supervisedmodel method)": [[101, "seldonian.models.models.SupervisedModel.__init__"]], "__repr__() (supervisedmodel method)": [[101, "seldonian.models.models.SupervisedModel.__repr__"]], "seldonian.models.objectives": [[102, "module-seldonian.models.objectives"]], "accuracy() (in module seldonian.models.objectives)": [[103, "seldonian.models.objectives.Accuracy"]], "false_negative_rate() (in module seldonian.models.objectives)": [[104, "seldonian.models.objectives.False_Negative_Rate"]], "false_positive_rate() (in module seldonian.models.objectives)": [[105, "seldonian.models.objectives.False_Positive_Rate"]], "is_estimate() (in module seldonian.models.objectives)": [[106, "seldonian.models.objectives.IS_estimate"]], "mean_error() (in module seldonian.models.objectives)": [[107, "seldonian.models.objectives.Mean_Error"]], "mean_squared_error() (in module seldonian.models.objectives)": [[108, "seldonian.models.objectives.Mean_Squared_Error"]], "negative_rate() (in module seldonian.models.objectives)": [[109, "seldonian.models.objectives.Negative_Rate"]], "pdis_estimate() (in module seldonian.models.objectives)": [[110, "seldonian.models.objectives.PDIS_estimate"]], "positive_rate() (in module seldonian.models.objectives)": [[111, "seldonian.models.objectives.Positive_Rate"]], "true_negative_rate() (in module seldonian.models.objectives)": [[112, "seldonian.models.objectives.True_Negative_Rate"]], "true_positive_rate() (in module seldonian.models.objectives)": [[113, "seldonian.models.objectives.True_Positive_Rate"]], "batcher() (in module seldonian.models.objectives)": [[114, "seldonian.models.objectives.batcher"]], "binary_logistic_loss() (in module seldonian.models.objectives)": [[115, "seldonian.models.objectives.binary_logistic_loss"]], "confusion_matrix() (in module seldonian.models.objectives)": [[116, "seldonian.models.objectives.confusion_matrix"]], "evaluate_statistic() (in module seldonian.models.objectives)": [[117, "seldonian.models.objectives.evaluate_statistic"]], "gradient_bounded_squared_error() (in module seldonian.models.objectives)": [[118, "seldonian.models.objectives.gradient_Bounded_Squared_Error"]], "gradient_mean_squared_error() (in module seldonian.models.objectives)": [[119, "seldonian.models.objectives.gradient_Mean_Squared_Error"]], "gradient_binary_logistic_loss() (in module seldonian.models.objectives)": [[120, "seldonian.models.objectives.gradient_binary_logistic_loss"]], "multiclass_logistic_loss() (in module seldonian.models.objectives)": [[121, "seldonian.models.objectives.multiclass_logistic_loss"]], "sample_from_statistic() (in module seldonian.models.objectives)": [[122, "seldonian.models.objectives.sample_from_statistic"]], "vector_accuracy() (in module seldonian.models.objectives)": [[123, "seldonian.models.objectives.vector_Accuracy"]], "vector_error() (in module seldonian.models.objectives)": [[124, "seldonian.models.objectives.vector_Error"]], "vector_false_negative_rate() (in module seldonian.models.objectives)": [[125, "seldonian.models.objectives.vector_False_Negative_Rate"]], "vector_false_positive_rate() (in module seldonian.models.objectives)": [[126, "seldonian.models.objectives.vector_False_Positive_Rate"]], "vector_is_estimate() (in module seldonian.models.objectives)": [[127, "seldonian.models.objectives.vector_IS_estimate"]], "vector_negative_rate() (in module seldonian.models.objectives)": [[128, "seldonian.models.objectives.vector_Negative_Rate"]], "vector_pdis_estimate() (in module seldonian.models.objectives)": [[129, "seldonian.models.objectives.vector_PDIS_estimate"]], "vector_positive_rate() (in module seldonian.models.objectives)": [[130, "seldonian.models.objectives.vector_Positive_Rate"]], "vector_squared_error() (in module seldonian.models.objectives)": [[131, "seldonian.models.objectives.vector_Squared_Error"]], "vector_true_negative_rate() (in module seldonian.models.objectives)": [[132, "seldonian.models.objectives.vector_True_Negative_Rate"]], "vector_true_positive_rate() (in module seldonian.models.objectives)": [[133, "seldonian.models.objectives.vector_True_Positive_Rate"]], "vector_confusion_matrix() (in module seldonian.models.objectives)": [[134, "seldonian.models.objectives.vector_confusion_matrix"]], "seldonian.models.sklearn_lr": [[135, "module-seldonian.models.sklearn_lr"]], "sklearnlinearregressor (class in seldonian.models.sklearn_lr)": [[136, "seldonian.models.sklearn_lr.SkLearnLinearRegressor"]], "__init__() (sklearnlinearregressor method)": [[136, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.__init__"]], "__repr__() (sklearnlinearregressor method)": [[136, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.__repr__"]], "backward_pass() (sklearnlinearregressor method)": [[136, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.backward_pass"]], "create_model() (sklearnlinearregressor method)": [[136, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.create_model"]], "forward_pass() (sklearnlinearregressor method)": [[136, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.forward_pass"]], "get_model_params() (sklearnlinearregressor method)": [[136, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.get_model_params"]], "predict() (sklearnlinearregressor method)": [[136, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.predict"]], "update_model_params() (sklearnlinearregressor method)": [[136, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.update_model_params"]], "seldonian.models.sklearn_model": [[137, "module-seldonian.models.sklearn_model"]], "supervisedsklearnbasemodel (class in seldonian.models.sklearn_model)": [[138, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel"]], "__init__() (supervisedsklearnbasemodel method)": [[138, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.__init__"]], "__repr__() (supervisedsklearnbasemodel method)": [[138, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.__repr__"]], "backward_pass() (supervisedsklearnbasemodel method)": [[138, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.backward_pass"]], "create_model() (supervisedsklearnbasemodel method)": [[138, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.create_model"]], "forward_pass() (supervisedsklearnbasemodel method)": [[138, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.forward_pass"]], "get_model_params() (supervisedsklearnbasemodel method)": [[138, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.get_model_params"]], "predict() (supervisedsklearnbasemodel method)": [[138, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.predict"]], "update_model_params() (supervisedsklearnbasemodel method)": [[138, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.update_model_params"]], "sklearn_predict_vjp() (in module seldonian.models.sklearn_model)": [[139, "seldonian.models.sklearn_model.sklearn_predict_vjp"]], "seldonian.optimizers": [[140, "module-seldonian.optimizers"]], "seldonian.optimizers.gradient_descent": [[141, "module-seldonian.optimizers.gradient_descent"]], "gradient_descent_adam() (in module seldonian.optimizers.gradient_descent)": [[142, "seldonian.optimizers.gradient_descent.gradient_descent_adam"]], "setup_gradients() (in module seldonian.optimizers.gradient_descent)": [[143, "seldonian.optimizers.gradient_descent.setup_gradients"]], "seldonian.parse_tree": [[144, "module-seldonian.parse_tree"]], "seldonian.parse_tree.nodes": [[145, "module-seldonian.parse_tree.nodes"]], "basenode (class in seldonian.parse_tree.nodes)": [[146, "seldonian.parse_tree.nodes.BaseNode"]], "__init__() (basenode method)": [[146, "seldonian.parse_tree.nodes.BaseNode.__init__"]], "__repr__() (basenode method)": [[146, "seldonian.parse_tree.nodes.BaseNode.__repr__"]], "calculate_bounds() (basenode method)": [[146, "seldonian.parse_tree.nodes.BaseNode.calculate_bounds"]], "calculate_data_forbound() (basenode method)": [[146, "seldonian.parse_tree.nodes.BaseNode.calculate_data_forbound"]], "calculate_value() (basenode method)": [[146, "seldonian.parse_tree.nodes.BaseNode.calculate_value"]], "compute_hc_lowerbound() (basenode method)": [[146, "seldonian.parse_tree.nodes.BaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (basenode method)": [[146, "seldonian.parse_tree.nodes.BaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (basenode method)": [[146, "seldonian.parse_tree.nodes.BaseNode.compute_HC_upperbound"]], "mask_data() (basenode method)": [[146, "seldonian.parse_tree.nodes.BaseNode.mask_data"]], "predict_hc_lowerbound() (basenode method)": [[146, "seldonian.parse_tree.nodes.BaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (basenode method)": [[146, "seldonian.parse_tree.nodes.BaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (basenode method)": [[146, "seldonian.parse_tree.nodes.BaseNode.predict_HC_upperbound"]], "zhat() (basenode method)": [[146, "seldonian.parse_tree.nodes.BaseNode.zhat"]], "cvarsqebasenode (class in seldonian.parse_tree.nodes)": [[147, "seldonian.parse_tree.nodes.CVaRSQeBaseNode"]], "__init__() (cvarsqebasenode method)": [[147, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.__init__"]], "__repr__() (cvarsqebasenode method)": [[147, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.__repr__"]], "calculate_bounds() (cvarsqebasenode method)": [[147, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.calculate_bounds"]], "calculate_data_forbound() (cvarsqebasenode method)": [[147, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.calculate_data_forbound"]], "calculate_value() (cvarsqebasenode method)": [[147, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.calculate_value"]], "compute_hc_lowerbound() (cvarsqebasenode method)": [[147, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (cvarsqebasenode method)": [[147, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (cvarsqebasenode method)": [[147, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.compute_HC_upperbound"]], "mask_data() (cvarsqebasenode method)": [[147, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.mask_data"]], "predict_hc_lowerbound() (cvarsqebasenode method)": [[147, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (cvarsqebasenode method)": [[147, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (cvarsqebasenode method)": [[147, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.predict_HC_upperbound"]], "zhat() (cvarsqebasenode method)": [[147, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.zhat"]], "confusionmatrixbasenode (class in seldonian.parse_tree.nodes)": [[148, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode"]], "__init__() (confusionmatrixbasenode method)": [[148, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.__init__"]], "__repr__() (confusionmatrixbasenode method)": [[148, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.__repr__"]], "calculate_bounds() (confusionmatrixbasenode method)": [[148, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.calculate_bounds"]], "calculate_data_forbound() (confusionmatrixbasenode method)": [[148, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.calculate_data_forbound"]], "calculate_value() (confusionmatrixbasenode method)": [[148, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.calculate_value"]], "compute_hc_lowerbound() (confusionmatrixbasenode method)": [[148, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (confusionmatrixbasenode method)": [[148, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (confusionmatrixbasenode method)": [[148, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.compute_HC_upperbound"]], "mask_data() (confusionmatrixbasenode method)": [[148, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.mask_data"]], "predict_hc_lowerbound() (confusionmatrixbasenode method)": [[148, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (confusionmatrixbasenode method)": [[148, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (confusionmatrixbasenode method)": [[148, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.predict_HC_upperbound"]], "zhat() (confusionmatrixbasenode method)": [[148, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.zhat"]], "constantnode (class in seldonian.parse_tree.nodes)": [[149, "seldonian.parse_tree.nodes.ConstantNode"]], "__init__() (constantnode method)": [[149, "seldonian.parse_tree.nodes.ConstantNode.__init__"]], "__repr__() (constantnode method)": [[149, "seldonian.parse_tree.nodes.ConstantNode.__repr__"]], "internalnode (class in seldonian.parse_tree.nodes)": [[150, "seldonian.parse_tree.nodes.InternalNode"]], "__init__() (internalnode method)": [[150, "seldonian.parse_tree.nodes.InternalNode.__init__"]], "__repr__() (internalnode method)": [[150, "seldonian.parse_tree.nodes.InternalNode.__repr__"]], "medcustombasenode (class in seldonian.parse_tree.nodes)": [[151, "seldonian.parse_tree.nodes.MEDCustomBaseNode"]], "__init__() (medcustombasenode method)": [[151, "seldonian.parse_tree.nodes.MEDCustomBaseNode.__init__"]], "__repr__() (medcustombasenode method)": [[151, "seldonian.parse_tree.nodes.MEDCustomBaseNode.__repr__"]], "calculate_bounds() (medcustombasenode method)": [[151, "seldonian.parse_tree.nodes.MEDCustomBaseNode.calculate_bounds"]], "calculate_data_forbound() (medcustombasenode method)": [[151, "seldonian.parse_tree.nodes.MEDCustomBaseNode.calculate_data_forbound"]], "calculate_value() (medcustombasenode method)": [[151, "seldonian.parse_tree.nodes.MEDCustomBaseNode.calculate_value"]], "compute_hc_lowerbound() (medcustombasenode method)": [[151, "seldonian.parse_tree.nodes.MEDCustomBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (medcustombasenode method)": [[151, "seldonian.parse_tree.nodes.MEDCustomBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (medcustombasenode method)": [[151, "seldonian.parse_tree.nodes.MEDCustomBaseNode.compute_HC_upperbound"]], "mask_data() (medcustombasenode method)": [[151, "seldonian.parse_tree.nodes.MEDCustomBaseNode.mask_data"]], "precalculate_data() (medcustombasenode method)": [[151, "seldonian.parse_tree.nodes.MEDCustomBaseNode.precalculate_data"]], "predict_hc_lowerbound() (medcustombasenode method)": [[151, "seldonian.parse_tree.nodes.MEDCustomBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (medcustombasenode method)": [[151, "seldonian.parse_tree.nodes.MEDCustomBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (medcustombasenode method)": [[151, "seldonian.parse_tree.nodes.MEDCustomBaseNode.predict_HC_upperbound"]], "zhat() (medcustombasenode method)": [[151, "seldonian.parse_tree.nodes.MEDCustomBaseNode.zhat"]], "multiclassbasenode (class in seldonian.parse_tree.nodes)": [[152, "seldonian.parse_tree.nodes.MultiClassBaseNode"]], "__init__() (multiclassbasenode method)": [[152, "seldonian.parse_tree.nodes.MultiClassBaseNode.__init__"]], "__repr__() (multiclassbasenode method)": [[152, "seldonian.parse_tree.nodes.MultiClassBaseNode.__repr__"]], "calculate_bounds() (multiclassbasenode method)": [[152, "seldonian.parse_tree.nodes.MultiClassBaseNode.calculate_bounds"]], "calculate_data_forbound() (multiclassbasenode method)": [[152, "seldonian.parse_tree.nodes.MultiClassBaseNode.calculate_data_forbound"]], "calculate_value() (multiclassbasenode method)": [[152, "seldonian.parse_tree.nodes.MultiClassBaseNode.calculate_value"]], "compute_hc_lowerbound() (multiclassbasenode method)": [[152, "seldonian.parse_tree.nodes.MultiClassBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (multiclassbasenode method)": [[152, "seldonian.parse_tree.nodes.MultiClassBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (multiclassbasenode method)": [[152, "seldonian.parse_tree.nodes.MultiClassBaseNode.compute_HC_upperbound"]], "mask_data() (multiclassbasenode method)": [[152, "seldonian.parse_tree.nodes.MultiClassBaseNode.mask_data"]], "predict_hc_lowerbound() (multiclassbasenode method)": [[152, "seldonian.parse_tree.nodes.MultiClassBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (multiclassbasenode method)": [[152, "seldonian.parse_tree.nodes.MultiClassBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (multiclassbasenode method)": [[152, "seldonian.parse_tree.nodes.MultiClassBaseNode.predict_HC_upperbound"]], "zhat() (multiclassbasenode method)": [[152, "seldonian.parse_tree.nodes.MultiClassBaseNode.zhat"]], "node (class in seldonian.parse_tree.nodes)": [[153, "seldonian.parse_tree.nodes.Node"]], "__init__() (node method)": [[153, "seldonian.parse_tree.nodes.Node.__init__"]], "__repr__() (node method)": [[153, "seldonian.parse_tree.nodes.Node.__repr__"]], "rlaltrewardbasenode (class in seldonian.parse_tree.nodes)": [[154, "seldonian.parse_tree.nodes.RLAltRewardBaseNode"]], "__init__() (rlaltrewardbasenode method)": [[154, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.__init__"]], "__repr__() (rlaltrewardbasenode method)": [[154, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.__repr__"]], "calculate_bounds() (rlaltrewardbasenode method)": [[154, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.calculate_bounds"]], "calculate_data_forbound() (rlaltrewardbasenode method)": [[154, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.calculate_data_forbound"]], "calculate_value() (rlaltrewardbasenode method)": [[154, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.calculate_value"]], "compute_hc_lowerbound() (rlaltrewardbasenode method)": [[154, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (rlaltrewardbasenode method)": [[154, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (rlaltrewardbasenode method)": [[154, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.compute_HC_upperbound"]], "mask_data() (rlaltrewardbasenode method)": [[154, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.mask_data"]], "predict_hc_lowerbound() (rlaltrewardbasenode method)": [[154, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (rlaltrewardbasenode method)": [[154, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (rlaltrewardbasenode method)": [[154, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.predict_HC_upperbound"]], "zhat() (rlaltrewardbasenode method)": [[154, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.zhat"]], "bounds_required_dict (in module seldonian.parse_tree.operators)": [[155, "seldonian.parse_tree.operators.bounds_required_dict"]], "custom_base_node_dict (in module seldonian.parse_tree.operators)": [[155, "seldonian.parse_tree.operators.custom_base_node_dict"]], "measure_functions_dict (in module seldonian.parse_tree.operators)": [[155, "seldonian.parse_tree.operators.measure_functions_dict"]], "not_supported_op_mapper (in module seldonian.parse_tree.operators)": [[155, "seldonian.parse_tree.operators.not_supported_op_mapper"]], "op_mapper (in module seldonian.parse_tree.operators)": [[155, "seldonian.parse_tree.operators.op_mapper"]], "seldonian.parse_tree.operators": [[155, "module-seldonian.parse_tree.operators"]], "seldonian.parse_tree.parse_tree": [[156, "module-seldonian.parse_tree.parse_tree"]], "parsetree (class in seldonian.parse_tree.parse_tree)": [[157, "seldonian.parse_tree.parse_tree.ParseTree"]], "__init__() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree.__init__"]], "__repr__() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree.__repr__"]], "_abs() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree._abs"]], "_add() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree._add"]], "_assign_bounds_helper() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree._assign_bounds_helper"]], "_assign_deltas_helper() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree._assign_deltas_helper"]], "_ast2pt_node() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree._ast2pt_node"]], "_ast_tree_helper() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree._ast_tree_helper"]], "_div() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree._div"]], "_evaluator_helper() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree._evaluator_helper"]], "_exp() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree._exp"]], "_log() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree._log"]], "_max() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree._max"]], "_min() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree._min"]], "_mult() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree._mult"]], "_pow() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree._pow"]], "_preprocess_constraint_str() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree._preprocess_constraint_str"]], "_propagate_value() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree._propagate_value"]], "_propagator_helper() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree._propagator_helper"]], "_protect_nan() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree._protect_nan"]], "_sub() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree._sub"]], "assign_bounds_needed() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree.assign_bounds_needed"]], "assign_deltas() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree.assign_deltas"]], "build_tree() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree.build_tree"]], "create_from_ast() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree.create_from_ast"]], "evaluate_constraint() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree.evaluate_constraint"]], "make_viz() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree.make_viz"]], "make_viz_helper() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree.make_viz_helper"]], "propagate() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree.propagate"]], "propagate_bounds() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree.propagate_bounds"]], "reset_base_node_dict() (parsetree method)": [[157, "seldonian.parse_tree.parse_tree.ParseTree.reset_base_node_dict"]], "make_parse_trees_from_constraints() (in module seldonian.parse_tree.parse_tree)": [[158, "seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints"]], "seldonian.safety_test": [[159, "module-seldonian.safety_test"]], "seldonian.safety_test.safety_test": [[160, "module-seldonian.safety_test.safety_test"]], "safetytest (class in seldonian.safety_test.safety_test)": [[161, "seldonian.safety_test.safety_test.SafetyTest"]], "__init__() (safetytest method)": [[161, "seldonian.safety_test.safety_test.SafetyTest.__init__"]], "__repr__() (safetytest method)": [[161, "seldonian.safety_test.safety_test.SafetyTest.__repr__"]], "evaluate_primary_objective() (safetytest method)": [[161, "seldonian.safety_test.safety_test.SafetyTest.evaluate_primary_objective"]], "run() (safetytest method)": [[161, "seldonian.safety_test.safety_test.SafetyTest.run"]], "seldonian.seldonian_algorithm": [[162, "module-seldonian.seldonian_algorithm"]], "seldonianalgorithm (class in seldonian.seldonian_algorithm)": [[163, "seldonian.seldonian_algorithm.SeldonianAlgorithm"]], "__init__() (seldonianalgorithm method)": [[163, "seldonian.seldonian_algorithm.SeldonianAlgorithm.__init__"]], "__repr__() (seldonianalgorithm method)": [[163, "seldonian.seldonian_algorithm.SeldonianAlgorithm.__repr__"]], "candidate_safety_split() (seldonianalgorithm method)": [[163, "seldonian.seldonian_algorithm.SeldonianAlgorithm.candidate_safety_split"]], "candidate_selection() (seldonianalgorithm method)": [[163, "seldonian.seldonian_algorithm.SeldonianAlgorithm.candidate_selection"]], "evaluate_primary_objective() (seldonianalgorithm method)": [[163, "seldonian.seldonian_algorithm.SeldonianAlgorithm.evaluate_primary_objective"]], "get_cs_result() (seldonianalgorithm method)": [[163, "seldonian.seldonian_algorithm.SeldonianAlgorithm.get_cs_result"]], "get_st_upper_bounds() (seldonianalgorithm method)": [[163, "seldonian.seldonian_algorithm.SeldonianAlgorithm.get_st_upper_bounds"]], "run() (seldonianalgorithm method)": [[163, "seldonian.seldonian_algorithm.SeldonianAlgorithm.run"]], "run_safety_test() (seldonianalgorithm method)": [[163, "seldonian.seldonian_algorithm.SeldonianAlgorithm.run_safety_test"]], "safety_test() (seldonianalgorithm method)": [[163, "seldonian.seldonian_algorithm.SeldonianAlgorithm.safety_test"]], "seldonian.spec": [[164, "module-seldonian.spec"]], "rlspec (class in seldonian.spec)": [[165, "seldonian.spec.RLSpec"]], "__init__() (rlspec method)": [[165, "seldonian.spec.RLSpec.__init__"]], "__repr__() (rlspec method)": [[165, "seldonian.spec.RLSpec.__repr__"]], "spec (class in seldonian.spec)": [[166, "seldonian.spec.Spec"]], "__init__() (spec method)": [[166, "seldonian.spec.Spec.__init__"]], "__repr__() (spec method)": [[166, "seldonian.spec.Spec.__repr__"]], "supervisedspec (class in seldonian.spec)": [[167, "seldonian.spec.SupervisedSpec"]], "__init__() (supervisedspec method)": [[167, "seldonian.spec.SupervisedSpec.__init__"]], "__repr__() (supervisedspec method)": [[167, "seldonian.spec.SupervisedSpec.__repr__"]], "createrlspec() (in module seldonian.spec)": [[168, "seldonian.spec.createRLSpec"]], "createsimplesupervisedspec() (in module seldonian.spec)": [[169, "seldonian.spec.createSimpleSupervisedSpec"]], "createsupervisedspec() (in module seldonian.spec)": [[170, "seldonian.spec.createSupervisedSpec"]], "validate_parse_trees() (in module seldonian.spec)": [[171, "seldonian.spec.validate_parse_trees"]], "seldonian.utils": [[172, "module-seldonian.utils"]], "seldonian.utils.rl_utils": [[173, "module-seldonian.utils.RL_utils"]], "argmax_multi() (in module seldonian.utils.rl_utils)": [[174, "seldonian.utils.RL_utils.argmax_multi"]], "clamp() (in module seldonian.utils.rl_utils)": [[175, "seldonian.utils.RL_utils.clamp"]], "error() (in module seldonian.utils.rl_utils)": [[176, "seldonian.utils.RL_utils.error"]], "seldonian.utils.io_utils": [[177, "module-seldonian.utils.io_utils"]], "dir_path() (in module seldonian.utils.io_utils)": [[178, "seldonian.utils.io_utils.dir_path"]], "load_json() (in module seldonian.utils.io_utils)": [[179, "seldonian.utils.io_utils.load_json"]], "load_pickle() (in module seldonian.utils.io_utils)": [[180, "seldonian.utils.io_utils.load_pickle"]], "save_json() (in module seldonian.utils.io_utils)": [[181, "seldonian.utils.io_utils.save_json"]], "save_pickle() (in module seldonian.utils.io_utils)": [[182, "seldonian.utils.io_utils.save_pickle"]], "seldonian.utils.plot_utils": [[183, "module-seldonian.utils.plot_utils"]], "plot_gradient_descent() (in module seldonian.utils.plot_utils)": [[184, "seldonian.utils.plot_utils.plot_gradient_descent"]], "seldonian.utils.stats_utils": [[185, "module-seldonian.utils.stats_utils"]], "custom_cumprod() (in module seldonian.utils.stats_utils)": [[186, "seldonian.utils.stats_utils.custom_cumprod"]], "softmax() (in module seldonian.utils.stats_utils)": [[187, "seldonian.utils.stats_utils.softmax"]], "stddev() (in module seldonian.utils.stats_utils)": [[188, "seldonian.utils.stats_utils.stddev"]], "tinv() (in module seldonian.utils.stats_utils)": [[189, "seldonian.utils.stats_utils.tinv"]], "weighted_sum_gamma() (in module seldonian.utils.stats_utils)": [[190, "seldonian.utils.stats_utils.weighted_sum_gamma"]], "seldonian.utils.tutorial_utils": [[191, "module-seldonian.utils.tutorial_utils"]], "generate_clipped_data() (in module seldonian.utils.tutorial_utils)": [[192, "seldonian.utils.tutorial_utils.generate_clipped_data"]], "generate_data() (in module seldonian.utils.tutorial_utils)": [[193, "seldonian.utils.tutorial_utils.generate_data"]], "make_synthetic_regression_dataset() (in module seldonian.utils.tutorial_utils)": [[194, "seldonian.utils.tutorial_utils.make_synthetic_regression_dataset"]], "seldonian.warnings": [[195, "module-seldonian.warnings"]], "seldonian.warnings.custom_warnings": [[196, "module-seldonian.warnings.custom_warnings"]], "custom_formatwarning() (in module seldonian.warnings.custom_warnings)": [[197, "seldonian.warnings.custom_warnings.custom_formatwarning"]]}})