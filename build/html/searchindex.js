Search.setIndex({"docnames": ["_autosummary/seldonian", "_autosummary/seldonian.RL", "_autosummary/seldonian.RL.Agents", "_autosummary/seldonian.RL.Agents.Agent", "_autosummary/seldonian.RL.Agents.Agent.Agent", "_autosummary/seldonian.RL.Agents.Bases", "_autosummary/seldonian.RL.Agents.Bases.Fourier", "_autosummary/seldonian.RL.Agents.Bases.Fourier.Fourier", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent", "_autosummary/seldonian.RL.Agents.Function_Approximators", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Q_Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent", "_autosummary/seldonian.RL.Agents.Policies", "_autosummary/seldonian.RL.Agents.Policies.Policy", "_autosummary/seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy", "_autosummary/seldonian.RL.Agents.Policies.Policy.Policy", "_autosummary/seldonian.RL.Agents.Policies.Softmax", "_autosummary/seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax", "_autosummary/seldonian.RL.Agents.Policies.Softmax.MixedSoftmax", "_autosummary/seldonian.RL.Agents.Policies.Softmax.Softmax", "_autosummary/seldonian.RL.Agents.keyboard_gridworld", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution", "_autosummary/seldonian.RL.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description.check_space_type", "_autosummary/seldonian.RL.Env_Description.Spaces", "_autosummary/seldonian.RL.Env_Description.Spaces.Continuous_Space", "_autosummary/seldonian.RL.Env_Description.Spaces.Discrete_Space", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.main", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info", "_autosummary/seldonian.RL.RL_model", "_autosummary/seldonian.RL.RL_model.RL_model", "_autosummary/seldonian.RL.RL_runner", "_autosummary/seldonian.RL.RL_runner.create_agent", "_autosummary/seldonian.RL.RL_runner.run_all_trials", "_autosummary/seldonian.RL.RL_runner.run_episode", "_autosummary/seldonian.RL.RL_runner.run_episode_from_dict", "_autosummary/seldonian.RL.RL_runner.run_trial", "_autosummary/seldonian.RL.RL_runner.run_trial_given_agent_and_env", "_autosummary/seldonian.RL.environments", "_autosummary/seldonian.RL.environments.Environment", "_autosummary/seldonian.RL.environments.Environment.Environment", "_autosummary/seldonian.RL.environments.gridworld", "_autosummary/seldonian.RL.environments.gridworld.Gridworld", "_autosummary/seldonian.RL.environments.mountaincar", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar", "_autosummary/seldonian.RL.environments.n_step_mountaincar", "_autosummary/seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar", "_autosummary/seldonian.RL.environments.simglucose_env", "_autosummary/seldonian.RL.environments.simglucose_env.Simglucose", "_autosummary/seldonian.RL.generate_gridworld_episodes", "_autosummary/seldonian.RL.generate_gridworld_episodes.main", "_autosummary/seldonian.RL.generate_mountaincar_episodes", "_autosummary/seldonian.RL.generate_mountaincar_episodes.main", "_autosummary/seldonian.RL.generate_simglucose_episodes", "_autosummary/seldonian.RL.generate_simglucose_episodes.get_max_obs", "_autosummary/seldonian.RL.generate_simglucose_episodes.main", "_autosummary/seldonian.RL.hyperparams_and_settings", "_autosummary/seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict", "_autosummary/seldonian.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection", "_autosummary/seldonian.dataset", "_autosummary/seldonian.dataset.DataSet", "_autosummary/seldonian.dataset.DataSetLoader", "_autosummary/seldonian.dataset.Episode", "_autosummary/seldonian.dataset.MetaData", "_autosummary/seldonian.dataset.RLDataSet", "_autosummary/seldonian.dataset.RLMetaData", "_autosummary/seldonian.dataset.SupervisedDataSet", "_autosummary/seldonian.dataset.SupervisedMetaData", "_autosummary/seldonian.dataset.load_RL_metadata", "_autosummary/seldonian.dataset.load_supervised_metadata", "_autosummary/seldonian.hyperparam_search", "_autosummary/seldonian.hyperparam_search.HyperparamSearch", "_autosummary/seldonian.models", "_autosummary/seldonian.models.models", "_autosummary/seldonian.models.models.BaseLogisticRegressionModel", "_autosummary/seldonian.models.models.BinaryLogisticRegressionModel", "_autosummary/seldonian.models.models.BoundedLinearRegressionModel", "_autosummary/seldonian.models.models.ClassificationModel", "_autosummary/seldonian.models.models.DummyClassifierModel", "_autosummary/seldonian.models.models.LinearRegressionModel", "_autosummary/seldonian.models.models.LinearRegressionModelListFeatures", "_autosummary/seldonian.models.models.MultiClassLogisticRegressionModel", "_autosummary/seldonian.models.models.RandomClassifierModel", "_autosummary/seldonian.models.models.RegressionModel", "_autosummary/seldonian.models.models.SeldonianModel", "_autosummary/seldonian.models.models.SupervisedModel", "_autosummary/seldonian.models.objectives", "_autosummary/seldonian.models.objectives.Accuracy", "_autosummary/seldonian.models.objectives.False_Negative_Rate", "_autosummary/seldonian.models.objectives.False_Positive_Rate", "_autosummary/seldonian.models.objectives.IS_estimate", "_autosummary/seldonian.models.objectives.Mean_Error", "_autosummary/seldonian.models.objectives.Mean_Squared_Error", "_autosummary/seldonian.models.objectives.Negative_Rate", "_autosummary/seldonian.models.objectives.PDIS_estimate", "_autosummary/seldonian.models.objectives.Positive_Rate", "_autosummary/seldonian.models.objectives.True_Negative_Rate", "_autosummary/seldonian.models.objectives.True_Positive_Rate", "_autosummary/seldonian.models.objectives.binary_logistic_loss", "_autosummary/seldonian.models.objectives.confusion_matrix", "_autosummary/seldonian.models.objectives.gradient_Bounded_Squared_Error", "_autosummary/seldonian.models.objectives.gradient_Mean_Squared_Error", "_autosummary/seldonian.models.objectives.gradient_binary_logistic_loss", "_autosummary/seldonian.models.objectives.multiclass_logistic_loss", "_autosummary/seldonian.models.sklearn_lr", "_autosummary/seldonian.models.sklearn_lr.SkLearnLinearRegressor", "_autosummary/seldonian.models.sklearn_model", "_autosummary/seldonian.models.sklearn_model.SupervisedSkLearnBaseModel", "_autosummary/seldonian.models.sklearn_model.sklearn_predict_vjp", "_autosummary/seldonian.models.zhat_funcs", "_autosummary/seldonian.models.zhat_funcs.batcher", "_autosummary/seldonian.models.zhat_funcs.evaluate_statistic", "_autosummary/seldonian.models.zhat_funcs.sample_from_statistic", "_autosummary/seldonian.models.zhat_funcs.vector_Accuracy", "_autosummary/seldonian.models.zhat_funcs.vector_Error", "_autosummary/seldonian.models.zhat_funcs.vector_False_Negative_Rate", "_autosummary/seldonian.models.zhat_funcs.vector_False_Positive_Rate", "_autosummary/seldonian.models.zhat_funcs.vector_IS_estimate", "_autosummary/seldonian.models.zhat_funcs.vector_Negative_Rate", "_autosummary/seldonian.models.zhat_funcs.vector_PDIS_estimate", "_autosummary/seldonian.models.zhat_funcs.vector_Positive_Rate", "_autosummary/seldonian.models.zhat_funcs.vector_Squared_Error", "_autosummary/seldonian.models.zhat_funcs.vector_True_Negative_Rate", "_autosummary/seldonian.models.zhat_funcs.vector_True_Positive_Rate", "_autosummary/seldonian.models.zhat_funcs.vector_confusion_matrix", "_autosummary/seldonian.optimizers", "_autosummary/seldonian.optimizers.gradient_descent", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam", "_autosummary/seldonian.optimizers.gradient_descent.setup_gradients", "_autosummary/seldonian.parse_tree", "_autosummary/seldonian.parse_tree.nodes", "_autosummary/seldonian.parse_tree.nodes.BaseNode", "_autosummary/seldonian.parse_tree.nodes.CVaRSQeBaseNode", "_autosummary/seldonian.parse_tree.nodes.ConfusionMatrixBaseNode", "_autosummary/seldonian.parse_tree.nodes.ConstantNode", "_autosummary/seldonian.parse_tree.nodes.InternalNode", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode", "_autosummary/seldonian.parse_tree.nodes.MultiClassBaseNode", "_autosummary/seldonian.parse_tree.nodes.Node", "_autosummary/seldonian.parse_tree.nodes.RLAltRewardBaseNode", "_autosummary/seldonian.parse_tree.operators", "_autosummary/seldonian.parse_tree.parse_tree", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree", "_autosummary/seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints", "_autosummary/seldonian.safety_test", "_autosummary/seldonian.safety_test.safety_test", "_autosummary/seldonian.safety_test.safety_test.SafetyTest", "_autosummary/seldonian.seldonian_algorithm", "_autosummary/seldonian.seldonian_algorithm.SeldonianAlgorithm", "_autosummary/seldonian.spec", "_autosummary/seldonian.spec.RLSpec", "_autosummary/seldonian.spec.Spec", "_autosummary/seldonian.spec.SupervisedSpec", "_autosummary/seldonian.spec.createRLSpec", "_autosummary/seldonian.spec.createSimpleSupervisedSpec", "_autosummary/seldonian.spec.createSupervisedSpec", "_autosummary/seldonian.spec.validate_parse_trees", "_autosummary/seldonian.utils", "_autosummary/seldonian.utils.RL_utils", "_autosummary/seldonian.utils.RL_utils.argmax_multi", "_autosummary/seldonian.utils.RL_utils.clamp", "_autosummary/seldonian.utils.RL_utils.error", "_autosummary/seldonian.utils.io_utils", "_autosummary/seldonian.utils.io_utils.dir_path", "_autosummary/seldonian.utils.io_utils.load_json", "_autosummary/seldonian.utils.io_utils.load_pickle", "_autosummary/seldonian.utils.io_utils.save_json", "_autosummary/seldonian.utils.io_utils.save_pickle", "_autosummary/seldonian.utils.plot_utils", "_autosummary/seldonian.utils.plot_utils.plot_gradient_descent", "_autosummary/seldonian.utils.stats_utils", "_autosummary/seldonian.utils.stats_utils.custom_cumprod", "_autosummary/seldonian.utils.stats_utils.softmax", "_autosummary/seldonian.utils.stats_utils.stddev", "_autosummary/seldonian.utils.stats_utils.tinv", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma", "_autosummary/seldonian.utils.tutorial_utils", "_autosummary/seldonian.utils.tutorial_utils.generate_clipped_data", "_autosummary/seldonian.utils.tutorial_utils.generate_data", "_autosummary/seldonian.utils.tutorial_utils.make_synthetic_regression_dataset", "_autosummary/seldonian.warnings", "_autosummary/seldonian.warnings.custom_warnings", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning", "api", "getting_started", "index", "overview"], "filenames": ["_autosummary/seldonian.rst", "_autosummary/seldonian.RL.rst", "_autosummary/seldonian.RL.Agents.rst", "_autosummary/seldonian.RL.Agents.Agent.rst", "_autosummary/seldonian.RL.Agents.Agent.Agent.rst", "_autosummary/seldonian.RL.Agents.Bases.rst", "_autosummary/seldonian.RL.Agents.Bases.Fourier.rst", "_autosummary/seldonian.RL.Agents.Bases.Fourier.Fourier.rst", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.rst", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Q_Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description.rst", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.rst", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.rst", "_autosummary/seldonian.RL.Agents.Policies.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.Softmax.rst", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.rst", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.rst", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.rst", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.rst", "_autosummary/seldonian.RL.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.check_space_type.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.Continuous_Space.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.Discrete_Space.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.main.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info.rst", "_autosummary/seldonian.RL.RL_model.rst", "_autosummary/seldonian.RL.RL_model.RL_model.rst", "_autosummary/seldonian.RL.RL_runner.rst", "_autosummary/seldonian.RL.RL_runner.create_agent.rst", "_autosummary/seldonian.RL.RL_runner.run_all_trials.rst", "_autosummary/seldonian.RL.RL_runner.run_episode.rst", "_autosummary/seldonian.RL.RL_runner.run_episode_from_dict.rst", "_autosummary/seldonian.RL.RL_runner.run_trial.rst", "_autosummary/seldonian.RL.RL_runner.run_trial_given_agent_and_env.rst", "_autosummary/seldonian.RL.environments.rst", "_autosummary/seldonian.RL.environments.Environment.rst", "_autosummary/seldonian.RL.environments.Environment.Environment.rst", "_autosummary/seldonian.RL.environments.gridworld.rst", "_autosummary/seldonian.RL.environments.gridworld.Gridworld.rst", "_autosummary/seldonian.RL.environments.mountaincar.rst", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar.rst", "_autosummary/seldonian.RL.environments.n_step_mountaincar.rst", "_autosummary/seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.rst", "_autosummary/seldonian.RL.environments.simglucose_env.rst", "_autosummary/seldonian.RL.environments.simglucose_env.Simglucose.rst", "_autosummary/seldonian.RL.generate_gridworld_episodes.rst", "_autosummary/seldonian.RL.generate_gridworld_episodes.main.rst", "_autosummary/seldonian.RL.generate_mountaincar_episodes.rst", "_autosummary/seldonian.RL.generate_mountaincar_episodes.main.rst", "_autosummary/seldonian.RL.generate_simglucose_episodes.rst", "_autosummary/seldonian.RL.generate_simglucose_episodes.get_max_obs.rst", "_autosummary/seldonian.RL.generate_simglucose_episodes.main.rst", "_autosummary/seldonian.RL.hyperparams_and_settings.rst", "_autosummary/seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict.rst", "_autosummary/seldonian.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection.rst", "_autosummary/seldonian.dataset.rst", "_autosummary/seldonian.dataset.DataSet.rst", "_autosummary/seldonian.dataset.DataSetLoader.rst", "_autosummary/seldonian.dataset.Episode.rst", "_autosummary/seldonian.dataset.MetaData.rst", "_autosummary/seldonian.dataset.RLDataSet.rst", "_autosummary/seldonian.dataset.RLMetaData.rst", "_autosummary/seldonian.dataset.SupervisedDataSet.rst", "_autosummary/seldonian.dataset.SupervisedMetaData.rst", "_autosummary/seldonian.dataset.load_RL_metadata.rst", "_autosummary/seldonian.dataset.load_supervised_metadata.rst", "_autosummary/seldonian.hyperparam_search.rst", "_autosummary/seldonian.hyperparam_search.HyperparamSearch.rst", "_autosummary/seldonian.models.rst", "_autosummary/seldonian.models.models.rst", "_autosummary/seldonian.models.models.BaseLogisticRegressionModel.rst", "_autosummary/seldonian.models.models.BinaryLogisticRegressionModel.rst", "_autosummary/seldonian.models.models.BoundedLinearRegressionModel.rst", "_autosummary/seldonian.models.models.ClassificationModel.rst", "_autosummary/seldonian.models.models.DummyClassifierModel.rst", "_autosummary/seldonian.models.models.LinearRegressionModel.rst", "_autosummary/seldonian.models.models.LinearRegressionModelListFeatures.rst", "_autosummary/seldonian.models.models.MultiClassLogisticRegressionModel.rst", "_autosummary/seldonian.models.models.RandomClassifierModel.rst", "_autosummary/seldonian.models.models.RegressionModel.rst", "_autosummary/seldonian.models.models.SeldonianModel.rst", "_autosummary/seldonian.models.models.SupervisedModel.rst", "_autosummary/seldonian.models.objectives.rst", "_autosummary/seldonian.models.objectives.Accuracy.rst", "_autosummary/seldonian.models.objectives.False_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.False_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.IS_estimate.rst", "_autosummary/seldonian.models.objectives.Mean_Error.rst", "_autosummary/seldonian.models.objectives.Mean_Squared_Error.rst", "_autosummary/seldonian.models.objectives.Negative_Rate.rst", "_autosummary/seldonian.models.objectives.PDIS_estimate.rst", "_autosummary/seldonian.models.objectives.Positive_Rate.rst", "_autosummary/seldonian.models.objectives.True_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.True_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.binary_logistic_loss.rst", "_autosummary/seldonian.models.objectives.confusion_matrix.rst", "_autosummary/seldonian.models.objectives.gradient_Bounded_Squared_Error.rst", "_autosummary/seldonian.models.objectives.gradient_Mean_Squared_Error.rst", "_autosummary/seldonian.models.objectives.gradient_binary_logistic_loss.rst", "_autosummary/seldonian.models.objectives.multiclass_logistic_loss.rst", "_autosummary/seldonian.models.sklearn_lr.rst", "_autosummary/seldonian.models.sklearn_lr.SkLearnLinearRegressor.rst", "_autosummary/seldonian.models.sklearn_model.rst", "_autosummary/seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.rst", "_autosummary/seldonian.models.sklearn_model.sklearn_predict_vjp.rst", "_autosummary/seldonian.models.zhat_funcs.rst", "_autosummary/seldonian.models.zhat_funcs.batcher.rst", "_autosummary/seldonian.models.zhat_funcs.evaluate_statistic.rst", "_autosummary/seldonian.models.zhat_funcs.sample_from_statistic.rst", "_autosummary/seldonian.models.zhat_funcs.vector_Accuracy.rst", "_autosummary/seldonian.models.zhat_funcs.vector_Error.rst", "_autosummary/seldonian.models.zhat_funcs.vector_False_Negative_Rate.rst", "_autosummary/seldonian.models.zhat_funcs.vector_False_Positive_Rate.rst", "_autosummary/seldonian.models.zhat_funcs.vector_IS_estimate.rst", "_autosummary/seldonian.models.zhat_funcs.vector_Negative_Rate.rst", "_autosummary/seldonian.models.zhat_funcs.vector_PDIS_estimate.rst", "_autosummary/seldonian.models.zhat_funcs.vector_Positive_Rate.rst", "_autosummary/seldonian.models.zhat_funcs.vector_Squared_Error.rst", "_autosummary/seldonian.models.zhat_funcs.vector_True_Negative_Rate.rst", "_autosummary/seldonian.models.zhat_funcs.vector_True_Positive_Rate.rst", "_autosummary/seldonian.models.zhat_funcs.vector_confusion_matrix.rst", "_autosummary/seldonian.optimizers.rst", "_autosummary/seldonian.optimizers.gradient_descent.rst", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam.rst", "_autosummary/seldonian.optimizers.gradient_descent.setup_gradients.rst", "_autosummary/seldonian.parse_tree.rst", "_autosummary/seldonian.parse_tree.nodes.rst", "_autosummary/seldonian.parse_tree.nodes.BaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.CVaRSQeBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.ConstantNode.rst", "_autosummary/seldonian.parse_tree.nodes.InternalNode.rst", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.MultiClassBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.Node.rst", "_autosummary/seldonian.parse_tree.nodes.RLAltRewardBaseNode.rst", "_autosummary/seldonian.parse_tree.operators.rst", "_autosummary/seldonian.parse_tree.parse_tree.rst", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree.rst", "_autosummary/seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints.rst", "_autosummary/seldonian.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.SafetyTest.rst", "_autosummary/seldonian.seldonian_algorithm.rst", "_autosummary/seldonian.seldonian_algorithm.SeldonianAlgorithm.rst", "_autosummary/seldonian.spec.rst", "_autosummary/seldonian.spec.RLSpec.rst", "_autosummary/seldonian.spec.Spec.rst", "_autosummary/seldonian.spec.SupervisedSpec.rst", "_autosummary/seldonian.spec.createRLSpec.rst", "_autosummary/seldonian.spec.createSimpleSupervisedSpec.rst", "_autosummary/seldonian.spec.createSupervisedSpec.rst", "_autosummary/seldonian.spec.validate_parse_trees.rst", "_autosummary/seldonian.utils.rst", "_autosummary/seldonian.utils.RL_utils.rst", "_autosummary/seldonian.utils.RL_utils.argmax_multi.rst", "_autosummary/seldonian.utils.RL_utils.clamp.rst", "_autosummary/seldonian.utils.RL_utils.error.rst", "_autosummary/seldonian.utils.io_utils.rst", "_autosummary/seldonian.utils.io_utils.dir_path.rst", "_autosummary/seldonian.utils.io_utils.load_json.rst", "_autosummary/seldonian.utils.io_utils.load_pickle.rst", "_autosummary/seldonian.utils.io_utils.save_json.rst", "_autosummary/seldonian.utils.io_utils.save_pickle.rst", "_autosummary/seldonian.utils.plot_utils.rst", "_autosummary/seldonian.utils.plot_utils.plot_gradient_descent.rst", "_autosummary/seldonian.utils.stats_utils.rst", "_autosummary/seldonian.utils.stats_utils.custom_cumprod.rst", "_autosummary/seldonian.utils.stats_utils.softmax.rst", "_autosummary/seldonian.utils.stats_utils.stddev.rst", "_autosummary/seldonian.utils.stats_utils.tinv.rst", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma.rst", "_autosummary/seldonian.utils.tutorial_utils.rst", "_autosummary/seldonian.utils.tutorial_utils.generate_clipped_data.rst", "_autosummary/seldonian.utils.tutorial_utils.generate_data.rst", "_autosummary/seldonian.utils.tutorial_utils.make_synthetic_regression_dataset.rst", "_autosummary/seldonian.warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning.rst", "api.rst", "getting_started.rst", "index.rst", "overview.rst"], "titles": ["seldonian", "seldonian.RL", "seldonian.RL.Agents", "seldonian.RL.Agents.Agent", "seldonian.RL.Agents.Agent.Agent", "seldonian.RL.Agents.Bases", "seldonian.RL.Agents.Bases.Fourier", "seldonian.RL.Agents.Bases.Fourier.Fourier", "seldonian.RL.Agents.Discrete_Random_Agent", "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent", "seldonian.RL.Agents.Function_Approximators", "seldonian.RL.Agents.Function_Approximators.Function_Approximator", "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator", "seldonian.RL.Agents.Function_Approximators.Linear_FA", "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA", "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA", "seldonian.RL.Agents.Function_Approximators.Table", "seldonian.RL.Agents.Function_Approximators.Table.Q_Table", "seldonian.RL.Agents.Function_Approximators.Table.Table", "seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description", "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent", "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent", "seldonian.RL.Agents.Policies", "seldonian.RL.Agents.Policies.Policy", "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy", "seldonian.RL.Agents.Policies.Policy.Policy", "seldonian.RL.Agents.Policies.Softmax", "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax", "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax", "seldonian.RL.Agents.Policies.Softmax.Softmax", "seldonian.RL.Agents.keyboard_gridworld", "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld", "seldonian.RL.Agents.mountain_car_rough_solution", "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution", "seldonian.RL.Env_Description", "seldonian.RL.Env_Description.Env_Description", "seldonian.RL.Env_Description.Env_Description.Env_Description", "seldonian.RL.Env_Description.Env_Description.check_space_type", "seldonian.RL.Env_Description.Spaces", "seldonian.RL.Env_Description.Spaces.Continuous_Space", "seldonian.RL.Env_Description.Spaces.Discrete_Space", "seldonian.RL.RL_generate_dataset_and_spec_file", "seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string", "seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs", "seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path", "seldonian.RL.RL_generate_dataset_and_spec_file.main", "seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info", "seldonian.RL.RL_model", "seldonian.RL.RL_model.RL_model", "seldonian.RL.RL_runner", "seldonian.RL.RL_runner.create_agent", "seldonian.RL.RL_runner.run_all_trials", "seldonian.RL.RL_runner.run_episode", "seldonian.RL.RL_runner.run_episode_from_dict", "seldonian.RL.RL_runner.run_trial", "seldonian.RL.RL_runner.run_trial_given_agent_and_env", "seldonian.RL.environments", "seldonian.RL.environments.Environment", "seldonian.RL.environments.Environment.Environment", "seldonian.RL.environments.gridworld", "seldonian.RL.environments.gridworld.Gridworld", "seldonian.RL.environments.mountaincar", "seldonian.RL.environments.mountaincar.Mountaincar", "seldonian.RL.environments.n_step_mountaincar", "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar", "seldonian.RL.environments.simglucose_env", "seldonian.RL.environments.simglucose_env.Simglucose", "seldonian.RL.generate_gridworld_episodes", "seldonian.RL.generate_gridworld_episodes.main", "seldonian.RL.generate_mountaincar_episodes", "seldonian.RL.generate_mountaincar_episodes.main", "seldonian.RL.generate_simglucose_episodes", "seldonian.RL.generate_simglucose_episodes.get_max_obs", "seldonian.RL.generate_simglucose_episodes.main", "seldonian.RL.hyperparams_and_settings", "seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict", "seldonian.candidate_selection", "seldonian.candidate_selection.candidate_selection", "seldonian.candidate_selection.candidate_selection.CandidateSelection", "seldonian.dataset", "seldonian.dataset.DataSet", "seldonian.dataset.DataSetLoader", "seldonian.dataset.Episode", "seldonian.dataset.MetaData", "seldonian.dataset.RLDataSet", "seldonian.dataset.RLMetaData", "seldonian.dataset.SupervisedDataSet", "seldonian.dataset.SupervisedMetaData", "seldonian.dataset.load_RL_metadata", "seldonian.dataset.load_supervised_metadata", "seldonian.hyperparam_search", "seldonian.hyperparam_search.HyperparamSearch", "seldonian.models", "seldonian.models.models", "seldonian.models.models.BaseLogisticRegressionModel", "seldonian.models.models.BinaryLogisticRegressionModel", "seldonian.models.models.BoundedLinearRegressionModel", "seldonian.models.models.ClassificationModel", "seldonian.models.models.DummyClassifierModel", "seldonian.models.models.LinearRegressionModel", "seldonian.models.models.LinearRegressionModelListFeatures", "seldonian.models.models.MultiClassLogisticRegressionModel", "seldonian.models.models.RandomClassifierModel", "seldonian.models.models.RegressionModel", "seldonian.models.models.SeldonianModel", "seldonian.models.models.SupervisedModel", "seldonian.models.objectives", "seldonian.models.objectives.Accuracy", "seldonian.models.objectives.False_Negative_Rate", "seldonian.models.objectives.False_Positive_Rate", "seldonian.models.objectives.IS_estimate", "seldonian.models.objectives.Mean_Error", "seldonian.models.objectives.Mean_Squared_Error", "seldonian.models.objectives.Negative_Rate", "seldonian.models.objectives.PDIS_estimate", "seldonian.models.objectives.Positive_Rate", "seldonian.models.objectives.True_Negative_Rate", "seldonian.models.objectives.True_Positive_Rate", "seldonian.models.objectives.binary_logistic_loss", "seldonian.models.objectives.confusion_matrix", "seldonian.models.objectives.gradient_Bounded_Squared_Error", "seldonian.models.objectives.gradient_Mean_Squared_Error", "seldonian.models.objectives.gradient_binary_logistic_loss", "seldonian.models.objectives.multiclass_logistic_loss", "seldonian.models.sklearn_lr", "seldonian.models.sklearn_lr.SkLearnLinearRegressor", "seldonian.models.sklearn_model", "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel", "seldonian.models.sklearn_model.sklearn_predict_vjp", "seldonian.models.zhat_funcs", "seldonian.models.zhat_funcs.batcher", "seldonian.models.zhat_funcs.evaluate_statistic", "seldonian.models.zhat_funcs.sample_from_statistic", "seldonian.models.zhat_funcs.vector_Accuracy", "seldonian.models.zhat_funcs.vector_Error", "seldonian.models.zhat_funcs.vector_False_Negative_Rate", "seldonian.models.zhat_funcs.vector_False_Positive_Rate", "seldonian.models.zhat_funcs.vector_IS_estimate", "seldonian.models.zhat_funcs.vector_Negative_Rate", "seldonian.models.zhat_funcs.vector_PDIS_estimate", "seldonian.models.zhat_funcs.vector_Positive_Rate", "seldonian.models.zhat_funcs.vector_Squared_Error", "seldonian.models.zhat_funcs.vector_True_Negative_Rate", "seldonian.models.zhat_funcs.vector_True_Positive_Rate", "seldonian.models.zhat_funcs.vector_confusion_matrix", "seldonian.optimizers", "seldonian.optimizers.gradient_descent", "seldonian.optimizers.gradient_descent.gradient_descent_adam", "seldonian.optimizers.gradient_descent.setup_gradients", "seldonian.parse_tree", "seldonian.parse_tree.nodes", "seldonian.parse_tree.nodes.BaseNode", "seldonian.parse_tree.nodes.CVaRSQeBaseNode", "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode", "seldonian.parse_tree.nodes.ConstantNode", "seldonian.parse_tree.nodes.InternalNode", "seldonian.parse_tree.nodes.MEDCustomBaseNode", "seldonian.parse_tree.nodes.MultiClassBaseNode", "seldonian.parse_tree.nodes.Node", "seldonian.parse_tree.nodes.RLAltRewardBaseNode", "seldonian.parse_tree.operators", "seldonian.parse_tree.parse_tree", "seldonian.parse_tree.parse_tree.ParseTree", "seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints", "seldonian.safety_test", "seldonian.safety_test.safety_test", "seldonian.safety_test.safety_test.SafetyTest", "seldonian.seldonian_algorithm", "seldonian.seldonian_algorithm.SeldonianAlgorithm", "seldonian.spec", "seldonian.spec.RLSpec", "seldonian.spec.Spec", "seldonian.spec.SupervisedSpec", "seldonian.spec.createRLSpec", "seldonian.spec.createSimpleSupervisedSpec", "seldonian.spec.createSupervisedSpec", "seldonian.spec.validate_parse_trees", "seldonian.utils", "seldonian.utils.RL_utils", "seldonian.utils.RL_utils.argmax_multi", "seldonian.utils.RL_utils.clamp", "seldonian.utils.RL_utils.error", "seldonian.utils.io_utils", "seldonian.utils.io_utils.dir_path", "seldonian.utils.io_utils.load_json", "seldonian.utils.io_utils.load_pickle", "seldonian.utils.io_utils.save_json", "seldonian.utils.io_utils.save_pickle", "seldonian.utils.plot_utils", "seldonian.utils.plot_utils.plot_gradient_descent", "seldonian.utils.stats_utils", "seldonian.utils.stats_utils.custom_cumprod", "seldonian.utils.stats_utils.softmax", "seldonian.utils.stats_utils.stddev", "seldonian.utils.stats_utils.tinv", "seldonian.utils.stats_utils.weighted_sum_gamma", "seldonian.utils.tutorial_utils", "seldonian.utils.tutorial_utils.generate_clipped_data", "seldonian.utils.tutorial_utils.generate_data", "seldonian.utils.tutorial_utils.make_synthetic_regression_dataset", "seldonian.warnings", "seldonian.warnings.custom_warnings", "seldonian.warnings.custom_warnings.custom_formatwarning", "API", "Getting Started", "Seldonian Engine documentation", "Overview"], "terms": {"engin": [0, 160, 204, 206], "packag": [0, 206], "modul": [0, 1, 2, 5, 10, 22, 34, 56, 76, 77, 90, 92, 93, 145, 149, 160, 161, 164, 165, 167, 169, 177, 200, 202, 206], "class": [3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 47, 48, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 113, 115, 116, 117, 119, 123, 124, 125, 126, 127, 128, 144, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 206], "base": [4, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 48, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 85, 86, 87, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 125, 127, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 166, 168, 170, 171, 172, 205, 206], "object": [4, 7, 9, 12, 14, 15, 19, 21, 24, 25, 27, 28, 29, 36, 39, 40, 45, 46, 58, 60, 78, 80, 81, 82, 83, 84, 86, 91, 104, 129, 130, 147, 148, 151, 152, 153, 156, 157, 158, 159, 162, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 184, 185, 186, 187, 189, 205], "__init__": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 48, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 85, 86, 87, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 125, 127, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 166, 168, 170, 171, 172, 205], "__repr__": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 48, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 85, 86, 87, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 125, 127, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 166, 168, 170, 171, 172, 205], "return": [4, 7, 9, 12, 14, 15, 17, 18, 19, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 42, 43, 44, 46, 48, 50, 51, 52, 53, 54, 55, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 85, 86, 87, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 151, 152, 153, 156, 157, 159, 160, 162, 166, 168, 170, 171, 172, 179, 189, 191, 193, 194, 195, 206], "repr": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 48, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 85, 86, 87, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 125, 127, 162, 166, 168, 170, 171, 172], "self": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 48, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 85, 86, 87, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 125, 127, 162, 166, 168, 170, 171, 172], "method": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 48, 58, 60, 62, 64, 66, 78, 80, 81, 82, 83, 84, 85, 86, 87, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 125, 127, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 166, 168, 170, 171, 172, 206], "choose_act": [4, 9, 21, 24, 25, 27, 28, 29, 31, 33, 205], "observ": [4, 7, 9, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 48, 58, 62, 64, 66, 82, 95, 98, 101, 102, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 151, 152, 153, 156, 157, 159, 206], "choos": [4, 9, 31, 33, 206], "an": [4, 7, 9, 14, 15, 19, 21, 24, 25, 27, 28, 29, 31, 33, 36, 50, 54, 58, 60, 62, 64, 66, 128, 151, 152, 153, 157, 158, 159, 160, 183, 184, 185, 186, 187, 195, 206], "action": [4, 9, 15, 17, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 48, 58, 60, 62, 64, 66, 81, 82, 206], "given": [4, 7, 9, 17, 19, 21, 24, 25, 27, 28, 29, 31, 33, 42, 43, 44, 48, 58, 60, 62, 64, 66, 78, 125, 148, 151, 152, 153, 156, 157, 159, 162, 163, 166, 168, 206], "To": [4, 9, 31, 33, 204], "overridden": [4, 9, 25, 31, 33], "paramet": [4, 7, 9, 12, 14, 15, 17, 18, 19, 21, 24, 25, 27, 28, 29, 31, 33, 36, 37, 39, 40, 46, 48, 50, 51, 52, 53, 54, 55, 58, 60, 62, 64, 66, 78, 80, 81, 82, 84, 86, 89, 91, 94, 95, 96, 98, 99, 100, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 166, 168, 170, 171, 172, 173, 174, 175, 176, 183, 184, 185, 186, 187, 189, 191, 193, 194, 195, 197, 198, 199, 206], "The": [4, 9, 14, 15, 17, 18, 21, 27, 28, 29, 31, 33, 39, 60, 78, 80, 81, 86, 89, 91, 94, 95, 96, 98, 99, 100, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 166, 168, 170, 171, 172, 173, 174, 175, 187, 189, 191, 195, 197, 198, 199, 205, 206], "current": [4, 9, 21, 24, 25, 27, 28, 29, 31, 33, 58, 60, 62, 64, 66, 91, 97, 206], "type": [4, 9, 19, 21, 24, 27, 28, 29, 31, 33, 37, 48, 50, 52, 53, 60, 78, 91, 94, 95, 96, 98, 99, 100, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 151, 152, 153, 156, 157, 159, 162, 166, 168, 191, 193, 194, 195, 206], "depend": [4, 9, 21, 24, 27, 28, 29, 31, 33, 127, 151, 152, 153, 156, 157, 159, 206], "environ": [4, 7, 9, 14, 15, 17, 18, 19, 21, 24, 27, 28, 29, 31, 33, 36, 42, 43, 44, 48, 50, 51, 52, 53, 54, 55, 173, 205, 206], "get_param": [4, 9, 21, 24, 25, 27, 28, 29, 31, 33, 205], "retriev": [4, 9, 31, 33], "": [4, 9, 21, 31, 33, 36, 156, 162, 168, 193, 194, 206], "polici": [4, 9, 21, 31, 33, 48, 54, 82, 160, 173, 205, 206], "get_prob_this_act": [4, 9, 21, 24, 25, 27, 28, 29, 31, 33, 48, 205], "get": [4, 7, 9, 17, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 48, 58, 60, 62, 64, 66, 78, 91, 119, 144, 162, 166, 168, 205, 206], "probabl": [4, 9, 17, 21, 24, 25, 27, 28, 29, 31, 33, 48, 82, 91, 95, 98, 101, 102, 107, 108, 109, 113, 115, 116, 117, 119, 127, 133, 135, 136, 138, 140, 142, 143, 144, 152, 162, 194, 206], "provid": [4, 9, 31, 33, 36, 131, 132, 162, 168, 170, 171, 172, 173, 206], "i": [4, 9, 21, 24, 27, 28, 29, 31, 33, 39, 46, 51, 60, 78, 91, 94, 95, 96, 101, 107, 108, 109, 110, 113, 115, 116, 117, 119, 125, 127, 133, 135, 136, 137, 138, 140, 142, 143, 144, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 166, 168, 170, 171, 172, 183, 189, 204, 205, 206], "set_new_param": [4, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 29, 31, 33, 205], "theta": [4, 9, 31, 33, 78, 95, 96, 98, 99, 100, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 151, 152, 153, 156, 157, 159, 166, 168, 206], "updat": [4, 9, 21, 25, 31, 33, 60, 125, 127, 173, 175, 205], "model": [4, 9, 12, 14, 15, 17, 18, 31, 33, 48, 78, 91, 147, 151, 152, 153, 156, 157, 159, 166, 168, 170, 171, 172, 173, 205], "next_observ": [4, 9, 21, 31, 33], "reward": [4, 9, 21, 31, 33, 46, 60, 81, 82, 137, 159, 160, 195, 206], "termin": [4, 9, 21, 31, 33, 58, 60, 62, 64, 66, 205], "accord": [4, 9, 21, 31, 33, 91], "learn": [4, 9, 21, 31, 33, 78, 80, 81, 85, 86, 87, 93, 97, 104, 105, 125, 127, 147, 151, 152, 153, 156, 157, 159, 160, 162, 163, 166, 172, 205, 206], "rule": [4, 9, 21, 31, 33], "overriden": [4, 9, 31, 33], "after": [4, 9, 21, 31, 33], "taken": [4, 9, 21, 31, 33, 36, 48], "take": [4, 9, 21, 24, 25, 31, 33, 48, 162, 206], "bool": [4, 9, 21, 31, 33, 60, 78, 158, 162, 166, 170, 171, 172, 173, 189], "whether": [4, 9, 21, 24, 27, 28, 29, 31, 33, 54, 60, 78, 91, 158, 162, 166, 168, 170, 171, 172, 173, 174, 175, 183, 189, 199, 206], "hyperparam_and_setting_dict": [7, 21, 24, 27, 28, 29], "env_desc": 7, "basi": [7, 14, 15, 24, 27, 28, 29], "us": [7, 14, 15, 21, 27, 31, 39, 40, 46, 48, 54, 58, 62, 64, 66, 78, 91, 94, 95, 96, 99, 100, 101, 125, 127, 147, 148, 151, 152, 153, 156, 157, 159, 160, 162, 168, 170, 171, 172, 173, 174, 175, 194, 195, 199, 204, 206], "linear": [7, 14, 15, 24, 27, 28, 29, 96, 99, 100, 125], "valu": [7, 15, 17, 27, 28, 29, 40, 78, 91, 130, 134, 141, 147, 151, 152, 153, 154, 156, 157, 159, 162, 166, 168, 197, 199, 206], "function": [7, 12, 14, 15, 16, 21, 24, 27, 28, 29, 35, 41, 49, 60, 67, 69, 71, 74, 78, 79, 96, 106, 125, 126, 128, 129, 130, 146, 147, 148, 151, 153, 157, 159, 160, 161, 162, 163, 166, 169, 170, 171, 172, 173, 174, 175, 178, 182, 188, 189, 190, 194, 196, 201, 206], "approxim": [7, 12, 14, 15, 21, 24, 27, 28, 29], "see": [7, 28, 152, 156, 170, 171, 172, 205, 206], "http": [7, 28, 152, 156, 191, 194], "irl": 7, "c": [7, 28, 119, 144, 152, 153], "brown": 7, "edu": [7, 28, 152], "fb": 7, "php": 7, "refer": [7, 159, 160, 206], "hyperparameter_and_setting_dict": [7, 24, 27, 28, 29, 50, 51, 53, 54], "specifi": [7, 24, 27, 28, 29, 50, 51, 54, 55, 160, 162, 170, 171, 172, 206], "number": [7, 17, 18, 24, 27, 28, 29, 36, 39, 40, 50, 51, 54, 55, 60, 78, 80, 86, 91, 94, 95, 101, 115, 119, 130, 144, 147, 151, 152, 153, 156, 157, 159, 162, 166, 197, 198, 199, 206], "episod": [7, 24, 27, 28, 29, 45, 46, 50, 51, 52, 53, 54, 55, 68, 70, 72, 73, 80, 81, 84, 86, 110, 114, 137, 139, 205, 206], "per": [7, 24, 27, 28, 29, 50, 51, 114, 139, 189], "trial": [7, 24, 27, 28, 29, 45, 50, 51, 54, 68, 70, 73], "env_descript": [7, 9, 14, 15, 19, 21, 24, 27, 28, 29, 31, 60, 205], "access": [7, 9, 14, 15, 19, 21, 24, 27, 28, 29, 36], "attribut": [7, 9, 14, 15, 19, 21, 24, 27, 28, 29, 36, 60, 81, 84, 153, 157, 159, 162, 168, 206], "calculate_num_featur": [7, 205], "order": [7, 206], "max_coupled_var": 7, "num_obs_dim": 7, "determin": [7, 91, 147, 162, 173, 174, 175], "featur": [7, 14, 15, 81, 86, 94, 95, 96, 98, 99, 100, 101, 102, 107, 108, 109, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 151, 152, 153, 156, 157, 159, 168, 206], "construct_basis_matrix": [7, 205], "creat": [7, 19, 24, 27, 28, 29, 45, 50, 60, 78, 81, 91, 125, 127, 151, 152, 153, 156, 157, 159, 162, 163, 168, 173, 174, 175, 206], "matrix": [7, 119, 144, 153, 160, 206], "get_featur": [7, 205], "ob": [7, 17, 18, 21, 24, 25, 27, 28, 29, 36, 58, 60, 62, 64, 66, 81, 162], "get_normalized_observ": [7, 205], "normal": [7, 115, 197, 198, 199], "act": 9, "discret": [9, 24, 27, 28, 29, 36, 37, 40], "space": [9, 24, 27, 28, 29, 36, 37, 60, 205], "pick": 9, "uniform": 9, "random": [9, 197, 198, 199], "capabl": [9, 18], "new_param": [12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 29, 48], "set": [12, 14, 15, 17, 18, 21, 24, 27, 28, 29, 54, 78, 91, 149, 153, 154, 168, 206], "new": [12, 14, 15, 17, 18, 58, 62, 64, 66, 160, 205, 206], "weight": [12, 14, 15, 17, 18, 21, 24, 27, 28, 29, 48, 78, 91, 94, 95, 96, 98, 99, 100, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 151, 152, 153, 156, 157, 159, 160, 162, 163, 166, 168, 170, 171, 172, 173, 195, 206], "encod": [14, 15, 206], "A": [15, 17, 19, 27, 48, 55, 58, 60, 62, 64, 66, 128, 137, 139, 153, 157, 159, 160, 162, 170, 171, 172, 183, 184, 185, 186, 187, 205], "state": [15, 17, 18, 21, 36, 60], "min_stat": [17, 18], "num_stat": [17, 18, 60], "num_act": 17, "q": [17, 19, 27], "contain": [17, 21, 25, 60, 78, 81, 91, 93, 131, 132, 147, 151, 152, 153, 156, 157, 159, 160, 162, 166, 168, 170, 171, 172, 174, 175, 206], "transit": [17, 58, 60, 62, 64, 66, 205], "int": [17, 18, 27, 40, 60, 78, 80, 86, 91, 119, 130, 144, 147, 151, 152, 153, 156, 157, 158, 159, 162, 166, 194, 197, 198, 199], "smallest": [17, 18], "total": [17, 18, 40, 91, 130, 162], "from_environment_state_to_0_indexed_st": [17, 18, 205], "env_stat": [17, 18], "convert": [17, 18, 24, 27, 28, 29, 125, 127, 128], "0": [17, 18, 24, 27, 28, 29, 39, 78, 96, 102, 107, 108, 109, 113, 115, 116, 117, 133, 135, 136, 138, 140, 142, 143, 147, 151, 152, 153, 156, 157, 159, 162, 166, 170, 171, 172, 173, 174, 175, 195, 197, 198, 199, 206], "index": [17, 18, 24, 27, 28, 29, 78, 119, 144, 153, 157, 158, 159, 195, 206], "you": [17, 18, 81, 130, 162, 166, 187, 189, 204, 205, 206], "want": [17, 18, 37, 81, 91, 130, 157, 159, 162, 166, 187, 189, 204, 206], "get_action_values_given_st": [17, 24, 27, 28, 29, 205], "state_number_not_zero_index": 17, "possibl": [17, 21, 24, 27, 28, 29, 36, 58, 60, 62, 64, 66, 152, 206], "environment": 17, "specif": [17, 24, 27, 28, 29, 50, 91, 159, 168, 169, 170, 171, 172, 206], "arrai": [17, 21, 24, 27, 28, 29, 39, 48, 78, 91, 94, 95, 101, 119, 125, 127, 128, 144, 160, 191, 195, 206], "get_action_values_given_zero_indexed_st": [17, 205], "zero_indexed_state_numb": 17, "hold": [18, 80, 82, 83, 84, 85, 86, 87], "reindex": 18, "descript": [19, 24, 27, 28, 29, 58, 60, 62, 64, 66, 206], "q_tabl": [19, 21, 205], "parametr": 21, "softmax": [21, 205, 206], "pi": 21, "frac": 21, "e": [21, 46, 78, 80, 81, 84, 86, 131, 132, 147, 151, 152, 153, 156, 157, 159, 162, 163, 166, 170, 171, 172, 206], "p": [21, 194, 206], "sum_": 21, "addit": [21, 206], "info": [21, 91, 147, 168], "about": [21, 147, 162, 206], "data": [21, 78, 81, 91, 95, 101, 118, 123, 130, 151, 152, 153, 156, 157, 159, 162, 166, 168, 170, 171, 172, 173, 174, 175, 186, 187, 193, 197, 198, 199, 206], "gener": [21, 24, 29, 197, 198, 199, 206], "variabl": [21, 39, 60, 151, 152, 153, 154, 156, 157, 158, 159, 160, 162], "fa": 21, "select": [21, 24, 25, 27, 28, 29, 76, 77, 78, 90, 91, 145, 147, 151, 152, 153, 156, 157, 159, 166, 168, 170, 171, 172, 173, 174, 205], "get_action_valu": [21, 205], "all": [21, 24, 27, 28, 29, 48, 58, 80, 86, 97, 103, 104, 105, 110, 114, 118, 123, 125, 127, 153, 157, 158, 159, 162, 166, 206], "from": [21, 24, 27, 28, 29, 48, 50, 81, 82, 89, 91, 96, 99, 100, 128, 130, 137, 149, 156, 161, 162, 168, 184, 185, 199, 206], "thi": [21, 48, 58, 60, 62, 64, 66, 113, 115, 119, 120, 133, 135, 136, 138, 140, 142, 143, 144, 147, 151, 152, 153, 156, 157, 158, 159, 162, 168, 197, 199, 205, 206], "float": [21, 27, 28, 29, 48, 60, 91, 98, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 168, 170, 171, 172, 173, 174, 175, 191, 193, 194, 195, 197, 198, 199, 206], "Not": [21, 31, 160], "implement": [21, 25, 58, 60, 62, 64, 66, 91, 95, 96, 98, 99, 100, 101, 102, 125, 127, 147, 191, 194, 206], "where": [24, 27, 55, 78, 125, 147, 151, 152, 153, 156, 157, 159, 162, 166, 168, 173, 174, 175, 186, 189, 195, 206], "ar": [24, 27, 37, 39, 55, 78, 91, 152, 153, 159, 160, 162, 166, 168, 176, 189, 195, 205, 206], "defin": [24, 25, 39, 152, 160, 206], "how": [24, 25, 28, 162, 206], "construct_basis_and_linear_fa": [24, 27, 28, 29, 205], "dictionari": [24, 27, 28, 29, 50, 55, 89, 147, 160, 168, 170, 171, 172, 189, 206], "from_0_indexed_action_to_environment_act": [24, 27, 28, 29, 205], "action_0_index": [24, 27, 28, 29], "env": [24, 27, 28, 29, 43, 52, 53, 55], "from_environment_action_to_0_indexed_act": [24, 27, 28, 29, 205], "env_act": [24, 27, 28, 29], "make_state_action_fa": [24, 27, 28, 29, 205], "contin": [24, 27, 28, 29, 37], "four": [25, 206], "which": [25, 37, 51, 113, 125, 127, 151, 152, 153, 155, 156, 157, 159, 160, 162, 173, 175, 206], "must": [25, 125, 127, 128, 151, 206], "ani": [25, 78, 163, 206], "both": [27, 162, 206], "faster": 27, "than": [27, 39, 55, 152, 162, 166, 206], "just": [27, 127, 168], "becaus": [27, 162, 189], "cach": [27, 162], "lookup": 27, "tabl": 27, "_arg": [27, 205], "helper": [27, 60, 162], "acceler": 27, "calcul": [27, 60, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 134, 135, 136, 137, 138, 139, 140, 141, 147, 151, 152, 153, 156, 157, 159, 162, 166, 195, 206], "_denom": [27, 205], "choose_action_from_action_valu": [27, 28, 29, 205], "action_valu": [27, 28, 29], "list": [27, 28, 29, 46, 48, 51, 54, 55, 78, 80, 81, 82, 84, 86, 91, 110, 114, 137, 139, 151, 152, 153, 156, 157, 159, 160, 162, 163, 166, 170, 171, 172, 173, 174, 175, 176, 206], "param": [27, 28, 29, 115, 120], "get_action_probs_from_action_valu": [27, 28, 29, 205], "get_e_to_the_something_term": [27, 28, 29, 205], "exponenti": [27, 28, 29, 147, 162], "action_prob": [27, 48, 82], "obsertavt": [27, 29], "obserav": [27, 28, 29], "alpha": [28, 152], "5": [28, 39, 102, 170, 171, 172, 206], "mix": 28, "peopl": [28, 152], "umass": [28, 152], "pthoma": [28, 152], "paper": [28, 152], "thomas2015b": 28, "pdf": [28, 152], "equat": 28, "mu": 28, "last": [28, 168, 206], "paragraph": 28, "befor": [28, 54, 125, 127, 128, 206], "section": 28, "2": [28, 39, 156, 157, 159, 186, 206], "1": [28, 39, 95, 107, 108, 109, 113, 115, 116, 117, 125, 133, 135, 136, 138, 140, 142, 143, 147, 151, 152, 153, 157, 159, 197, 198, 199, 202, 206], "stationar": 28, "hyperparamet": [28, 90, 91, 170, 171, 172, 206], "100": [28, 91, 147, 152], "far": [28, 206], "behavior": [28, 48, 78, 82, 147, 149, 160, 161, 162, 166, 170, 171, 172, 205], "can": [28, 159, 162, 173, 175, 206], "pi_b": [28, 84], "under": 28, "discrete_action_polici": [29, 205], "debug": [31, 46, 58, 62, 64, 66, 91, 147, 168], "gridworld": [31, 205], "intend": 31, "public": 31, "observation_spac": 36, "action_spac": 36, "describ": [36, 60, 81], "conveni": [36, 162, 163, 173, 174, 175, 206], "continu": [36, 39], "made": 36, "get_min_act": [36, 205], "first": [36, 157, 162, 205, 206], "get_min_st": [36, 205], "get_num_act": [36, 205], "get_num_observation_dim": [36, 205], "dimens": [36, 39, 197, 198, 199], "get_num_st": [36, 205], "also": [36, 154, 155, 158, 162, 195, 206], "call": [36, 127, 130, 151, 152, 153, 156, 157, 159, 195, 206], "here": [36, 127, 160, 206], "desired_typ": 37, "valid": [37, 39, 162, 206], "ensur": [37, 176, 206], "equival": [37, 151, 152, 153, 156, 157, 159], "discrete_spac": [37, 205], "continous_spac": 37, "we": [37, 91, 151, 152, 153, 156, 157, 159, 162, 204, 206], "match": 37, "bound": [39, 78, 96, 120, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 166, 168, 170, 171, 172, 206], "np": [39, 191], "ndarrai": [39, 78, 91, 96, 98, 99, 100, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 151, 152, 153, 156, 157, 159, 166, 168, 191, 193, 195], "shape": [39, 94, 95, 101, 119, 125, 127, 144, 206], "num_dim": 39, "min": [39, 40, 156, 206], "max": [39, 40, 206], "each": [39, 51, 82, 84, 95, 98, 101, 102, 107, 113, 115, 116, 117, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 151, 152, 153, 156, 157, 159, 160, 162, 163, 168, 170, 171, 172, 189, 206], "For": [39, 157, 160, 206], "exampl": [39, 157, 206], "3d": 39, "x": [39, 94, 95, 96, 98, 99, 100, 101, 102, 107, 108, 109, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 153, 156, 191, 192, 197, 198, 199], "y": [39, 94, 95, 96, 99, 100, 101, 107, 108, 109, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 156, 197, 198, 199], "4": [39, 152, 160, 206], "z": [39, 152], "12": 39, "6": [39, 170, 172, 173, 174, 175, 206], "8": [39, 54, 206], "would": [39, 78, 147, 157, 159, 160, 170, 171, 172, 206], "check_bounds_valid": [39, 205], "check": [39, 60, 162, 183], "format": [39, 81, 206], "maximum": [39, 40, 60, 152, 162], "larger": [39, 152], "minimum": [39, 40, 152, 162, 206], "get_num_dim": [39, 205], "get_num_valu": [40, 205], "env_nam": [42, 43, 44], "name": [42, 43, 44, 78, 80, 81, 84, 86, 131, 132, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 170, 171, 172, 174, 206], "default": [42, 43, 81, 147, 148, 158, 162, 163, 170, 171, 172, 173, 175, 206], "constraint": [42, 78, 137, 147, 148, 149, 157, 160, 161, 162, 163, 166, 168, 170, 171, 172, 173, 174, 175, 176, 189, 205], "string": [42, 78, 154, 155, 158, 159, 160, 162, 163, 168, 170, 171, 172, 173, 174, 175, 205], "kwarg": [43, 48, 78, 80, 81, 84, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 151, 152, 153, 154, 155, 156, 157, 159, 162, 166, 173, 202], "path": [44, 175, 183, 189], "metadata": [44, 80, 81, 84, 85, 86, 87, 89, 147, 174, 175, 205, 206], "file": [44, 81, 89, 91, 168, 173, 174, 175, 184, 185, 186, 187, 206], "run": [45, 51, 52, 53, 54, 55, 68, 70, 73, 78, 79, 91, 92, 125, 147, 165, 166, 167, 168, 169, 170, 171, 172, 189, 205], "rlspec": [45, 173, 205, 206], "save": [45, 68, 70, 73, 173, 174, 175, 186, 187, 189, 206], "disk": [45, 68, 70, 73, 78, 81], "print": [46, 58, 60, 62, 64, 66, 91, 147, 168], "sum": [46, 107, 113, 115, 116, 117, 195], "env_kwarg": [48, 173, 206], "seldonianmodel": [48, 78, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 151, 152, 153, 156, 157, 159, 166, 171, 172, 205], "parameter": [48, 206], "dict": [48, 51, 54, 131, 132, 147, 151, 152, 153, 156, 157, 159, 160, 162, 170, 171, 172, 173, 189], "pertain": [48, 173], "gamma": [48, 60, 173, 195, 206], "discount": [48, 60, 173, 195, 206], "factor": [48, 60, 173, 195, 206], "singl": [48, 52, 53, 54, 157, 162, 206], "pair": [48, 96, 99, 100, 156, 206], "timestep": [48, 60, 82, 206], "get_probs_from_observations_and_act": [48, 205], "those": [48, 160], "agent": [50, 51, 52, 53, 54, 55, 205], "mani": [51, 173, 175], "consist": [51, 54, 206], "same": [51, 125, 127, 156], "_i": [51, 125, 206], "model_param": [53, 54], "none": [53, 54, 78, 81, 83, 158, 166, 168, 170, 171, 172, 173], "parallel": 54, "fals": [54, 60, 78, 91, 107, 108, 109, 116, 117, 131, 135, 136, 147, 157, 160, 162, 168, 170, 171, 172, 173, 174, 175, 186, 187, 189, 199, 206], "n_worker": 54, "arbitrari": [54, 60, 159], "process": [54, 91, 168, 206], "cpu": 54, "num_episod": 55, "wrapper": [55, 78, 90, 148, 166, 168, 184, 185, 186, 187], "run_trial": [55, 205], "explic": 55, "rather": 55, "via": [55, 162, 206], "get_env_descript": [58, 60, 62, 64, 66, 205], "overrid": [58, 60, 62, 64, 66, 96, 151, 152, 153, 156, 157, 159], "child": [58, 60, 62, 64, 66, 158, 160, 162, 206], "get_observ": [58, 60, 62, 64, 66, 205], "reset": [58, 60, 62, 64, 66, 162, 205], "initi": [58, 60, 62, 64, 66, 78, 91, 147, 162, 170, 171, 172, 173], "start_visu": [58, 60, 62, 64, 66, 205], "turn": [58, 60, 62, 64, 66], "visual": [58, 60, 62, 64, 66, 154, 155, 158, 162, 204, 205, 206], "debugg": [58, 60, 62, 64, 66], "stop_visu": [58, 60, 62, 64, 66, 205], "off": [58, 60, 62, 64, 66], "out": [58, 60, 62, 64, 66, 91, 147, 168], "size": [60, 78, 91, 130], "3": [60, 152, 157, 197, 199, 206], "squar": [60, 111, 112, 120, 121, 141, 152, 160, 206], "grid": 60, "cell": 60, "side": [60, 162], "distinct": 60, "terminal_st": 60, "occupi": 60, "time": [60, 130, 166, 168], "max_tim": 60, "allow": [60, 159], "expect": [60, 151, 152, 153, 156, 157, 159, 160], "create_env_descript": [60, 205], "is_in_goal_st": [60, 205], "goal": [60, 206], "true": [60, 107, 109, 116, 117, 119, 133, 142, 143, 144, 151, 152, 153, 156, 157, 159, 160, 170, 171, 172, 173, 174, 175, 189, 206], "go": [60, 206], "back": [60, 125, 127, 128, 170, 171, 172], "between": [60, 107, 108, 109, 113, 115, 116, 117, 133, 135, 136, 138, 140, 142, 143, 156, 180, 206], "reach": 60, "next": 60, "update_posit": [60, 205], "posit": [60, 95, 98, 102, 107, 108, 109, 113, 115, 116, 117, 131, 135, 136, 138, 140, 143, 152, 157, 160, 162, 206], "inform": [60, 206], "candid": [76, 77, 78, 91, 145, 147, 151, 152, 153, 156, 157, 159, 166, 168, 170, 171, 172, 173, 174, 205], "candidate_dataset": [78, 91], "n_safeti": [78, 91, 152], "parse_tre": [78, 166, 170, 171, 172, 176, 205, 206], "primary_object": [78, 147, 148, 166, 168, 170, 171, 172], "optimization_techniqu": [78, 170, 171, 172, 206], "barrier_funct": [78, 170, 171, 172, 206], "optim": [78, 91, 168, 170, 171, 172, 205, 206], "powel": [78, 206], "initial_solut": [78, 91], "regim": [78, 80, 81, 83, 86, 160, 162, 163, 166, 206], "supervised_learn": [78, 80, 81, 86, 162, 163, 166, 206], "write_logfil": [78, 91, 168], "dataset": [78, 91, 134, 141, 151, 152, 153, 156, 157, 159, 163, 166, 168, 170, 171, 172, 173, 174, 175, 199, 205], "length": [78, 95, 152, 160], "safeti": [78, 91, 147, 151, 152, 153, 156, 157, 159, 164, 165, 166, 168, 170, 171, 172, 173, 174, 205], "when": [78, 107, 108, 109, 116, 117, 151, 153, 157, 159, 162, 189, 206], "predict": [78, 95, 96, 98, 99, 100, 101, 102, 108, 109, 115, 119, 125, 127, 133, 135, 136, 142, 143, 144, 153, 157, 205, 206], "confid": [78, 151, 152, 153, 155, 156, 157, 158, 159, 162, 173, 174, 175, 206], "dure": [78, 91, 160, 168, 170, 171, 172, 206], "parsetre": [78, 166, 170, 171, 176, 205, 206], "pars": [78, 149, 151, 154, 155, 156, 158, 160, 161, 162, 163, 166, 170, 171, 172, 176, 204, 206], "tree": [78, 149, 151, 154, 155, 156, 158, 160, 161, 162, 163, 166, 170, 171, 172, 176, 204, 206], "sole": [78, 147, 170, 171, 172], "absenc": [78, 147, 170, 171, 172], "loss": [78, 118, 122, 123, 147, 170, 171, 172, 206], "str": [78, 80, 81, 84, 86, 131, 132, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 166, 168, 170, 171, 172, 173, 174, 175, 183, 184, 185, 186, 187, 189], "g": [78, 80, 81, 84, 86, 131, 132, 147, 151, 152, 153, 156, 157, 159, 162, 163, 166, 170, 171, 172, 206], "gradient_desc": [78, 170, 171, 172, 205, 206], "categori": [78, 80, 81, 86, 162, 163, 166, 202], "machin": [78, 80, 81, 86, 93, 97, 104, 151, 152, 153, 156, 157, 159, 162, 163, 166, 205, 206], "algorithm": [78, 79, 80, 81, 86, 90, 91, 92, 156, 162, 163, 166, 167, 168, 169, 170, 171, 172, 206], "reinforcement_learn": [78, 80, 81, 86, 162, 163, 166, 206], "write": [78, 91, 157, 168, 206], "output": [78, 127, 206], "calculate_batch": [78, 205], "batch_index": 78, "batch_siz": [78, 130, 147], "batch": [78, 130], "gradient": [78, 120, 121, 122, 127, 147, 148, 170, 171, 172, 173, 189, 206], "descent": [78, 147, 189, 206], "doe": [78, 156, 162, 205], "anyth": 78, "instead": 78, "batch_dataset": 78, "evaluate_primary_object": [78, 166, 168, 205], "primari": [78, 147, 148, 159, 166, 168, 170, 171, 172, 173, 189, 206], "fix": [78, 152, 166, 168, 206], "input": [78, 98, 102, 130, 151, 152, 153, 156, 157, 159, 183, 184, 191, 195, 206], "numpi": [78, 91, 96, 98, 99, 100, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 151, 152, 153, 156, 157, 159, 166, 168, 191, 193, 195], "evalu": [78, 120, 131, 132, 151, 152, 153, 156, 157, 159, 162, 166, 168], "get_constraint_upper_bound": [78, 205], "upper": [78, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 166, 168, 206], "objective_with_barri": [78, 205], "minimization_techniqu": 78, "barrier": [78, 206], "add": [78, 162], "larg": 78, "penalti": 78, "violat": [78, 162, 206], "nsf": [78, 91, 168, 206], "build": [79, 149, 161, 162, 169], "load": [79, 81, 89, 184, 185, 206], "num_datapoint": [80, 86], "meta": [80, 84, 86], "datafram": [80, 84, 86, 110, 114, 137, 139, 151, 152, 153, 156, 157, 159, 162], "row": [80, 86, 119, 144, 153, 156, 189, 206], "rl": [80, 82, 84, 86, 162, 170, 195, 205, 206], "meta_inform": [80, 84, 86], "column": [80, 86, 119, 144, 151, 152, 153, 156, 157, 159, 162, 163, 174, 206], "load_rl_dataset_from_csv": [81, 205, 206], "filenam": [81, 89, 184, 185, 186, 187, 202, 206], "metadata_filenam": [81, 88, 206], "rldataset": [81, 205, 206], "csv": [81, 206], "episode_index": 81, "probability_of_act": 81, "load_rl_dataset_from_episode_fil": [81, 205, 206], "pickl": [81, 168, 185, 187, 206], "load_supervised_dataset": [81, 205, 206], "file_typ": 81, "superviseddataset": [81, 205, 206], "label": [81, 86, 94, 95, 96, 98, 99, 100, 101, 102, 109, 111, 112, 118, 119, 120, 121, 122, 123, 125, 127, 131, 132, 133, 134, 135, 136, 141, 142, 143, 144, 151, 152, 153, 156, 157, 159, 168, 189, 206], "sensit": [81, 168, 174, 206], "extens": 81, "alt_reward": 82, "sub_regim": [83, 87, 160, 162, 163, 172, 174, 206], "all_col_nam": [83, 85, 87], "sensitive_col_nam": [83, 85, 87, 174], "sensitive_attr": [84, 86], "o": 84, "r": [84, 121, 122], "supervis": [85, 87, 105, 127, 160, 162, 172, 206], "feature_col_nam": 87, "label_col_nam": 87, "required_col_nam": 88, "json": [89, 184, 186, 206], "spec": [91, 168, 205], "all_frac_data_in_candidate_select": 91, "find": [91, 147, 206], "best": [91, 206], "safe": 91, "solut": [91, 147, 162, 166, 168, 189, 206], "note": [91, 206], "onli": [91, 97, 152, 160, 189, 206], "split": [91, 162, 168, 206], "percentag": 91, "complet": [91, 168, 205, 206], "fraction": [91, 168, 170, 171, 172, 173, 174], "being": [91, 107, 113, 115, 116, 117, 135, 136, 138, 140, 142, 143, 151, 153, 157, 159], "consid": [91, 152], "bootstrap_sample_dataset": [91, 205], "n_bootstrap": 91, "bootstrap": 91, "sampl": [91, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 131, 132, 137, 139, 152, 193, 206], "point": [91, 95, 101, 118, 123, 147, 156, 184, 185, 197, 198, 199, 206], "desir": 91, "candidate_select": [91, 168, 205], "should": [91, 206], "create_dataset": [91, 205], "frac_data_in_safeti": [91, 168, 170, 171, 172, 173, 174, 175], "shuffl": 91, "partit": [91, 206], "test": [91, 147, 151, 152, 153, 156, 157, 159, 164, 165, 166, 168, 170, 171, 172, 173, 174, 189, 205], "remain": [91, 168, 170, 171, 172, 173, 174], "est_prob_pass": [91, 205], "rho_prim": 91, "safety_dataset": [91, 166], "n_candid": [91, 152], "write_cs_logfil": [91, 168, 206], "bootstrap_it": 91, "estim": [91, 110, 114, 137, 139, 151, 152, 153, 157, 159, 206], "probabiilti": 91, "find_best_hyperparam": [91, 205], "indic": [91, 153, 168, 179, 206], "includ": [91, 94, 95, 101, 119, 144, 162, 206], "rtyle": 91, "tupl": [91, 162, 168, 206], "get_initial_solut": [91, 205], "soluion": 91, "get_safety_s": [91, 205], "n_total": 91, "amount": 91, "run_cor": [91, 205], "core": [91, 205], "log": [91, 162, 168, 206], "passed_safeti": [91, 168, 206], "found": [91, 147, 166, 168, 206], "pass": [91, 125, 127, 128, 151, 152, 153, 156, 157, 159, 162, 166, 168, 173, 206], "run_safety_test": [91, 168, 205], "candidate_solut": [91, 168], "some": [91, 162, 168, 206], "other": [91, 157, 168, 206], "mean": [91, 111, 112, 121, 134, 141, 156, 160, 168, 197, 198, 199, 206], "safety_test": [91, 168, 205, 206], "main": [93, 161, 205], "classificationmodel": [94, 98, 102, 205, 206], "binari": [94, 95, 97, 118, 122], "multi": [94, 101, 123, 160], "logist": [94, 95, 101, 118, 122, 123], "regress": [94, 95, 96, 99, 100, 101, 103, 156, 160, 162, 163, 172, 174, 206], "fit": [94, 95, 96, 99, 100, 101, 205, 206], "train": [94, 95, 96, 99, 100, 101, 206], "let": [94, 95, 101, 119, 144, 206], "datapoint": [94, 95, 101, 119, 125, 130, 144, 166], "j": [94, 95, 101, 119, 125, 144, 153], "bia": [94, 95, 101, 119, 144], "term": [94, 95, 101, 119, 125, 144, 147], "provi": [94, 95, 101, 119, 144, 206], "k": [94, 95, 101, 119, 144, 153], "baselogisticregressionmodel": [95, 101, 205], "have": [95, 98, 101, 102, 162, 206], "linearregressionmodel": [96, 205, 206], "sever": [96, 152, 156, 206], "parent": [96, 97, 103, 104, 105, 152, 156], "assum": 96, "intercept": [96, 125], "nxm": [96, 99, 100], "nx1": [96, 99, 100], "origin": 96, "squash": 96, "supervisedmodel": [97, 103, 127, 205], "classif": [97, 118, 123, 157, 160, 162, 172, 174, 206], "support": [97, 160, 206], "classifi": [98, 102], "alwai": [98, 102, 147, 151, 152, 153, 156, 157, 159, 162, 206], "regardless": [98, 102, 206], "regressionmodel": [99, 100, 205, 206], "ha": [102, 157, 160, 206], "prob": 102, "neg": [107, 108, 109, 113, 116, 133, 135, 136, 138, 142, 160, 162], "rate": [107, 108, 109, 113, 115, 116, 117, 131, 133, 135, 136, 138, 140, 142, 143, 147, 157, 160, 162, 206], "whole": [107, 108, 109, 111, 112, 113, 115, 116, 117, 131, 162], "fact": [107, 116, 117], "wa": [107, 108, 109, 116, 117, 119, 144, 156, 157, 162, 168, 206], "instanc": [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "probabilist": [108, 109], "averag": [108, 109, 118, 123, 189], "over": [108, 109, 110, 111, 112, 114, 118, 123, 125, 131, 166, 206], "truth": 108, "unweight": [110, 137], "import": [110, 114, 137, 139, 147, 204, 206], "error": [111, 112, 120, 121, 134, 141, 152, 156, 160, 205, 206], "y_hat": 111, "decis": [114, 139], "pdi": [114, 139], "l_i": [119, 144], "l_k": [119, 144], "element": [119, 144], "confus": [119, 144, 153, 160], "correspond": [119, 144, 163, 194, 206], "analyt": 120, "w": [121, 122], "t": [121, 122, 151, 152, 153, 156, 157, 159, 194], "perceptron": 122, "supervisedsklearnbasemodel": [125, 128, 205], "regressor": 125, "scikit": [125, 127, 206], "backward_pass": [125, 127, 205], "jacobian": [125, 128], "d": [125, 128], "forward_pass": [125, 127, 205], "dtheta_": 125, "keep": [125, 162], "mind": 125, "henc": 125, "create_model": [125, 127, 205], "make": [125, 162, 189, 206], "get_model_param": [125, 127, 205], "arg": [125, 127, 202], "flatten": [125, 127], "1d": [125, 127], "do": [125, 127, 128, 205], "forward": [125, 127, 128], "through": [125, 127, 128, 156, 162, 166], "sklearn": [125, 127, 128], "pred_numpi": [125, 127], "rtype": [125, 127], "update_model_param": [125, 127, 205], "reshap": [125, 127], "external_grad": 127, "backward": [127, 128], "vector": [127, 128, 134, 137, 139, 141, 147, 151, 152, 153, 156, 157, 159, 193], "respect": 127, "obtain": [128, 148], "pred": 128, "dtheta": 128, "result": [128, 206], "inherit": [128, 153, 157, 159, 206], "fn": 128, "repres": [128, 151, 154, 155, 160, 162, 206], "oper": [128, 151, 155, 205, 206], "func": 130, "n": [130, 189, 206], "num_batch": 130, "up": [130, 156, 162, 206], "measur": [130, 151, 153, 157, 159, 160, 162, 166, 206], "statistic_nam": [131, 132], "data_dict": [131, 132, 151, 152, 153, 156, 157, 159], "statist": [131, 132, 151, 157, 160, 206], "fpr": [131, 132, 151, 160, 206], "correct": [133, 193], "subject": [135, 136, 142, 143, 206], "actual": [135, 136, 142, 143, 152, 206], "weighted_return": [137, 139], "pre": 137, "present": [137, 156, 162], "n_constraint": 147, "upper_bounds_funct": [147, 148], "theta_init": 147, "lambda_init": [147, 170, 171, 172], "batch_calcul": 147, "n_batch": 147, "n_epoch": 147, "alpha_theta": [147, 170, 171, 172], "05": [147, 151, 152, 153, 156, 157, 159, 206], "alpha_lamb": [147, 170, 171, 172], "beta_veloc": [147, 170, 171, 172], "9": [147, 170, 171, 172, 195, 206], "beta_rmsprop": [147, 170, 171, 172], "gradient_librari": [147, 148, 170, 171, 172], "autograd": [147, 148, 170, 171, 172, 173, 191], "verbos": [147, 170, 171, 172, 173, 174, 175, 186, 187], "simultan": 147, "ascent": 147, "adam": [147, 170, 171, 172, 206], "lagrangian": [147, 189, 206], "l": [147, 168, 189, 206], "lambda": [147, 206], "f": [147, 156, 168, 189, 206], "lagrang": [147, 189], "multipli": [147, 162, 189], "done": 147, "saddl": 147, "Being": 147, "part": [147, 206], "No": [147, 206], "decai": 147, "veloc": 147, "rmsprop": 147, "num_it": [147, 170, 171, 172], "iter": [147, 156, 206], "librari": [147, 148, 205, 206], "comput": [147, 148, 156, 157, 159, 162, 170, 171, 172], "automat": [147, 148], "boolean": [147, 160, 173, 174, 175, 187, 199, 206], "flag": [147, 173, 174, 175, 187, 199, 206], "control": [147, 173, 174, 175, 199, 206], "lower": [151, 152, 153, 154, 155, 156, 157, 158, 159, 162], "inf": [151, 152, 153, 155, 156, 157, 159], "conditional_column": [151, 152, 153, 156, 157, 159], "leaf": [151, 154, 155, 166], "condit": [151, 152, 153, 156, 157, 159, 162, 163], "node_typ": [151, 154], "equal": [151, 162, 163, 166, 206], "base_nod": 151, "delta": [151, 152, 153, 156, 157, 159, 162, 163, 173, 174, 175, 206], "share": [151, 152, 156], "put": [151, 152, 156], "measure_function_nam": 151, "measure_funct": [151, 206], "calculate_bound": [151, 152, 153, 156, 157, 159, 205], "bound_method": [151, 152, 153, 156, 157, 159], "calculate_data_forbound": [151, 152, 153, 156, 157, 159, 205], "prepar": [151, 152, 153, 157, 159], "calculate_valu": [151, 152, 153, 156, 157, 159, 205], "etc": [151, 153, 155, 156, 157, 159], "compute_hc_lowerbound": [151, 152, 153, 156, 157, 159, 205], "datas": [151, 152, 153, 156, 157, 159], "high": [151, 152, 153, 156, 157, 159], "level": [151, 152, 153, 156, 157, 159, 162, 206], "compute_hc_upper_and_lowerbound": [151, 152, 153, 156, 157, 159, 205], "compute_hc_upperbound": [151, 152, 153, 156, 157, 159, 205], "independ": [151, 152, 153, 156, 157, 159, 206], "mask_data": [151, 152, 153, 156, 157, 159, 205], "mask": [151, 152, 153, 156, 157, 159], "joint": [151, 152, 153, 156, 157, 159], "AND": [151, 152, 153, 156, 157, 159], "predict_hc_lowerbound": [151, 152, 153, 156, 157, 159, 205], "predict_hc_upper_and_lowerbound": [151, 152, 153, 156, 157, 159, 205], "predict_hc_upperbound": [151, 152, 153, 156, 157, 159, 205], "zhat": [151, 152, 153, 156, 157, 159, 205], "unbias": [151, 152, 153, 157, 159], "basenod": [152, 153, 156, 157, 159, 205], "custom": [152, 156, 160, 191, 206], "cvar_alpha": 152, "definit": [152, 206], "least": [152, 206], "var_alpha": 152, "largest": 152, "thoma": [152, 156], "miller": 152, "2019": [152, 156], "thomas2019": 152, "theorem": 152, "threshold": [152, 173, 174, 175], "cvar": 152, "sort": 152, "b": [152, 160, 162], "cm_true_index": 153, "cm_pred_index": 153, "c_00": 153, "c_01": 153, "c_0k": 153, "______": 153, "_____": 153, "c_10": 153, "c_11": 153, "c_1k": 153, "c_k0": 153, "c_k1": 153, "c_kk": 153, "constant": [154, 162, 195, 206], "constant_nod": 154, "represent": [154, 155, 158, 160], "what": [154, 155, 158, 205], "displai": [154, 155, 158, 162, 189], "insid": [154, 155, 158], "box": [154, 155, 158, 206], "graph": [154, 155, 158, 162, 204], "intern": [155, 206], "non": 155, "These": [155, 159, 206], "perform": [155, 160, 206], "wise": 156, "differ": [156, 206], "male": [156, 206], "femal": [156, 206], "et": 156, "al": 156, "www": [156, 194], "scienc": 156, "org": 156, "stoken": 156, "author": 156, "token": 156, "st": 156, "119": 156, "full": [156, 189, 206], "figur": [156, 189, 206], "precalculate_data": [156, 205], "preconfigur": 156, "so": [156, 159, 162, 206], "need": [156, 158, 162, 163, 169, 206], "recalcul": 156, "panda": 156, "y_i": 156, "y_hat_i": 156, "m": [156, 162, 206], "y_j": 156, "y_hat_j": 156, "There": [156, 159, 162, 206], "mai": [156, 183, 206], "n_male": 156, "n_femal": 156, "class_index": 157, "against": 157, "one": [157, 159, 160, 162, 170, 171, 172, 173, 206], "thei": [157, 160, 189, 206], "fpr_": 157, "left": [158, 162, 206], "right": [158, 162, 206], "will_lower_bound": 158, "will_upper_bound": 158, "alt_reward_numb": 159, "altern": 159, "besid": 159, "second": [159, 206], "j_pi_new_": 159, "global": 160, "construct": [160, 206], "measure_functions_dict": [160, 205], "appear": [160, 162, 206], "recogn": 160, "special": [160, 206], "organ": 160, "sub": [160, 162, 163, 206], "pr": [160, 162, 206], "nr": 160, "tpr": [160, 206], "fnr": 160, "tnr": 160, "acc": 160, "accuraci": [160, 205], "cm": 160, "relev": [160, 189], "mean_error": [160, 162, 205], "mean_squared_error": [160, 205, 206], "reinforc": [160, 206], "j_pi_new": [160, 206], "custom_base_node_dict": [160, 205], "map": 160, "node": [160, 162, 163, 166, 170, 171, 172, 205, 206], "op_mapp": [160, 205], "ast": [160, 162], "not_supported_op_mapp": [160, 205], "bounds_required_dict": [160, 205], "requir": [160, 162, 171, 204, 206], "If": [160, 162, 170, 171, 172, 173, 204, 205, 206], "two": [160, 162, 206], "children": [160, 162], "like": [160, 162, 206], "need_a_low": 160, "need_a_upp": 160, "need_b_low": 160, "need_b_upp": 160, "ml": [162, 206], "user": [162, 206], "appropri": 162, "root": [162, 166], "assign": 162, "built": [162, 170, 171, 172, 173, 206], "constraint_str": [162, 163, 173, 174, 175], "express": [162, 206], "n_node": 162, "n_base_nod": 162, "more": [162, 206], "onc": [162, 206], "contribut": 162, "base_node_dict": 162, "track": 162, "uniqu": 162, "been": [162, 206], "alreadi": [162, 206], "help": [162, 194], "handl": 162, "case": [162, 179, 206], "duplic": [162, 176], "node_fonts": 162, "fontsiz": 162, "graphviz": [162, 204], "available_measure_funct": 162, "_ab": [162, 205], "absolut": [162, 206], "interv": 162, "_add": [162, 205], "_assign_bounds_help": [162, 205], "lower_need": 162, "upper_need": 162, "travers": 162, "_assign_deltas_help": [162, 205], "weight_method": 162, "_ast2pt_nod": [162, 205], "ast_nod": 162, "_ast_tree_help": [162, 205], "recurs": 162, "_div": [162, 205], "divid": 162, "_evaluator_help": [162, 205], "_exp": [162, 205], "_log": [162, 205], "_max": [162, 205], "_min": [162, 205], "_mult": [162, 205], "_pow": [162, 205], "pow": 162, "_preprocess_constraint_str": [162, 205], "inequ": [162, 206], "move": 162, "everyth": 162, "final": 162, "form": [162, 206], "sure": 162, "mathemat": [162, 206], "written": [162, 206], "python": [162, 194, 204, 206], "syntax": 162, "_propagate_valu": [162, 205], "propag": [162, 166, 205], "_propagator_help": [162, 205], "_protect_nan": [162, 205], "bound_typ": 162, "nan": 162, "infin": 162, "postit": 162, "_sub": [162, 205], "subract": 162, "assign_bounds_need": [162, 205], "breadth": 162, "search": 162, "decid": 162, "eventu": 162, "necessari": [162, 206], "end": [162, 206], "care": 162, "assign_delta": [162, 205], "among": 162, "build_tre": [162, 205], "delta_weight_method": [162, 163], "create_from_ast": [162, 205], "structur": 162, "evaluate_constraint": [162, 205], "itself": 162, "postord": 162, "logic": 162, "make_viz": [162, 205], "titl": 162, "diagram": 162, "top": [162, 206], "make_viz_help": [162, 205], "edg": 162, "digraph": 162, "propagate_bound": [162, 205], "reset_base_node_dict": [162, 205], "reset_data": 162, "less": [162, 166, 206], "frequent": 162, "defult": 163, "classifict": 163, "across": 163, "batch_size_safeti": [166, 168, 170, 171, 172], "loop": 166, "introspect": 168, "candidate_safety_split": [168, 205], "f_c": 168, "f_": 168, "l_c": 168, "l_": 168, "s_c": 168, "s_": 168, "detail": [168, 206], "branch": 168, "either": [168, 206], "get_cs_result": [168, 205], "get_st_upper_bound": [168, 205], "upper_bounds_dict": 168, "kei": [168, 206], "initial_solution_fn": [170, 171, 172, 173], "base_node_bound_method_dict": [170, 171, 172], "use_builtin_primary_gradient_fn": [170, 171, 172, 173], "custom_primary_gradient_fn": [170, 171, 172], "optimization_hyperparam": [170, 171, 172, 206], "005": [170, 171, 172], "95": [170, 171, 172], "hyper_search": [170, 171, 172], "200": [170, 171, 172], "use_batch": [170, 172], "regularization_hyperparam": [170, 171, 172], "rl_model": [170, 173, 205, 206], "exist": [170, 171, 172, 173], "fall": [170, 171, 172], "builtin": [170, 171, 172], "regular": [170, 171, 172], "save_dir": [173, 174, 175], "later": [173, 175], "chang": [173, 175, 189], "directori": [173, 174, 175, 183, 206], "pkl": [173, 174, 175, 206], "glag": [173, 174, 175], "supervisedspec": [174, 175, 205, 206], "without": 174, "metadata_pth": 175, "array_in": 179, "argmax": 179, "multipl": [179, 206], "tie": 179, "val_in": 180, "min_val": 180, "max_val": 180, "limit": 180, "output_str": 181, "indent": 186, "abl": 187, "primary_objective_nam": [189, 206], "plot_running_avg": 189, "savenam": 189, "png": 189, "show": [189, 206], "evolut": [189, 206], "One": [189, 206], "subplot": [189, 206], "repeat": [189, 206], "plot": [189, 206], "ii": 189, "lambda_i": [189, 206], "iii": 189, "g_i": [189, 206], "iv": 189, "lagranian": 189, "sum_i": 189, "plt": 189, "cumprod": 191, "work": [191, 206], "sourc": [191, 205], "github": [191, 205], "com": [191, 194], "hip": 191, "issu": 191, "257": 191, "cumul": 191, "product": 191, "v": 193, "standard": [193, 197, 198, 199], "deviat": [193, 197, 198, 199], "bessel": 193, "nu": 194, "invers": [194, 206], "student": 194, "cdf": 194, "degre": 194, "freedom": 194, "matlab": 194, "mathwork": 194, "stat": 194, "html": 194, "arr": 195, "num_point": [197, 198, 199], "loc_x": [197, 198, 199], "loc_i": [197, 198, 199], "sigma_x": [197, 198, 199], "sigma_i": [197, 198, 199], "clip_min": [197, 199], "clip_max": [197, 199], "2d": [197, 198, 199], "distribut": [197, 198, 199], "clip": [197, 199], "option": [199, 206], "msg": 202, "lineno": 202, "seldonian": [204, 206], "pip": 204, "Then": 204, "system": 204, "wide": 204, "recommend": 204, "welcom": 205, "toolkit": [205, 206], "code": [205, 206], "host": 205, "overview": 205, "interfac": 205, "sa": 205, "start": [205, 206], "instal": 205, "tutori": [205, 206], "api": [205, 206], "fourier": 205, "discrete_random_ag": 205, "function_approxim": 205, "linear_fa": 205, "linear_state_action_value_fa": 205, "construct_q_table_from_env_descript": 205, "parameterized_non_learning_softmax_ag": 205, "discretesoftmax": [205, 206], "mixedsoftmax": 205, "keyboard_gridworld": 205, "mountain_car_rough_solut": 205, "check_space_typ": 205, "continuous_spac": 205, "rl_generate_dataset_and_spec_fil": 205, "get_constraint_str": 205, "get_env_kwarg": 205, "get_metadata_path": 205, "print_return_info": 205, "rl_runner": 205, "create_ag": 205, "run_all_tri": 205, "run_episod": 205, "run_episode_from_dict": 205, "run_trial_given_agent_and_env": 205, "mountaincar": 205, "n_step_mountaincar": 205, "simglucose_env": 205, "simglucos": 205, "generate_gridworld_episod": 205, "generate_mountaincar_episod": 205, "generate_simglucose_episod": 205, "get_max_ob": 205, "hyperparams_and_set": 205, "define_hyperparameter_and_setting_dict": 205, "candidateselect": [205, 206], "load_rl_metadata": 205, "load_supervised_metadata": 205, "datasetload": [205, 206], "rlmetadata": 205, "supervisedmetadata": 205, "hyperparam_search": 205, "hyperparamsearch": 205, "binarylogisticregressionmodel": 205, "boundedlinearregressionmodel": 205, "dummyclassifiermodel": 205, "linearregressionmodellistfeatur": 205, "multiclasslogisticregressionmodel": 205, "randomclassifiermodel": 205, "false_negative_r": 205, "false_positive_r": 205, "is_estim": 205, "negative_r": 205, "pdis_estim": 205, "positive_r": 205, "true_negative_r": 205, "true_positive_r": 205, "binary_logistic_loss": 205, "confusion_matrix": 205, "gradient_bounded_squared_error": 205, "gradient_mean_squared_error": 205, "gradient_binary_logistic_loss": 205, "multiclass_logistic_loss": 205, "sklearn_lr": 205, "sklearnlinearregressor": 205, "sklearn_model": 205, "sklearn_predict_vjp": 205, "zhat_func": 205, "batcher": 205, "evaluate_statist": 205, "sample_from_statist": 205, "vector_accuraci": 205, "vector_error": 205, "vector_false_negative_r": 205, "vector_false_positive_r": 205, "vector_is_estim": 205, "vector_negative_r": 205, "vector_pdis_estim": 205, "vector_positive_r": 205, "vector_squared_error": 205, "vector_true_negative_r": 205, "vector_true_positive_r": 205, "vector_confusion_matrix": 205, "gradient_descent_adam": 205, "setup_gradi": 205, "cvarsqebasenod": 205, "confusionmatrixbasenod": 205, "constantnod": 205, "internalnod": 205, "medcustombasenod": 205, "multiclassbasenod": 205, "rlaltrewardbasenod": 205, "make_parse_trees_from_constraint": 205, "safetytest": [205, 206], "seldonian_algorithm": [205, 206], "seldonianalgorithm": [205, 206], "createrlspec": [205, 206], "createsimplesupervisedspec": 205, "createsupervisedspec": [205, 206], "validate_parse_tre": 205, "util": [205, 206], "rl_util": 205, "argmax_multi": 205, "clamp": 205, "io_util": [205, 206], "dir_path": 205, "load_json": 205, "load_pickl": [205, 206], "save_json": 205, "save_pickl": 205, "plot_util": [205, 206], "plot_gradient_desc": [205, 206], "stats_util": 205, "custom_cumprod": 205, "stddev": 205, "tinv": 205, "weighted_sum_gamma": 205, "tutorial_util": 205, "generate_clipped_data": 205, "generate_data": 205, "make_synthetic_regression_dataset": 205, "warn": 205, "custom_warn": 205, "custom_formatwarn": 205, "document": 206, "homepag": 206, "In": 206, "page": 206, "few": 206, "hand": 206, "illustr": 206, "simul": 206, "realist": 206, "most": 206, "piec": 206, "cover": 206, "could": 206, "unifi": 206, "pattern": 206, "concept": 206, "conceptu": 206, "enforc": 206, "develop": 206, "design": 206, "applic": 206, "command": 206, "line": 206, "graphic": 206, "short": 206, "underli": 206, "discuss": 206, "below": 206, "well": 206, "manual": 206, "loader": 206, "comma": 206, "separ": 206, "header": 206, "categor": 206, "numer": 206, "might": 206, "look": 206, "622": 206, "491": 206, "56": 206, "439": 206, "93": 206, "707": 206, "64": 206, "663": 206, "65": 206, "557": 206, "09": 206, "711": 206, "37": 206, "731": 206, "31": 206, "509": 206, "33333": 206, "538": 206, "490": 206, "58": 206, "406": 206, "59": 206, "529": 206, "532": 206, "28": 206, "447": 206, "23": 206, "527": 206, "379": 206, "14": 206, "488": 206, "98333": 206, "455": 206, "18": 206, "440": 206, "570": 206, "86": 206, "417": 206, "54": 206, "453": 206, "53": 206, "425": 206, "87": 206, "475": 206, "63": 206, "476": 206, "11": 206, "407": 206, "15": 206, "97333": 206, "756": 206, "91": 206, "679": 206, "62": 206, "531": 206, "583": 206, "534": 206, "42": 206, "521": 206, "592": 206, "41": 206, "783": 206, "76": 206, "588": 206, "26": 206, "53333": 206, "hot": 206, "10": 206, "integ": 206, "25": 206, "intention": 206, "exclud": 206, "your": 206, "problem": 206, "label_column": 206, "try": 206, "sensitive_column": 206, "biggest": 206, "logisticregressionmodel": 206, "essenti": 206, "wrap": 206, "linearregress": 206, "unless": 206, "own": 206, "know": 206, "though": 206, "chosen": 206, "explicitli": 206, "thing": 206, "extend": 206, "py": 206, "_": 206, "directli": 206, "often": 206, "five": 206, "follow": 206, "math": 206, "nativ": 206, "ab": 206, "exp": 206, "239": 206, "trigger": 206, "open": 206, "ad": 206, "quantiti": 206, "It": 206, "someth": 206, "wai": 206, "wrote": 206, "instruct": 206, "recal": 206, "leq": 206, "satisfi": 206, "howev": 206, "cumbersom": 206, "symbol": 206, "interpret": 206, "ident": 206, "themselv": 206, "tri": 206, "basic": 206, "plain": 206, "english": 206, "88": 206, "greater": 206, "commonli": 206, "fair": 206, "filter": 206, "atr1": 206, "atr2": 206, "placehold": 206, "parenthes": 206, "surround": 206, "statement": 206, "sai": 206, "r1": 206, "r2": 206, "stand": 206, "race": 206, "demograph": 206, "pariti": 206, "toler": 206, "ratio": 206, "dispar": 206, "impact": 206, "anoth": 206, "permit": 206, "belong": 206, "bundl": 206, "shown": 206, "block": 206, "At": 206, "broad": 206, "scope": 206, "throught": 206, "now": 206, "happen": 206, "even": 206, "small": 206, "techniqu": 206, "black": 206, "cost": 206, "forc": 206, "toward": 206, "feasibl": 206, "cg": 206, "nelder": 206, "mead": 206, "bfg": 206, "cma": 206, "scipi": 206, "minim": 206, "solver": 206, "covari": 206, "adapt": 206, "strategi": 206, "kkt": 206, "situat": 206, "contraint": 206, "conflict": 206, "vanilla": 206, "oscil": 206, "boundari": 206, "dampen": 206, "momentum": 206, "our": 206, "mitig": 206, "accept": 206, "hat": 206, "mathcal": 206, "ran": 206, "convent": 206, "candidate_selection_log": 206, "increas": 206, "overwritten": 206, "log_fil": 206, "candidate_selection_log0": 206, "cs_dict": 206, "produc": 206, "1500": 206, "red": 206, "area": 206, "middl": 206, "region": 206, "dot": 206, "its": 206, "deem": 206, "assembl": 206, "interact": 206}, "objects": {"": [[0, 0, 0, "-", "seldonian"]], "seldonian": [[1, 0, 0, "-", "RL"], [76, 0, 0, "-", "candidate_selection"], [79, 0, 0, "-", "dataset"], [90, 0, 0, "-", "hyperparam_search"], [92, 0, 0, "-", "models"], [145, 0, 0, "-", "optimizers"], [149, 0, 0, "-", "parse_tree"], [164, 0, 0, "-", "safety_test"], [167, 0, 0, "-", "seldonian_algorithm"], [169, 0, 0, "-", "spec"], [177, 0, 0, "-", "utils"], [200, 0, 0, "-", "warnings"]], "seldonian.RL": [[2, 0, 0, "-", "Agents"], [34, 0, 0, "-", "Env_Description"], [41, 0, 0, "-", "RL_generate_dataset_and_spec_file"], [47, 0, 0, "-", "RL_model"], [49, 0, 0, "-", "RL_runner"], [56, 0, 0, "-", "environments"], [67, 0, 0, "-", "generate_gridworld_episodes"], [69, 0, 0, "-", "generate_mountaincar_episodes"], [71, 0, 0, "-", "generate_simglucose_episodes"], [74, 0, 0, "-", "hyperparams_and_settings"]], "seldonian.RL.Agents": [[3, 0, 0, "-", "Agent"], [5, 0, 0, "-", "Bases"], [8, 0, 0, "-", "Discrete_Random_Agent"], [10, 0, 0, "-", "Function_Approximators"], [20, 0, 0, "-", "Parameterized_non_learning_softmax_agent"], [22, 0, 0, "-", "Policies"], [30, 0, 0, "-", "keyboard_gridworld"], [32, 0, 0, "-", "mountain_car_rough_solution"]], "seldonian.RL.Agents.Agent": [[4, 1, 1, "", "Agent"]], "seldonian.RL.Agents.Agent.Agent": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "__repr__"], [4, 2, 1, "", "choose_action"], [4, 2, 1, "", "get_params"], [4, 2, 1, "", "get_prob_this_action"], [4, 2, 1, "", "set_new_params"], [4, 2, 1, "", "update"]], "seldonian.RL.Agents.Bases": [[6, 0, 0, "-", "Fourier"]], "seldonian.RL.Agents.Bases.Fourier": [[7, 1, 1, "", "Fourier"]], "seldonian.RL.Agents.Bases.Fourier.Fourier": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "__repr__"], [7, 2, 1, "", "calculate_num_features"], [7, 2, 1, "", "construct_basis_matrix"], [7, 2, 1, "", "get_features"], [7, 2, 1, "", "get_normalized_observation"]], "seldonian.RL.Agents.Discrete_Random_Agent": [[9, 1, 1, "", "Discrete_Random_Agent"]], "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "__repr__"], [9, 2, 1, "", "choose_action"], [9, 2, 1, "", "get_params"], [9, 2, 1, "", "get_prob_this_action"], [9, 2, 1, "", "set_new_params"], [9, 2, 1, "", "update"]], "seldonian.RL.Agents.Function_Approximators": [[11, 0, 0, "-", "Function_Approximator"], [13, 0, 0, "-", "Linear_FA"], [16, 0, 0, "-", "Table"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator": [[12, 1, 1, "", "Function_Approximator"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "__repr__"], [12, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA": [[14, 1, 1, "", "Linear_FA"], [15, 1, 1, "", "Linear_state_action_value_FA"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "__repr__"], [14, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "__repr__"], [15, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Table": [[17, 1, 1, "", "Q_Table"], [18, 1, 1, "", "Table"], [19, 3, 1, "", "construct_Q_Table_From_Env_Description"]], "seldonian.RL.Agents.Function_Approximators.Table.Q_Table": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "__repr__"], [17, 2, 1, "", "from_environment_state_to_0_indexed_state"], [17, 2, 1, "", "get_action_values_given_state"], [17, 2, 1, "", "get_action_values_given_zero_indexed_state"], [17, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Table.Table": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "__repr__"], [18, 2, 1, "", "from_environment_state_to_0_indexed_state"], [18, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent": [[21, 1, 1, "", "Parameterized_non_learning_softmax_agent"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "__repr__"], [21, 2, 1, "", "choose_action"], [21, 2, 1, "", "get_action_values"], [21, 2, 1, "", "get_params"], [21, 2, 1, "", "get_prob_this_action"], [21, 2, 1, "", "set_new_params"], [21, 2, 1, "", "update"]], "seldonian.RL.Agents.Policies": [[23, 0, 0, "-", "Policy"], [26, 0, 0, "-", "Softmax"]], "seldonian.RL.Agents.Policies.Policy": [[24, 1, 1, "", "Discrete_Action_Policy"], [25, 1, 1, "", "Policy"]], "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "__repr__"], [24, 2, 1, "", "choose_action"], [24, 2, 1, "", "construct_basis_and_linear_FA"], [24, 2, 1, "", "from_0_indexed_action_to_environment_action"], [24, 2, 1, "", "from_environment_action_to_0_indexed_action"], [24, 2, 1, "", "get_action_values_given_state"], [24, 2, 1, "", "get_params"], [24, 2, 1, "", "get_prob_this_action"], [24, 2, 1, "", "make_state_action_FA"], [24, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Policy.Policy": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "__repr__"], [25, 2, 1, "", "choose_action"], [25, 2, 1, "", "get_params"], [25, 2, 1, "", "get_prob_this_action"], [25, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Softmax": [[27, 1, 1, "", "DiscreteSoftmax"], [28, 1, 1, "", "MixedSoftmax"], [29, 1, 1, "", "Softmax"]], "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "__repr__"], [27, 2, 1, "", "_arg"], [27, 2, 1, "", "_denom"], [27, 2, 1, "", "choose_action"], [27, 2, 1, "", "choose_action_from_action_values"], [27, 2, 1, "", "construct_basis_and_linear_FA"], [27, 2, 1, "", "from_0_indexed_action_to_environment_action"], [27, 2, 1, "", "from_environment_action_to_0_indexed_action"], [27, 2, 1, "", "get_action_probs_from_action_values"], [27, 2, 1, "", "get_action_values_given_state"], [27, 2, 1, "", "get_e_to_the_something_terms"], [27, 2, 1, "", "get_params"], [27, 2, 1, "", "get_prob_this_action"], [27, 2, 1, "", "make_state_action_FA"], [27, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "__repr__"], [28, 2, 1, "", "choose_action"], [28, 2, 1, "", "choose_action_from_action_values"], [28, 2, 1, "", "construct_basis_and_linear_FA"], [28, 2, 1, "", "from_0_indexed_action_to_environment_action"], [28, 2, 1, "", "from_environment_action_to_0_indexed_action"], [28, 2, 1, "", "get_action_probs_from_action_values"], [28, 2, 1, "", "get_action_values_given_state"], [28, 2, 1, "", "get_e_to_the_something_terms"], [28, 2, 1, "", "get_params"], [28, 2, 1, "", "get_prob_this_action"], [28, 2, 1, "", "make_state_action_FA"], [28, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Softmax.Softmax": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "__repr__"], [29, 2, 1, "", "choose_action"], [29, 2, 1, "", "choose_action_from_action_values"], [29, 2, 1, "", "construct_basis_and_linear_FA"], [29, 2, 1, "", "from_0_indexed_action_to_environment_action"], [29, 2, 1, "", "from_environment_action_to_0_indexed_action"], [29, 2, 1, "", "get_action_probs_from_action_values"], [29, 2, 1, "", "get_action_values_given_state"], [29, 2, 1, "", "get_e_to_the_something_terms"], [29, 2, 1, "", "get_params"], [29, 2, 1, "", "get_prob_this_action"], [29, 2, 1, "", "make_state_action_FA"], [29, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.keyboard_gridworld": [[31, 1, 1, "", "Keyboard_gridworld"]], "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "__repr__"], [31, 2, 1, "", "choose_action"], [31, 2, 1, "", "get_params"], [31, 2, 1, "", "get_prob_this_action"], [31, 2, 1, "", "set_new_params"], [31, 2, 1, "", "update"]], "seldonian.RL.Agents.mountain_car_rough_solution": [[33, 1, 1, "", "Mountain_car_rough_solution"]], "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution": [[33, 2, 1, "", "__init__"], [33, 2, 1, "", "__repr__"], [33, 2, 1, "", "choose_action"], [33, 2, 1, "", "get_params"], [33, 2, 1, "", "get_prob_this_action"], [33, 2, 1, "", "set_new_params"], [33, 2, 1, "", "update"]], "seldonian.RL.Env_Description": [[35, 0, 0, "-", "Env_Description"], [38, 0, 0, "-", "Spaces"]], "seldonian.RL.Env_Description.Env_Description": [[36, 1, 1, "", "Env_Description"], [37, 3, 1, "", "check_space_type"]], "seldonian.RL.Env_Description.Env_Description.Env_Description": [[36, 2, 1, "", "__init__"], [36, 2, 1, "", "__repr__"], [36, 2, 1, "", "get_min_action"], [36, 2, 1, "", "get_min_state"], [36, 2, 1, "", "get_num_actions"], [36, 2, 1, "", "get_num_observation_dims"], [36, 2, 1, "", "get_num_states"]], "seldonian.RL.Env_Description.Spaces": [[39, 1, 1, "", "Continuous_Space"], [40, 1, 1, "", "Discrete_Space"]], "seldonian.RL.Env_Description.Spaces.Continuous_Space": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "__repr__"], [39, 2, 1, "", "check_bounds_valid"], [39, 2, 1, "", "get_num_dims"]], "seldonian.RL.Env_Description.Spaces.Discrete_Space": [[40, 2, 1, "", "__init__"], [40, 2, 1, "", "__repr__"], [40, 2, 1, "", "get_num_values"]], "seldonian.RL.RL_generate_dataset_and_spec_file": [[42, 3, 1, "", "get_constraint_string"], [43, 3, 1, "", "get_env_kwargs"], [44, 3, 1, "", "get_metadata_path"], [45, 3, 1, "", "main"], [46, 3, 1, "", "print_return_info"]], "seldonian.RL.RL_model": [[48, 1, 1, "", "RL_model"]], "seldonian.RL.RL_model.RL_model": [[48, 2, 1, "", "__init__"], [48, 2, 1, "", "__repr__"], [48, 2, 1, "", "get_prob_this_action"], [48, 2, 1, "", "get_probs_from_observations_and_actions"]], "seldonian.RL.RL_runner": [[50, 3, 1, "", "create_agent"], [51, 3, 1, "", "run_all_trials"], [52, 3, 1, "", "run_episode"], [53, 3, 1, "", "run_episode_from_dict"], [54, 3, 1, "", "run_trial"], [55, 3, 1, "", "run_trial_given_agent_and_env"]], "seldonian.RL.environments": [[57, 0, 0, "-", "Environment"], [59, 0, 0, "-", "gridworld"], [61, 0, 0, "-", "mountaincar"], [63, 0, 0, "-", "n_step_mountaincar"], [65, 0, 0, "-", "simglucose_env"]], "seldonian.RL.environments.Environment": [[58, 1, 1, "", "Environment"]], "seldonian.RL.environments.Environment.Environment": [[58, 2, 1, "", "__init__"], [58, 2, 1, "", "__repr__"], [58, 2, 1, "", "get_env_description"], [58, 2, 1, "", "get_observation"], [58, 2, 1, "", "reset"], [58, 2, 1, "", "start_visualizing"], [58, 2, 1, "", "stop_visualizing"], [58, 2, 1, "", "terminated"], [58, 2, 1, "", "transition"], [58, 2, 1, "", "visualize"]], "seldonian.RL.environments.gridworld": [[60, 1, 1, "", "Gridworld"]], "seldonian.RL.environments.gridworld.Gridworld": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "__repr__"], [60, 2, 1, "", "create_env_description"], [60, 2, 1, "", "get_env_description"], [60, 2, 1, "", "get_observation"], [60, 2, 1, "", "is_in_goal_state"], [60, 2, 1, "", "reset"], [60, 2, 1, "", "start_visualizing"], [60, 2, 1, "", "stop_visualizing"], [60, 2, 1, "", "terminated"], [60, 2, 1, "", "transition"], [60, 2, 1, "", "update_position"], [60, 2, 1, "", "visualize"]], "seldonian.RL.environments.mountaincar": [[62, 1, 1, "", "Mountaincar"]], "seldonian.RL.environments.mountaincar.Mountaincar": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "__repr__"], [62, 2, 1, "", "get_env_description"], [62, 2, 1, "", "get_observation"], [62, 2, 1, "", "reset"], [62, 2, 1, "", "start_visualizing"], [62, 2, 1, "", "stop_visualizing"], [62, 2, 1, "", "terminated"], [62, 2, 1, "", "transition"], [62, 2, 1, "", "visualize"]], "seldonian.RL.environments.n_step_mountaincar": [[64, 1, 1, "", "N_step_mountaincar"]], "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "__repr__"], [64, 2, 1, "", "get_env_description"], [64, 2, 1, "", "get_observation"], [64, 2, 1, "", "reset"], [64, 2, 1, "", "start_visualizing"], [64, 2, 1, "", "stop_visualizing"], [64, 2, 1, "", "terminated"], [64, 2, 1, "", "transition"], [64, 2, 1, "", "visualize"]], "seldonian.RL.environments.simglucose_env": [[66, 1, 1, "", "Simglucose"]], "seldonian.RL.environments.simglucose_env.Simglucose": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "__repr__"], [66, 2, 1, "", "get_env_description"], [66, 2, 1, "", "get_observation"], [66, 2, 1, "", "reset"], [66, 2, 1, "", "start_visualizing"], [66, 2, 1, "", "stop_visualizing"], [66, 2, 1, "", "terminated"], [66, 2, 1, "", "transition"], [66, 2, 1, "", "visualize"]], "seldonian.RL.generate_gridworld_episodes": [[68, 3, 1, "", "main"]], "seldonian.RL.generate_mountaincar_episodes": [[70, 3, 1, "", "main"]], "seldonian.RL.generate_simglucose_episodes": [[72, 3, 1, "", "get_max_obs"], [73, 3, 1, "", "main"]], "seldonian.RL.hyperparams_and_settings": [[75, 3, 1, "", "define_hyperparameter_and_setting_dict"]], "seldonian.candidate_selection": [[77, 0, 0, "-", "candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[78, 1, 1, "", "CandidateSelection"]], "seldonian.candidate_selection.candidate_selection.CandidateSelection": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "__repr__"], [78, 2, 1, "", "calculate_batches"], [78, 2, 1, "", "evaluate_primary_objective"], [78, 2, 1, "", "get_constraint_upper_bounds"], [78, 2, 1, "", "objective_with_barrier"], [78, 2, 1, "", "run"]], "seldonian.dataset": [[80, 1, 1, "", "DataSet"], [81, 1, 1, "", "DataSetLoader"], [82, 1, 1, "", "Episode"], [83, 1, 1, "", "MetaData"], [84, 1, 1, "", "RLDataSet"], [85, 1, 1, "", "RLMetaData"], [86, 1, 1, "", "SupervisedDataSet"], [87, 1, 1, "", "SupervisedMetaData"], [88, 3, 1, "", "load_RL_metadata"], [89, 3, 1, "", "load_supervised_metadata"]], "seldonian.dataset.DataSet": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "__repr__"]], "seldonian.dataset.DataSetLoader": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__repr__"], [81, 2, 1, "", "load_RL_dataset_from_csv"], [81, 2, 1, "", "load_RL_dataset_from_episode_file"], [81, 2, 1, "", "load_supervised_dataset"]], "seldonian.dataset.Episode": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "__repr__"]], "seldonian.dataset.MetaData": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "__repr__"]], "seldonian.dataset.RLDataSet": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__repr__"]], "seldonian.dataset.RLMetaData": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "__repr__"]], "seldonian.dataset.SupervisedDataSet": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "__repr__"]], "seldonian.dataset.SupervisedMetaData": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "__repr__"]], "seldonian.hyperparam_search": [[91, 1, 1, "", "HyperparamSearch"]], "seldonian.hyperparam_search.HyperparamSearch": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "__repr__"], [91, 2, 1, "", "bootstrap_sample_dataset"], [91, 2, 1, "", "candidate_selection"], [91, 2, 1, "", "create_dataset"], [91, 2, 1, "", "est_prob_pass"], [91, 2, 1, "", "find_best_hyperparams"], [91, 2, 1, "", "get_initial_solution"], [91, 2, 1, "", "get_safety_size"], [91, 2, 1, "", "run_core"], [91, 2, 1, "", "run_safety_test"], [91, 2, 1, "", "safety_test"]], "seldonian.models": [[93, 0, 0, "-", "models"], [106, 0, 0, "-", "objectives"], [124, 0, 0, "-", "sklearn_lr"], [126, 0, 0, "-", "sklearn_model"], [129, 0, 0, "-", "zhat_funcs"]], "seldonian.models.models": [[94, 1, 1, "", "BaseLogisticRegressionModel"], [95, 1, 1, "", "BinaryLogisticRegressionModel"], [96, 1, 1, "", "BoundedLinearRegressionModel"], [97, 1, 1, "", "ClassificationModel"], [98, 1, 1, "", "DummyClassifierModel"], [99, 1, 1, "", "LinearRegressionModel"], [100, 1, 1, "", "LinearRegressionModelListFeatures"], [101, 1, 1, "", "MultiClassLogisticRegressionModel"], [102, 1, 1, "", "RandomClassifierModel"], [103, 1, 1, "", "RegressionModel"], [104, 1, 1, "", "SeldonianModel"], [105, 1, 1, "", "SupervisedModel"]], "seldonian.models.models.BaseLogisticRegressionModel": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "__repr__"], [94, 2, 1, "", "fit"]], "seldonian.models.models.BinaryLogisticRegressionModel": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "__repr__"], [95, 2, 1, "", "fit"], [95, 2, 1, "", "predict"]], "seldonian.models.models.BoundedLinearRegressionModel": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "__repr__"], [96, 2, 1, "", "fit"], [96, 2, 1, "", "predict"]], "seldonian.models.models.ClassificationModel": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "__repr__"]], "seldonian.models.models.DummyClassifierModel": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "__repr__"], [98, 2, 1, "", "predict"]], "seldonian.models.models.LinearRegressionModel": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "__repr__"], [99, 2, 1, "", "fit"], [99, 2, 1, "", "predict"]], "seldonian.models.models.LinearRegressionModelListFeatures": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "__repr__"], [100, 2, 1, "", "fit"], [100, 2, 1, "", "predict"]], "seldonian.models.models.MultiClassLogisticRegressionModel": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "__repr__"], [101, 2, 1, "", "fit"], [101, 2, 1, "", "predict"]], "seldonian.models.models.RandomClassifierModel": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "__repr__"], [102, 2, 1, "", "predict"]], "seldonian.models.models.RegressionModel": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "__repr__"]], "seldonian.models.models.SeldonianModel": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "__repr__"]], "seldonian.models.models.SupervisedModel": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "__repr__"]], "seldonian.models.objectives": [[107, 3, 1, "", "Accuracy"], [108, 3, 1, "", "False_Negative_Rate"], [109, 3, 1, "", "False_Positive_Rate"], [110, 3, 1, "", "IS_estimate"], [111, 3, 1, "", "Mean_Error"], [112, 3, 1, "", "Mean_Squared_Error"], [113, 3, 1, "", "Negative_Rate"], [114, 3, 1, "", "PDIS_estimate"], [115, 3, 1, "", "Positive_Rate"], [116, 3, 1, "", "True_Negative_Rate"], [117, 3, 1, "", "True_Positive_Rate"], [118, 3, 1, "", "binary_logistic_loss"], [119, 3, 1, "", "confusion_matrix"], [120, 3, 1, "", "gradient_Bounded_Squared_Error"], [121, 3, 1, "", "gradient_Mean_Squared_Error"], [122, 3, 1, "", "gradient_binary_logistic_loss"], [123, 3, 1, "", "multiclass_logistic_loss"]], "seldonian.models.sklearn_lr": [[125, 1, 1, "", "SkLearnLinearRegressor"]], "seldonian.models.sklearn_lr.SkLearnLinearRegressor": [[125, 2, 1, "", "__init__"], [125, 2, 1, "", "__repr__"], [125, 2, 1, "", "backward_pass"], [125, 2, 1, "", "create_model"], [125, 2, 1, "", "forward_pass"], [125, 2, 1, "", "get_model_params"], [125, 2, 1, "", "predict"], [125, 2, 1, "", "update_model_params"]], "seldonian.models.sklearn_model": [[127, 1, 1, "", "SupervisedSkLearnBaseModel"], [128, 3, 1, "", "sklearn_predict_vjp"]], "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel": [[127, 2, 1, "", "__init__"], [127, 2, 1, "", "__repr__"], [127, 2, 1, "", "backward_pass"], [127, 2, 1, "", "create_model"], [127, 2, 1, "", "forward_pass"], [127, 2, 1, "", "get_model_params"], [127, 2, 1, "", "predict"], [127, 2, 1, "", "update_model_params"]], "seldonian.models.zhat_funcs": [[130, 3, 1, "", "batcher"], [131, 3, 1, "", "evaluate_statistic"], [132, 3, 1, "", "sample_from_statistic"], [133, 3, 1, "", "vector_Accuracy"], [134, 3, 1, "", "vector_Error"], [135, 3, 1, "", "vector_False_Negative_Rate"], [136, 3, 1, "", "vector_False_Positive_Rate"], [137, 3, 1, "", "vector_IS_estimate"], [138, 3, 1, "", "vector_Negative_Rate"], [139, 3, 1, "", "vector_PDIS_estimate"], [140, 3, 1, "", "vector_Positive_Rate"], [141, 3, 1, "", "vector_Squared_Error"], [142, 3, 1, "", "vector_True_Negative_Rate"], [143, 3, 1, "", "vector_True_Positive_Rate"], [144, 3, 1, "", "vector_confusion_matrix"]], "seldonian.optimizers": [[146, 0, 0, "-", "gradient_descent"]], "seldonian.optimizers.gradient_descent": [[147, 3, 1, "", "gradient_descent_adam"], [148, 3, 1, "", "setup_gradients"]], "seldonian.parse_tree": [[150, 0, 0, "-", "nodes"], [160, 0, 0, "-", "operators"], [161, 0, 0, "-", "parse_tree"]], "seldonian.parse_tree.nodes": [[151, 1, 1, "", "BaseNode"], [152, 1, 1, "", "CVaRSQeBaseNode"], [153, 1, 1, "", "ConfusionMatrixBaseNode"], [154, 1, 1, "", "ConstantNode"], [155, 1, 1, "", "InternalNode"], [156, 1, 1, "", "MEDCustomBaseNode"], [157, 1, 1, "", "MultiClassBaseNode"], [158, 1, 1, "", "Node"], [159, 1, 1, "", "RLAltRewardBaseNode"]], "seldonian.parse_tree.nodes.BaseNode": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "__repr__"], [151, 2, 1, "", "calculate_bounds"], [151, 2, 1, "", "calculate_data_forbound"], [151, 2, 1, "", "calculate_value"], [151, 2, 1, "", "compute_HC_lowerbound"], [151, 2, 1, "", "compute_HC_upper_and_lowerbound"], [151, 2, 1, "", "compute_HC_upperbound"], [151, 2, 1, "", "mask_data"], [151, 2, 1, "", "predict_HC_lowerbound"], [151, 2, 1, "", "predict_HC_upper_and_lowerbound"], [151, 2, 1, "", "predict_HC_upperbound"], [151, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.CVaRSQeBaseNode": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "__repr__"], [152, 2, 1, "", "calculate_bounds"], [152, 2, 1, "", "calculate_data_forbound"], [152, 2, 1, "", "calculate_value"], [152, 2, 1, "", "compute_HC_lowerbound"], [152, 2, 1, "", "compute_HC_upper_and_lowerbound"], [152, 2, 1, "", "compute_HC_upperbound"], [152, 2, 1, "", "mask_data"], [152, 2, 1, "", "predict_HC_lowerbound"], [152, 2, 1, "", "predict_HC_upper_and_lowerbound"], [152, 2, 1, "", "predict_HC_upperbound"], [152, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "__repr__"], [153, 2, 1, "", "calculate_bounds"], [153, 2, 1, "", "calculate_data_forbound"], [153, 2, 1, "", "calculate_value"], [153, 2, 1, "", "compute_HC_lowerbound"], [153, 2, 1, "", "compute_HC_upper_and_lowerbound"], [153, 2, 1, "", "compute_HC_upperbound"], [153, 2, 1, "", "mask_data"], [153, 2, 1, "", "predict_HC_lowerbound"], [153, 2, 1, "", "predict_HC_upper_and_lowerbound"], [153, 2, 1, "", "predict_HC_upperbound"], [153, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.ConstantNode": [[154, 2, 1, "", "__init__"], [154, 2, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.InternalNode": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.MEDCustomBaseNode": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "__repr__"], [156, 2, 1, "", "calculate_bounds"], [156, 2, 1, "", "calculate_data_forbound"], [156, 2, 1, "", "calculate_value"], [156, 2, 1, "", "compute_HC_lowerbound"], [156, 2, 1, "", "compute_HC_upper_and_lowerbound"], [156, 2, 1, "", "compute_HC_upperbound"], [156, 2, 1, "", "mask_data"], [156, 2, 1, "", "precalculate_data"], [156, 2, 1, "", "predict_HC_lowerbound"], [156, 2, 1, "", "predict_HC_upper_and_lowerbound"], [156, 2, 1, "", "predict_HC_upperbound"], [156, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.MultiClassBaseNode": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "__repr__"], [157, 2, 1, "", "calculate_bounds"], [157, 2, 1, "", "calculate_data_forbound"], [157, 2, 1, "", "calculate_value"], [157, 2, 1, "", "compute_HC_lowerbound"], [157, 2, 1, "", "compute_HC_upper_and_lowerbound"], [157, 2, 1, "", "compute_HC_upperbound"], [157, 2, 1, "", "mask_data"], [157, 2, 1, "", "predict_HC_lowerbound"], [157, 2, 1, "", "predict_HC_upper_and_lowerbound"], [157, 2, 1, "", "predict_HC_upperbound"], [157, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.Node": [[158, 2, 1, "", "__init__"], [158, 2, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.RLAltRewardBaseNode": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "__repr__"], [159, 2, 1, "", "calculate_bounds"], [159, 2, 1, "", "calculate_data_forbound"], [159, 2, 1, "", "calculate_value"], [159, 2, 1, "", "compute_HC_lowerbound"], [159, 2, 1, "", "compute_HC_upper_and_lowerbound"], [159, 2, 1, "", "compute_HC_upperbound"], [159, 2, 1, "", "mask_data"], [159, 2, 1, "", "predict_HC_lowerbound"], [159, 2, 1, "", "predict_HC_upper_and_lowerbound"], [159, 2, 1, "", "predict_HC_upperbound"], [159, 2, 1, "", "zhat"]], "seldonian.parse_tree.operators": [[160, 4, 1, "", "bounds_required_dict"], [160, 4, 1, "", "custom_base_node_dict"], [160, 4, 1, "", "measure_functions_dict"], [160, 4, 1, "", "not_supported_op_mapper"], [160, 4, 1, "", "op_mapper"]], "seldonian.parse_tree.parse_tree": [[162, 1, 1, "", "ParseTree"], [163, 3, 1, "", "make_parse_trees_from_constraints"]], "seldonian.parse_tree.parse_tree.ParseTree": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "__repr__"], [162, 2, 1, "", "_abs"], [162, 2, 1, "", "_add"], [162, 2, 1, "", "_assign_bounds_helper"], [162, 2, 1, "", "_assign_deltas_helper"], [162, 2, 1, "", "_ast2pt_node"], [162, 2, 1, "", "_ast_tree_helper"], [162, 2, 1, "", "_div"], [162, 2, 1, "", "_evaluator_helper"], [162, 2, 1, "", "_exp"], [162, 2, 1, "", "_log"], [162, 2, 1, "", "_max"], [162, 2, 1, "", "_min"], [162, 2, 1, "", "_mult"], [162, 2, 1, "", "_pow"], [162, 2, 1, "", "_preprocess_constraint_str"], [162, 2, 1, "", "_propagate_value"], [162, 2, 1, "", "_propagator_helper"], [162, 2, 1, "", "_protect_nan"], [162, 2, 1, "", "_sub"], [162, 2, 1, "", "assign_bounds_needed"], [162, 2, 1, "", "assign_deltas"], [162, 2, 1, "", "build_tree"], [162, 2, 1, "", "create_from_ast"], [162, 2, 1, "", "evaluate_constraint"], [162, 2, 1, "", "make_viz"], [162, 2, 1, "", "make_viz_helper"], [162, 2, 1, "", "propagate"], [162, 2, 1, "", "propagate_bounds"], [162, 2, 1, "", "reset_base_node_dict"]], "seldonian.safety_test": [[165, 0, 0, "-", "safety_test"]], "seldonian.safety_test.safety_test": [[166, 1, 1, "", "SafetyTest"]], "seldonian.safety_test.safety_test.SafetyTest": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "__repr__"], [166, 2, 1, "", "evaluate_primary_objective"], [166, 2, 1, "", "run"]], "seldonian.seldonian_algorithm": [[168, 1, 1, "", "SeldonianAlgorithm"]], "seldonian.seldonian_algorithm.SeldonianAlgorithm": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "__repr__"], [168, 2, 1, "", "candidate_safety_split"], [168, 2, 1, "", "candidate_selection"], [168, 2, 1, "", "evaluate_primary_objective"], [168, 2, 1, "", "get_cs_result"], [168, 2, 1, "", "get_st_upper_bounds"], [168, 2, 1, "", "run"], [168, 2, 1, "", "run_safety_test"], [168, 2, 1, "", "safety_test"]], "seldonian.spec": [[170, 1, 1, "", "RLSpec"], [171, 1, 1, "", "Spec"], [172, 1, 1, "", "SupervisedSpec"], [173, 3, 1, "", "createRLSpec"], [174, 3, 1, "", "createSimpleSupervisedSpec"], [175, 3, 1, "", "createSupervisedSpec"], [176, 3, 1, "", "validate_parse_trees"]], "seldonian.spec.RLSpec": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "__repr__"]], "seldonian.spec.Spec": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "__repr__"]], "seldonian.spec.SupervisedSpec": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "__repr__"]], "seldonian.utils": [[178, 0, 0, "-", "RL_utils"], [182, 0, 0, "-", "io_utils"], [188, 0, 0, "-", "plot_utils"], [190, 0, 0, "-", "stats_utils"], [196, 0, 0, "-", "tutorial_utils"]], "seldonian.utils.RL_utils": [[179, 3, 1, "", "argmax_multi"], [180, 3, 1, "", "clamp"], [181, 3, 1, "", "error"]], "seldonian.utils.io_utils": [[183, 3, 1, "", "dir_path"], [184, 3, 1, "", "load_json"], [185, 3, 1, "", "load_pickle"], [186, 3, 1, "", "save_json"], [187, 3, 1, "", "save_pickle"]], "seldonian.utils.plot_utils": [[189, 3, 1, "", "plot_gradient_descent"]], "seldonian.utils.stats_utils": [[191, 3, 1, "", "custom_cumprod"], [192, 3, 1, "", "softmax"], [193, 3, 1, "", "stddev"], [194, 3, 1, "", "tinv"], [195, 3, 1, "", "weighted_sum_gamma"]], "seldonian.utils.tutorial_utils": [[197, 3, 1, "", "generate_clipped_data"], [198, 3, 1, "", "generate_data"], [199, 3, 1, "", "make_synthetic_regression_dataset"]], "seldonian.warnings": [[201, 0, 0, "-", "custom_warnings"]], "seldonian.warnings.custom_warnings": [[202, 3, 1, "", "custom_formatwarning"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"seldonian": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205], "rl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "agent": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "base": [5, 6, 7], "fourier": [6, 7], "discrete_random_ag": [8, 9], "function_approxim": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "linear_fa": [13, 14, 15], "linear_state_action_value_fa": 15, "tabl": [16, 17, 18, 19, 205], "q_tabl": 17, "construct_q_table_from_env_descript": 19, "parameterized_non_learning_softmax_ag": [20, 21], "polici": [22, 23, 24, 25, 26, 27, 28, 29], "discrete_action_polici": 24, "softmax": [26, 27, 28, 29, 192], "discretesoftmax": 27, "mixedsoftmax": 28, "keyboard_gridworld": [30, 31], "mountain_car_rough_solut": [32, 33], "env_descript": [34, 35, 36, 37, 38, 39, 40], "check_space_typ": 37, "space": [38, 39, 40], "continuous_spac": 39, "discrete_spac": 40, "rl_generate_dataset_and_spec_fil": [41, 42, 43, 44, 45, 46], "get_constraint_str": 42, "get_env_kwarg": 43, "get_metadata_path": 44, "main": [45, 68, 70, 73], "print_return_info": 46, "rl_model": [47, 48], "rl_runner": [49, 50, 51, 52, 53, 54, 55], "create_ag": 50, "run_all_tri": 51, "run_episod": 52, "run_episode_from_dict": 53, "run_trial": 54, "run_trial_given_agent_and_env": 55, "environ": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "gridworld": [59, 60], "mountaincar": [61, 62], "n_step_mountaincar": [63, 64], "simglucose_env": [65, 66], "simglucos": 66, "generate_gridworld_episod": [67, 68], "generate_mountaincar_episod": [69, 70], "generate_simglucose_episod": [71, 72, 73], "get_max_ob": 72, "hyperparams_and_set": [74, 75], "define_hyperparameter_and_setting_dict": 75, "candidate_select": [76, 77, 78], "candidateselect": 78, "dataset": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 206], "datasetload": 81, "episod": 82, "metadata": 83, "rldataset": 84, "rlmetadata": 85, "superviseddataset": 86, "supervisedmetadata": 87, "load_rl_metadata": 88, "load_supervised_metadata": 89, "hyperparam_search": [90, 91], "hyperparamsearch": 91, "model": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 206], "baselogisticregressionmodel": 94, "binarylogisticregressionmodel": 95, "boundedlinearregressionmodel": 96, "classificationmodel": 97, "dummyclassifiermodel": 98, "linearregressionmodel": 99, "linearregressionmodellistfeatur": 100, "multiclasslogisticregressionmodel": 101, "randomclassifiermodel": 102, "regressionmodel": 103, "seldonianmodel": 104, "supervisedmodel": 105, "object": [106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 206], "accuraci": 107, "false_negative_r": 108, "false_positive_r": 109, "is_estim": 110, "mean_error": 111, "mean_squared_error": 112, "negative_r": 113, "pdis_estim": 114, "positive_r": 115, "true_negative_r": 116, "true_positive_r": 117, "binary_logistic_loss": 118, "confusion_matrix": 119, "gradient_bounded_squared_error": 120, "gradient_mean_squared_error": 121, "gradient_binary_logistic_loss": 122, "multiclass_logistic_loss": 123, "sklearn_lr": [124, 125], "sklearnlinearregressor": 125, "sklearn_model": [126, 127, 128], "supervisedsklearnbasemodel": 127, "sklearn_predict_vjp": 128, "zhat_func": [129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "batcher": 130, "evaluate_statist": 131, "sample_from_statist": 132, "vector_accuraci": 133, "vector_error": 134, "vector_false_negative_r": 135, "vector_false_positive_r": 136, "vector_is_estim": 137, "vector_negative_r": 138, "vector_pdis_estim": 139, "vector_positive_r": 140, "vector_squared_error": 141, "vector_true_negative_r": 142, "vector_true_positive_r": 143, "vector_confusion_matrix": 144, "optim": [145, 146, 147, 148], "gradient_desc": [146, 147, 148], "gradient_descent_adam": 147, "setup_gradi": 148, "parse_tre": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "node": [150, 151, 152, 153, 154, 155, 156, 157, 158, 159], "basenod": 151, "cvarsqebasenod": 152, "confusionmatrixbasenod": 153, "constantnod": 154, "internalnod": 155, "medcustombasenod": 156, "multiclassbasenod": 157, "rlaltrewardbasenod": 159, "oper": 160, "parsetre": 162, "make_parse_trees_from_constraint": 163, "safety_test": [164, 165, 166], "safetytest": 166, "seldonian_algorithm": [167, 168], "seldonianalgorithm": 168, "spec": [169, 170, 171, 172, 173, 174, 175, 176, 206], "rlspec": 170, "supervisedspec": 172, "createrlspec": 173, "createsimplesupervisedspec": 174, "createsupervisedspec": 175, "validate_parse_tre": 176, "util": [177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], "rl_util": [178, 179, 180, 181], "argmax_multi": 179, "clamp": 180, "error": 181, "io_util": [182, 183, 184, 185, 186, 187], "dir_path": 183, "load_json": 184, "load_pickl": 185, "save_json": 186, "save_pickl": 187, "plot_util": [188, 189], "plot_gradient_desc": 189, "stats_util": [190, 191, 192, 193, 194, 195], "custom_cumprod": 191, "stddev": 193, "tinv": 194, "weighted_sum_gamma": 195, "tutorial_util": [196, 197, 198, 199], "generate_clipped_data": 197, "generate_data": 198, "make_synthetic_regression_dataset": 199, "warn": [200, 201, 202], "custom_warn": [201, 202], "custom_formatwarn": 202, "api": 203, "get": 204, "start": 204, "instal": 204, "A": 204, "first": 204, "tutori": 204, "engin": 205, "document": 205, "content": 205, "overview": 206, "interfac": 206, "behavior": 206, "constraint": 206, "string": 206, "what": 206, "doe": 206, "sa": 206, "run": 206, "do": 206, "candid": 206, "select": 206, "safeti": 206, "test": 206}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"seldonian": [[0, "module-seldonian"]], "seldonian.RL": [[1, "module-seldonian.RL"]], "seldonian.RL.Agents": [[2, "module-seldonian.RL.Agents"]], "seldonian.RL.Agents.Agent": [[3, "module-seldonian.RL.Agents.Agent"]], "seldonian.RL.Agents.Agent.Agent": [[4, "seldonian-rl-agents-agent-agent"]], "seldonian.RL.Agents.Bases": [[5, "module-seldonian.RL.Agents.Bases"]], "seldonian.RL.Agents.Bases.Fourier": [[6, "module-seldonian.RL.Agents.Bases.Fourier"]], "seldonian.RL.Agents.Bases.Fourier.Fourier": [[7, "seldonian-rl-agents-bases-fourier-fourier"]], "seldonian.RL.Agents.Discrete_Random_Agent": [[8, "module-seldonian.RL.Agents.Discrete_Random_Agent"]], "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent": [[9, "seldonian-rl-agents-discrete-random-agent-discrete-random-agent"]], "seldonian.RL.Agents.Function_Approximators": [[10, "module-seldonian.RL.Agents.Function_Approximators"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator": [[11, "module-seldonian.RL.Agents.Function_Approximators.Function_Approximator"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator": [[12, "seldonian-rl-agents-function-approximators-function-approximator-function-approximator"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA": [[13, "module-seldonian.RL.Agents.Function_Approximators.Linear_FA"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA": [[14, "seldonian-rl-agents-function-approximators-linear-fa-linear-fa"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA": [[15, "seldonian-rl-agents-function-approximators-linear-fa-linear-state-action-value-fa"]], "seldonian.RL.Agents.Function_Approximators.Table": [[16, "module-seldonian.RL.Agents.Function_Approximators.Table"]], "seldonian.RL.Agents.Function_Approximators.Table.Q_Table": [[17, "seldonian-rl-agents-function-approximators-table-q-table"]], "seldonian.RL.Agents.Function_Approximators.Table.Table": [[18, "seldonian-rl-agents-function-approximators-table-table"]], "seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description": [[19, "seldonian-rl-agents-function-approximators-table-construct-q-table-from-env-description"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent": [[20, "module-seldonian.RL.Agents.Parameterized_non_learning_softmax_agent"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent": [[21, "seldonian-rl-agents-parameterized-non-learning-softmax-agent-parameterized-non-learning-softmax-agent"]], "seldonian.RL.Agents.Policies": [[22, "module-seldonian.RL.Agents.Policies"]], "seldonian.RL.Agents.Policies.Policy": [[23, "module-seldonian.RL.Agents.Policies.Policy"]], "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy": [[24, "seldonian-rl-agents-policies-policy-discrete-action-policy"]], "seldonian.RL.Agents.Policies.Policy.Policy": [[25, "seldonian-rl-agents-policies-policy-policy"]], "seldonian.RL.Agents.Policies.Softmax": [[26, "module-seldonian.RL.Agents.Policies.Softmax"]], "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax": [[27, "seldonian-rl-agents-policies-softmax-discretesoftmax"]], "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax": [[28, "seldonian-rl-agents-policies-softmax-mixedsoftmax"]], "seldonian.RL.Agents.Policies.Softmax.Softmax": [[29, "seldonian-rl-agents-policies-softmax-softmax"]], "seldonian.RL.Agents.keyboard_gridworld": [[30, "module-seldonian.RL.Agents.keyboard_gridworld"]], "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld": [[31, "seldonian-rl-agents-keyboard-gridworld-keyboard-gridworld"]], "seldonian.RL.Agents.mountain_car_rough_solution": [[32, "module-seldonian.RL.Agents.mountain_car_rough_solution"]], "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution": [[33, "seldonian-rl-agents-mountain-car-rough-solution-mountain-car-rough-solution"]], "seldonian.RL.Env_Description": [[34, "module-seldonian.RL.Env_Description"]], "seldonian.RL.Env_Description.Env_Description": [[35, "module-seldonian.RL.Env_Description.Env_Description"]], "seldonian.RL.Env_Description.Env_Description.Env_Description": [[36, "seldonian-rl-env-description-env-description-env-description"]], "seldonian.RL.Env_Description.Env_Description.check_space_type": [[37, "seldonian-rl-env-description-env-description-check-space-type"]], "seldonian.RL.Env_Description.Spaces": [[38, "module-seldonian.RL.Env_Description.Spaces"]], "seldonian.RL.Env_Description.Spaces.Continuous_Space": [[39, "seldonian-rl-env-description-spaces-continuous-space"]], "seldonian.RL.Env_Description.Spaces.Discrete_Space": [[40, "seldonian-rl-env-description-spaces-discrete-space"]], "seldonian.RL.RL_generate_dataset_and_spec_file": [[41, "module-seldonian.RL.RL_generate_dataset_and_spec_file"]], "seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string": [[42, "seldonian-rl-rl-generate-dataset-and-spec-file-get-constraint-string"]], "seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs": [[43, "seldonian-rl-rl-generate-dataset-and-spec-file-get-env-kwargs"]], "seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path": [[44, "seldonian-rl-rl-generate-dataset-and-spec-file-get-metadata-path"]], "seldonian.RL.RL_generate_dataset_and_spec_file.main": [[45, "seldonian-rl-rl-generate-dataset-and-spec-file-main"]], "seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info": [[46, "seldonian-rl-rl-generate-dataset-and-spec-file-print-return-info"]], "seldonian.RL.RL_model": [[47, "module-seldonian.RL.RL_model"]], "seldonian.RL.RL_model.RL_model": [[48, "seldonian-rl-rl-model-rl-model"]], "seldonian.RL.RL_runner": [[49, "module-seldonian.RL.RL_runner"]], "seldonian.RL.RL_runner.create_agent": [[50, "seldonian-rl-rl-runner-create-agent"]], "seldonian.RL.RL_runner.run_all_trials": [[51, "seldonian-rl-rl-runner-run-all-trials"]], "seldonian.RL.RL_runner.run_episode": [[52, "seldonian-rl-rl-runner-run-episode"]], "seldonian.RL.RL_runner.run_episode_from_dict": [[53, "seldonian-rl-rl-runner-run-episode-from-dict"]], "seldonian.RL.RL_runner.run_trial": [[54, "seldonian-rl-rl-runner-run-trial"]], "seldonian.RL.RL_runner.run_trial_given_agent_and_env": [[55, "seldonian-rl-rl-runner-run-trial-given-agent-and-env"]], "seldonian.RL.environments": [[56, "module-seldonian.RL.environments"]], "seldonian.RL.environments.Environment": [[57, "module-seldonian.RL.environments.Environment"]], "seldonian.RL.environments.Environment.Environment": [[58, "seldonian-rl-environments-environment-environment"]], "seldonian.RL.environments.gridworld": [[59, "module-seldonian.RL.environments.gridworld"]], "seldonian.RL.environments.gridworld.Gridworld": [[60, "seldonian-rl-environments-gridworld-gridworld"]], "seldonian.RL.environments.mountaincar": [[61, "module-seldonian.RL.environments.mountaincar"]], "seldonian.RL.environments.mountaincar.Mountaincar": [[62, "seldonian-rl-environments-mountaincar-mountaincar"]], "seldonian.RL.environments.n_step_mountaincar": [[63, "module-seldonian.RL.environments.n_step_mountaincar"]], "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar": [[64, "seldonian-rl-environments-n-step-mountaincar-n-step-mountaincar"]], "seldonian.RL.environments.simglucose_env": [[65, "module-seldonian.RL.environments.simglucose_env"]], "seldonian.RL.environments.simglucose_env.Simglucose": [[66, "seldonian-rl-environments-simglucose-env-simglucose"]], "seldonian.RL.generate_gridworld_episodes": [[67, "module-seldonian.RL.generate_gridworld_episodes"]], "seldonian.RL.generate_gridworld_episodes.main": [[68, "seldonian-rl-generate-gridworld-episodes-main"]], "seldonian.RL.generate_mountaincar_episodes": [[69, "module-seldonian.RL.generate_mountaincar_episodes"]], "seldonian.RL.generate_mountaincar_episodes.main": [[70, "seldonian-rl-generate-mountaincar-episodes-main"]], "seldonian.RL.generate_simglucose_episodes": [[71, "module-seldonian.RL.generate_simglucose_episodes"]], "seldonian.RL.generate_simglucose_episodes.get_max_obs": [[72, "seldonian-rl-generate-simglucose-episodes-get-max-obs"]], "seldonian.RL.generate_simglucose_episodes.main": [[73, "seldonian-rl-generate-simglucose-episodes-main"]], "seldonian.RL.hyperparams_and_settings": [[74, "module-seldonian.RL.hyperparams_and_settings"]], "seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict": [[75, "seldonian-rl-hyperparams-and-settings-define-hyperparameter-and-setting-dict"]], "seldonian.candidate_selection": [[76, "module-seldonian.candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[77, "module-seldonian.candidate_selection.candidate_selection"]], "seldonian.candidate_selection.candidate_selection.CandidateSelection": [[78, "seldonian-candidate-selection-candidate-selection-candidateselection"]], "seldonian.dataset": [[79, "module-seldonian.dataset"]], "seldonian.dataset.DataSet": [[80, "seldonian-dataset-dataset"]], "seldonian.dataset.DataSetLoader": [[81, "seldonian-dataset-datasetloader"]], "seldonian.dataset.Episode": [[82, "seldonian-dataset-episode"]], "seldonian.dataset.MetaData": [[83, "seldonian-dataset-metadata"]], "seldonian.dataset.RLDataSet": [[84, "seldonian-dataset-rldataset"]], "seldonian.dataset.RLMetaData": [[85, "seldonian-dataset-rlmetadata"]], "seldonian.dataset.SupervisedDataSet": [[86, "seldonian-dataset-superviseddataset"]], "seldonian.dataset.SupervisedMetaData": [[87, "seldonian-dataset-supervisedmetadata"]], "seldonian.dataset.load_RL_metadata": [[88, "seldonian-dataset-load-rl-metadata"]], "seldonian.dataset.load_supervised_metadata": [[89, "seldonian-dataset-load-supervised-metadata"]], "seldonian.hyperparam_search": [[90, "module-seldonian.hyperparam_search"]], "seldonian.hyperparam_search.HyperparamSearch": [[91, "seldonian-hyperparam-search-hyperparamsearch"]], "seldonian.models": [[92, "module-seldonian.models"]], "seldonian.models.models": [[93, "module-seldonian.models.models"]], "seldonian.models.models.BaseLogisticRegressionModel": [[94, "seldonian-models-models-baselogisticregressionmodel"]], "seldonian.models.models.BinaryLogisticRegressionModel": [[95, "seldonian-models-models-binarylogisticregressionmodel"]], "seldonian.models.models.BoundedLinearRegressionModel": [[96, "seldonian-models-models-boundedlinearregressionmodel"]], "seldonian.models.models.ClassificationModel": [[97, "seldonian-models-models-classificationmodel"]], "seldonian.models.models.DummyClassifierModel": [[98, "seldonian-models-models-dummyclassifiermodel"]], "seldonian.models.models.LinearRegressionModel": [[99, "seldonian-models-models-linearregressionmodel"]], "seldonian.models.models.LinearRegressionModelListFeatures": [[100, "seldonian-models-models-linearregressionmodellistfeatures"]], "seldonian.models.models.MultiClassLogisticRegressionModel": [[101, "seldonian-models-models-multiclasslogisticregressionmodel"]], "seldonian.models.models.RandomClassifierModel": [[102, "seldonian-models-models-randomclassifiermodel"]], "seldonian.models.models.RegressionModel": [[103, "seldonian-models-models-regressionmodel"]], "seldonian.models.models.SeldonianModel": [[104, "seldonian-models-models-seldonianmodel"]], "seldonian.models.models.SupervisedModel": [[105, "seldonian-models-models-supervisedmodel"]], "seldonian.models.objectives": [[106, "module-seldonian.models.objectives"]], "seldonian.models.objectives.Accuracy": [[107, "seldonian-models-objectives-accuracy"]], "seldonian.models.objectives.False_Negative_Rate": [[108, "seldonian-models-objectives-false-negative-rate"]], "seldonian.models.objectives.False_Positive_Rate": [[109, "seldonian-models-objectives-false-positive-rate"]], "seldonian.models.objectives.IS_estimate": [[110, "seldonian-models-objectives-is-estimate"]], "seldonian.models.objectives.Mean_Error": [[111, "seldonian-models-objectives-mean-error"]], "seldonian.models.objectives.Mean_Squared_Error": [[112, "seldonian-models-objectives-mean-squared-error"]], "seldonian.models.objectives.Negative_Rate": [[113, "seldonian-models-objectives-negative-rate"]], "seldonian.models.objectives.PDIS_estimate": [[114, "seldonian-models-objectives-pdis-estimate"]], "seldonian.models.objectives.Positive_Rate": [[115, "seldonian-models-objectives-positive-rate"]], "seldonian.models.objectives.True_Negative_Rate": [[116, "seldonian-models-objectives-true-negative-rate"]], "seldonian.models.objectives.True_Positive_Rate": [[117, "seldonian-models-objectives-true-positive-rate"]], "seldonian.models.objectives.binary_logistic_loss": [[118, "seldonian-models-objectives-binary-logistic-loss"]], "seldonian.models.objectives.confusion_matrix": [[119, "seldonian-models-objectives-confusion-matrix"]], "seldonian.models.objectives.gradient_Bounded_Squared_Error": [[120, "seldonian-models-objectives-gradient-bounded-squared-error"]], "seldonian.models.objectives.gradient_Mean_Squared_Error": [[121, "seldonian-models-objectives-gradient-mean-squared-error"]], "seldonian.models.objectives.gradient_binary_logistic_loss": [[122, "seldonian-models-objectives-gradient-binary-logistic-loss"]], "seldonian.models.objectives.multiclass_logistic_loss": [[123, "seldonian-models-objectives-multiclass-logistic-loss"]], "seldonian.models.sklearn_lr": [[124, "module-seldonian.models.sklearn_lr"]], "seldonian.models.sklearn_lr.SkLearnLinearRegressor": [[125, "seldonian-models-sklearn-lr-sklearnlinearregressor"]], "seldonian.models.sklearn_model": [[126, "module-seldonian.models.sklearn_model"]], "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel": [[127, "seldonian-models-sklearn-model-supervisedsklearnbasemodel"]], "seldonian.models.sklearn_model.sklearn_predict_vjp": [[128, "seldonian-models-sklearn-model-sklearn-predict-vjp"]], "seldonian.models.zhat_funcs": [[129, "module-seldonian.models.zhat_funcs"]], "seldonian.models.zhat_funcs.batcher": [[130, "seldonian-models-zhat-funcs-batcher"]], "seldonian.models.zhat_funcs.evaluate_statistic": [[131, "seldonian-models-zhat-funcs-evaluate-statistic"]], "seldonian.models.zhat_funcs.sample_from_statistic": [[132, "seldonian-models-zhat-funcs-sample-from-statistic"]], "seldonian.models.zhat_funcs.vector_Accuracy": [[133, "seldonian-models-zhat-funcs-vector-accuracy"]], "seldonian.models.zhat_funcs.vector_Error": [[134, "seldonian-models-zhat-funcs-vector-error"]], "seldonian.models.zhat_funcs.vector_False_Negative_Rate": [[135, "seldonian-models-zhat-funcs-vector-false-negative-rate"]], "seldonian.models.zhat_funcs.vector_False_Positive_Rate": [[136, "seldonian-models-zhat-funcs-vector-false-positive-rate"]], "seldonian.models.zhat_funcs.vector_IS_estimate": [[137, "seldonian-models-zhat-funcs-vector-is-estimate"]], "seldonian.models.zhat_funcs.vector_Negative_Rate": [[138, "seldonian-models-zhat-funcs-vector-negative-rate"]], "seldonian.models.zhat_funcs.vector_PDIS_estimate": [[139, "seldonian-models-zhat-funcs-vector-pdis-estimate"]], "seldonian.models.zhat_funcs.vector_Positive_Rate": [[140, "seldonian-models-zhat-funcs-vector-positive-rate"]], "seldonian.models.zhat_funcs.vector_Squared_Error": [[141, "seldonian-models-zhat-funcs-vector-squared-error"]], "seldonian.models.zhat_funcs.vector_True_Negative_Rate": [[142, "seldonian-models-zhat-funcs-vector-true-negative-rate"]], "seldonian.models.zhat_funcs.vector_True_Positive_Rate": [[143, "seldonian-models-zhat-funcs-vector-true-positive-rate"]], "seldonian.models.zhat_funcs.vector_confusion_matrix": [[144, "seldonian-models-zhat-funcs-vector-confusion-matrix"]], "seldonian.optimizers": [[145, "module-seldonian.optimizers"]], "seldonian.optimizers.gradient_descent": [[146, "module-seldonian.optimizers.gradient_descent"]], "seldonian.optimizers.gradient_descent.gradient_descent_adam": [[147, "seldonian-optimizers-gradient-descent-gradient-descent-adam"]], "seldonian.optimizers.gradient_descent.setup_gradients": [[148, "seldonian-optimizers-gradient-descent-setup-gradients"]], "seldonian.parse_tree": [[149, "module-seldonian.parse_tree"]], "seldonian.parse_tree.nodes": [[150, "module-seldonian.parse_tree.nodes"]], "seldonian.parse_tree.nodes.BaseNode": [[151, "seldonian-parse-tree-nodes-basenode"]], "seldonian.parse_tree.nodes.CVaRSQeBaseNode": [[152, "seldonian-parse-tree-nodes-cvarsqebasenode"]], "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode": [[153, "seldonian-parse-tree-nodes-confusionmatrixbasenode"]], "seldonian.parse_tree.nodes.ConstantNode": [[154, "seldonian-parse-tree-nodes-constantnode"]], "seldonian.parse_tree.nodes.InternalNode": [[155, "seldonian-parse-tree-nodes-internalnode"]], "seldonian.parse_tree.nodes.MEDCustomBaseNode": [[156, "seldonian-parse-tree-nodes-medcustombasenode"]], "seldonian.parse_tree.nodes.MultiClassBaseNode": [[157, "seldonian-parse-tree-nodes-multiclassbasenode"]], "seldonian.parse_tree.nodes.Node": [[158, "seldonian-parse-tree-nodes-node"]], "seldonian.parse_tree.nodes.RLAltRewardBaseNode": [[159, "seldonian-parse-tree-nodes-rlaltrewardbasenode"]], "seldonian.parse_tree.operators": [[160, "module-seldonian.parse_tree.operators"]], "seldonian.parse_tree.parse_tree": [[161, "module-seldonian.parse_tree.parse_tree"]], "seldonian.parse_tree.parse_tree.ParseTree": [[162, "seldonian-parse-tree-parse-tree-parsetree"]], "seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints": [[163, "seldonian-parse-tree-parse-tree-make-parse-trees-from-constraints"]], "seldonian.safety_test": [[164, "module-seldonian.safety_test"]], "seldonian.safety_test.safety_test": [[165, "module-seldonian.safety_test.safety_test"]], "seldonian.safety_test.safety_test.SafetyTest": [[166, "seldonian-safety-test-safety-test-safetytest"]], "seldonian.seldonian_algorithm": [[167, "module-seldonian.seldonian_algorithm"]], "seldonian.seldonian_algorithm.SeldonianAlgorithm": [[168, "seldonian-seldonian-algorithm-seldonianalgorithm"]], "seldonian.spec": [[169, "module-seldonian.spec"]], "seldonian.spec.RLSpec": [[170, "seldonian-spec-rlspec"]], "seldonian.spec.Spec": [[171, "seldonian-spec-spec"]], "seldonian.spec.SupervisedSpec": [[172, "seldonian-spec-supervisedspec"]], "seldonian.spec.createRLSpec": [[173, "seldonian-spec-createrlspec"]], "seldonian.spec.createSimpleSupervisedSpec": [[174, "seldonian-spec-createsimplesupervisedspec"]], "seldonian.spec.createSupervisedSpec": [[175, "seldonian-spec-createsupervisedspec"]], "seldonian.spec.validate_parse_trees": [[176, "seldonian-spec-validate-parse-trees"]], "seldonian.utils": [[177, "module-seldonian.utils"]], "seldonian.utils.RL_utils": [[178, "module-seldonian.utils.RL_utils"]], "seldonian.utils.RL_utils.argmax_multi": [[179, "seldonian-utils-rl-utils-argmax-multi"]], "seldonian.utils.RL_utils.clamp": [[180, "seldonian-utils-rl-utils-clamp"]], "seldonian.utils.RL_utils.error": [[181, "seldonian-utils-rl-utils-error"]], "seldonian.utils.io_utils": [[182, "module-seldonian.utils.io_utils"]], "seldonian.utils.io_utils.dir_path": [[183, "seldonian-utils-io-utils-dir-path"]], "seldonian.utils.io_utils.load_json": [[184, "seldonian-utils-io-utils-load-json"]], "seldonian.utils.io_utils.load_pickle": [[185, "seldonian-utils-io-utils-load-pickle"]], "seldonian.utils.io_utils.save_json": [[186, "seldonian-utils-io-utils-save-json"]], "seldonian.utils.io_utils.save_pickle": [[187, "seldonian-utils-io-utils-save-pickle"]], "seldonian.utils.plot_utils": [[188, "module-seldonian.utils.plot_utils"]], "seldonian.utils.plot_utils.plot_gradient_descent": [[189, "seldonian-utils-plot-utils-plot-gradient-descent"]], "seldonian.utils.stats_utils": [[190, "module-seldonian.utils.stats_utils"]], "seldonian.utils.stats_utils.custom_cumprod": [[191, "seldonian-utils-stats-utils-custom-cumprod"]], "seldonian.utils.stats_utils.softmax": [[192, "seldonian-utils-stats-utils-softmax"]], "seldonian.utils.stats_utils.stddev": [[193, "seldonian-utils-stats-utils-stddev"]], "seldonian.utils.stats_utils.tinv": [[194, "seldonian-utils-stats-utils-tinv"]], "seldonian.utils.stats_utils.weighted_sum_gamma": [[195, "seldonian-utils-stats-utils-weighted-sum-gamma"]], "seldonian.utils.tutorial_utils": [[196, "module-seldonian.utils.tutorial_utils"]], "seldonian.utils.tutorial_utils.generate_clipped_data": [[197, "seldonian-utils-tutorial-utils-generate-clipped-data"]], "seldonian.utils.tutorial_utils.generate_data": [[198, "seldonian-utils-tutorial-utils-generate-data"]], "seldonian.utils.tutorial_utils.make_synthetic_regression_dataset": [[199, "seldonian-utils-tutorial-utils-make-synthetic-regression-dataset"]], "seldonian.warnings": [[200, "module-seldonian.warnings"]], "seldonian.warnings.custom_warnings": [[201, "module-seldonian.warnings.custom_warnings"]], "seldonian.warnings.custom_warnings.custom_formatwarning": [[202, "seldonian-warnings-custom-warnings-custom-formatwarning"]], "API": [[203, "api"]], "Getting Started": [[204, "getting-started"]], "Installation": [[204, "installation"]], "A first tutorial": [[204, "a-first-tutorial"]], "Seldonian Engine documentation": [[205, "seldonian-engine-documentation"]], "Table of contents": [[205, "table-of-contents"]], "Overview": [[206, "overview"]], "Interface": [[206, "interface"]], "Spec object": [[206, "spec-object"]], "Dataset object": [[206, "dataset-object"]], "Model object": [[206, "model-object"]], "Behavioral constraints": [[206, "behavioral-constraints"]], "Constraint strings": [[206, "constraint-strings"]], "What does SA.run() do?": [[206, "what-does-sa-run-do"]], "Candidate Selection": [[206, "candidate-selection"]], "Safety Test": [[206, "safety-test"]]}, "indexentries": {"module": [[0, "module-seldonian"], [1, "module-seldonian.RL"], [2, "module-seldonian.RL.Agents"], [3, "module-seldonian.RL.Agents.Agent"], [5, "module-seldonian.RL.Agents.Bases"], [6, "module-seldonian.RL.Agents.Bases.Fourier"], [8, "module-seldonian.RL.Agents.Discrete_Random_Agent"], [10, "module-seldonian.RL.Agents.Function_Approximators"], [11, "module-seldonian.RL.Agents.Function_Approximators.Function_Approximator"], [13, "module-seldonian.RL.Agents.Function_Approximators.Linear_FA"], [16, "module-seldonian.RL.Agents.Function_Approximators.Table"], [20, "module-seldonian.RL.Agents.Parameterized_non_learning_softmax_agent"], [22, "module-seldonian.RL.Agents.Policies"], [23, "module-seldonian.RL.Agents.Policies.Policy"], [26, "module-seldonian.RL.Agents.Policies.Softmax"], [30, "module-seldonian.RL.Agents.keyboard_gridworld"], [32, "module-seldonian.RL.Agents.mountain_car_rough_solution"], [34, "module-seldonian.RL.Env_Description"], [35, "module-seldonian.RL.Env_Description.Env_Description"], [38, "module-seldonian.RL.Env_Description.Spaces"], [41, "module-seldonian.RL.RL_generate_dataset_and_spec_file"], [47, "module-seldonian.RL.RL_model"], [49, "module-seldonian.RL.RL_runner"], [56, "module-seldonian.RL.environments"], [57, "module-seldonian.RL.environments.Environment"], [59, "module-seldonian.RL.environments.gridworld"], [61, "module-seldonian.RL.environments.mountaincar"], [63, "module-seldonian.RL.environments.n_step_mountaincar"], [65, "module-seldonian.RL.environments.simglucose_env"], [67, "module-seldonian.RL.generate_gridworld_episodes"], [69, "module-seldonian.RL.generate_mountaincar_episodes"], [71, "module-seldonian.RL.generate_simglucose_episodes"], [74, "module-seldonian.RL.hyperparams_and_settings"], [76, "module-seldonian.candidate_selection"], [77, "module-seldonian.candidate_selection.candidate_selection"], [79, "module-seldonian.dataset"], [90, "module-seldonian.hyperparam_search"], [92, "module-seldonian.models"], [93, "module-seldonian.models.models"], [106, "module-seldonian.models.objectives"], [124, "module-seldonian.models.sklearn_lr"], [126, "module-seldonian.models.sklearn_model"], [129, "module-seldonian.models.zhat_funcs"], [145, "module-seldonian.optimizers"], [146, "module-seldonian.optimizers.gradient_descent"], [149, "module-seldonian.parse_tree"], [150, "module-seldonian.parse_tree.nodes"], [160, "module-seldonian.parse_tree.operators"], [161, "module-seldonian.parse_tree.parse_tree"], [164, "module-seldonian.safety_test"], [165, "module-seldonian.safety_test.safety_test"], [167, "module-seldonian.seldonian_algorithm"], [169, "module-seldonian.spec"], [177, "module-seldonian.utils"], [178, "module-seldonian.utils.RL_utils"], [182, "module-seldonian.utils.io_utils"], [188, "module-seldonian.utils.plot_utils"], [190, "module-seldonian.utils.stats_utils"], [196, "module-seldonian.utils.tutorial_utils"], [200, "module-seldonian.warnings"], [201, "module-seldonian.warnings.custom_warnings"]], "seldonian": [[0, "module-seldonian"]], "seldonian.rl": [[1, "module-seldonian.RL"]], "seldonian.rl.agents": [[2, "module-seldonian.RL.Agents"]], "seldonian.rl.agents.agent": [[3, "module-seldonian.RL.Agents.Agent"]], "agent (class in seldonian.rl.agents.agent)": [[4, "seldonian.RL.Agents.Agent.Agent"]], "__init__() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.__init__"]], "__repr__() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.__repr__"]], "choose_action() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.choose_action"]], "get_params() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.get_params"]], "get_prob_this_action() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.get_prob_this_action"]], "set_new_params() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.set_new_params"]], "update() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.update"]], "seldonian.rl.agents.bases": [[5, "module-seldonian.RL.Agents.Bases"]], "seldonian.rl.agents.bases.fourier": [[6, "module-seldonian.RL.Agents.Bases.Fourier"]], "fourier (class in seldonian.rl.agents.bases.fourier)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier"]], "__init__() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.__init__"]], "__repr__() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.__repr__"]], "calculate_num_features() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.calculate_num_features"]], "construct_basis_matrix() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.construct_basis_matrix"]], "get_features() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.get_features"]], "get_normalized_observation() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.get_normalized_observation"]], "seldonian.rl.agents.discrete_random_agent": [[8, "module-seldonian.RL.Agents.Discrete_Random_Agent"]], "discrete_random_agent (class in seldonian.rl.agents.discrete_random_agent)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent"]], "__init__() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.__init__"]], "__repr__() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.__repr__"]], "choose_action() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.choose_action"]], "get_params() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.get_params"]], "get_prob_this_action() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.get_prob_this_action"]], "set_new_params() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.set_new_params"]], "update() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.update"]], "seldonian.rl.agents.function_approximators": [[10, "module-seldonian.RL.Agents.Function_Approximators"]], "seldonian.rl.agents.function_approximators.function_approximator": [[11, "module-seldonian.RL.Agents.Function_Approximators.Function_Approximator"]], "function_approximator (class in seldonian.rl.agents.function_approximators.function_approximator)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator"]], "__init__() (function_approximator method)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.__init__"]], "__repr__() (function_approximator method)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.__repr__"]], "set_new_params() (function_approximator method)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.set_new_params"]], "seldonian.rl.agents.function_approximators.linear_fa": [[13, "module-seldonian.RL.Agents.Function_Approximators.Linear_FA"]], "linear_fa (class in seldonian.rl.agents.function_approximators.linear_fa)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA"]], "__init__() (linear_fa method)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.__init__"]], "__repr__() (linear_fa method)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.__repr__"]], "set_new_params() (linear_fa method)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.set_new_params"]], "linear_state_action_value_fa (class in seldonian.rl.agents.function_approximators.linear_fa)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA"]], "__init__() (linear_state_action_value_fa method)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.__init__"]], "__repr__() (linear_state_action_value_fa method)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.__repr__"]], "set_new_params() (linear_state_action_value_fa method)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.set_new_params"]], "seldonian.rl.agents.function_approximators.table": [[16, "module-seldonian.RL.Agents.Function_Approximators.Table"]], "q_table (class in seldonian.rl.agents.function_approximators.table)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table"]], "__init__() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.__init__"]], "__repr__() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.__repr__"]], "from_environment_state_to_0_indexed_state() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.from_environment_state_to_0_indexed_state"]], "get_action_values_given_state() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.get_action_values_given_state"]], "get_action_values_given_zero_indexed_state() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.get_action_values_given_zero_indexed_state"]], "set_new_params() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.set_new_params"]], "table (class in seldonian.rl.agents.function_approximators.table)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table"]], "__init__() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.__init__"]], "__repr__() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.__repr__"]], "from_environment_state_to_0_indexed_state() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.from_environment_state_to_0_indexed_state"]], "set_new_params() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.set_new_params"]], "construct_q_table_from_env_description() (in module seldonian.rl.agents.function_approximators.table)": [[19, "seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description"]], "seldonian.rl.agents.parameterized_non_learning_softmax_agent": [[20, "module-seldonian.RL.Agents.Parameterized_non_learning_softmax_agent"]], "parameterized_non_learning_softmax_agent (class in seldonian.rl.agents.parameterized_non_learning_softmax_agent)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent"]], "__init__() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.__init__"]], "__repr__() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.__repr__"]], "choose_action() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.choose_action"]], "get_action_values() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.get_action_values"]], "get_params() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.get_params"]], "get_prob_this_action() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.get_prob_this_action"]], "set_new_params() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.set_new_params"]], "update() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.update"]], "seldonian.rl.agents.policies": [[22, "module-seldonian.RL.Agents.Policies"]], "seldonian.rl.agents.policies.policy": [[23, "module-seldonian.RL.Agents.Policies.Policy"]], "discrete_action_policy (class in seldonian.rl.agents.policies.policy)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy"]], "__init__() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.__init__"]], "__repr__() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.__repr__"]], "choose_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.choose_action"]], "construct_basis_and_linear_fa() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.construct_basis_and_linear_FA"]], "from_0_indexed_action_to_environment_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.from_0_indexed_action_to_environment_action"]], "from_environment_action_to_0_indexed_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.from_environment_action_to_0_indexed_action"]], "get_action_values_given_state() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.get_action_values_given_state"]], "get_params() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.get_params"]], "get_prob_this_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.get_prob_this_action"]], "make_state_action_fa() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.make_state_action_FA"]], "set_new_params() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.set_new_params"]], "policy (class in seldonian.rl.agents.policies.policy)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy"]], "__init__() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.__init__"]], "__repr__() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.__repr__"]], "choose_action() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.choose_action"]], "get_params() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.get_params"]], "get_prob_this_action() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.get_prob_this_action"]], "set_new_params() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.set_new_params"]], "seldonian.rl.agents.policies.softmax": [[26, "module-seldonian.RL.Agents.Policies.Softmax"]], "discretesoftmax (class in seldonian.rl.agents.policies.softmax)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax"]], "__init__() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.__init__"]], "__repr__() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.__repr__"]], "_arg() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax._arg"]], "_denom() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax._denom"]], "choose_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.choose_action"]], "choose_action_from_action_values() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.choose_action_from_action_values"]], "construct_basis_and_linear_fa() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.construct_basis_and_linear_FA"]], "from_0_indexed_action_to_environment_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.from_0_indexed_action_to_environment_action"]], "from_environment_action_to_0_indexed_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.from_environment_action_to_0_indexed_action"]], "get_action_probs_from_action_values() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_action_probs_from_action_values"]], "get_action_values_given_state() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_action_values_given_state"]], "get_e_to_the_something_terms() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_e_to_the_something_terms"]], "get_params() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_params"]], "get_prob_this_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_prob_this_action"]], "make_state_action_fa() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.make_state_action_FA"]], "set_new_params() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.set_new_params"]], "mixedsoftmax (class in seldonian.rl.agents.policies.softmax)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax"]], "__init__() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.__init__"]], "__repr__() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.__repr__"]], "choose_action() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.choose_action"]], "choose_action_from_action_values() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.choose_action_from_action_values"]], "construct_basis_and_linear_fa() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.construct_basis_and_linear_FA"]], "from_0_indexed_action_to_environment_action() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.from_0_indexed_action_to_environment_action"]], "from_environment_action_to_0_indexed_action() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.from_environment_action_to_0_indexed_action"]], "get_action_probs_from_action_values() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.get_action_probs_from_action_values"]], "get_action_values_given_state() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.get_action_values_given_state"]], "get_e_to_the_something_terms() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.get_e_to_the_something_terms"]], "get_params() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.get_params"]], "get_prob_this_action() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.get_prob_this_action"]], "make_state_action_fa() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.make_state_action_FA"]], "set_new_params() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.set_new_params"]], "softmax (class in seldonian.rl.agents.policies.softmax)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax"]], "__init__() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.__init__"]], "__repr__() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.__repr__"]], "choose_action() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.choose_action"]], "choose_action_from_action_values() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.choose_action_from_action_values"]], "construct_basis_and_linear_fa() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.construct_basis_and_linear_FA"]], "from_0_indexed_action_to_environment_action() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.from_0_indexed_action_to_environment_action"]], "from_environment_action_to_0_indexed_action() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.from_environment_action_to_0_indexed_action"]], "get_action_probs_from_action_values() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_action_probs_from_action_values"]], "get_action_values_given_state() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_action_values_given_state"]], "get_e_to_the_something_terms() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_e_to_the_something_terms"]], "get_params() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_params"]], "get_prob_this_action() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_prob_this_action"]], "make_state_action_fa() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.make_state_action_FA"]], "set_new_params() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.set_new_params"]], "seldonian.rl.agents.keyboard_gridworld": [[30, "module-seldonian.RL.Agents.keyboard_gridworld"]], "keyboard_gridworld (class in seldonian.rl.agents.keyboard_gridworld)": [[31, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld"]], "__init__() (keyboard_gridworld method)": [[31, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.__init__"]], "__repr__() (keyboard_gridworld method)": [[31, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.__repr__"]], "choose_action() (keyboard_gridworld method)": [[31, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.choose_action"]], "get_params() (keyboard_gridworld method)": [[31, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.get_params"]], "get_prob_this_action() (keyboard_gridworld method)": [[31, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.get_prob_this_action"]], "set_new_params() (keyboard_gridworld method)": [[31, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.set_new_params"]], "update() (keyboard_gridworld method)": [[31, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.update"]], "seldonian.rl.agents.mountain_car_rough_solution": [[32, "module-seldonian.RL.Agents.mountain_car_rough_solution"]], "mountain_car_rough_solution (class in seldonian.rl.agents.mountain_car_rough_solution)": [[33, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution"]], "__init__() (mountain_car_rough_solution method)": [[33, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.__init__"]], "__repr__() (mountain_car_rough_solution method)": [[33, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.__repr__"]], "choose_action() (mountain_car_rough_solution method)": [[33, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.choose_action"]], "get_params() (mountain_car_rough_solution method)": [[33, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.get_params"]], "get_prob_this_action() (mountain_car_rough_solution method)": [[33, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.get_prob_this_action"]], "set_new_params() (mountain_car_rough_solution method)": [[33, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.set_new_params"]], "update() (mountain_car_rough_solution method)": [[33, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.update"]], "seldonian.rl.env_description": [[34, "module-seldonian.RL.Env_Description"]], "seldonian.rl.env_description.env_description": [[35, "module-seldonian.RL.Env_Description.Env_Description"]], "env_description (class in seldonian.rl.env_description.env_description)": [[36, "seldonian.RL.Env_Description.Env_Description.Env_Description"]], "__init__() (env_description method)": [[36, "seldonian.RL.Env_Description.Env_Description.Env_Description.__init__"]], "__repr__() (env_description method)": [[36, "seldonian.RL.Env_Description.Env_Description.Env_Description.__repr__"]], "get_min_action() (env_description method)": [[36, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_min_action"]], "get_min_state() (env_description method)": [[36, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_min_state"]], "get_num_actions() (env_description method)": [[36, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_num_actions"]], "get_num_observation_dims() (env_description method)": [[36, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_num_observation_dims"]], "get_num_states() (env_description method)": [[36, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_num_states"]], "check_space_type() (in module seldonian.rl.env_description.env_description)": [[37, "seldonian.RL.Env_Description.Env_Description.check_space_type"]], "seldonian.rl.env_description.spaces": [[38, "module-seldonian.RL.Env_Description.Spaces"]], "continuous_space (class in seldonian.rl.env_description.spaces)": [[39, "seldonian.RL.Env_Description.Spaces.Continuous_Space"]], "__init__() (continuous_space method)": [[39, "seldonian.RL.Env_Description.Spaces.Continuous_Space.__init__"]], "__repr__() (continuous_space method)": [[39, "seldonian.RL.Env_Description.Spaces.Continuous_Space.__repr__"]], "check_bounds_valid() (continuous_space method)": [[39, "seldonian.RL.Env_Description.Spaces.Continuous_Space.check_bounds_valid"]], "get_num_dims() (continuous_space method)": [[39, "seldonian.RL.Env_Description.Spaces.Continuous_Space.get_num_dims"]], "discrete_space (class in seldonian.rl.env_description.spaces)": [[40, "seldonian.RL.Env_Description.Spaces.Discrete_Space"]], "__init__() (discrete_space method)": [[40, "seldonian.RL.Env_Description.Spaces.Discrete_Space.__init__"]], "__repr__() (discrete_space method)": [[40, "seldonian.RL.Env_Description.Spaces.Discrete_Space.__repr__"]], "get_num_values() (discrete_space method)": [[40, "seldonian.RL.Env_Description.Spaces.Discrete_Space.get_num_values"]], "seldonian.rl.rl_generate_dataset_and_spec_file": [[41, "module-seldonian.RL.RL_generate_dataset_and_spec_file"]], "get_constraint_string() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[42, "seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string"]], "get_env_kwargs() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[43, "seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs"]], "get_metadata_path() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[44, "seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path"]], "main() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[45, "seldonian.RL.RL_generate_dataset_and_spec_file.main"]], "print_return_info() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[46, "seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info"]], "seldonian.rl.rl_model": [[47, "module-seldonian.RL.RL_model"]], "rl_model (class in seldonian.rl.rl_model)": [[48, "seldonian.RL.RL_model.RL_model"]], "__init__() (rl_model method)": [[48, "seldonian.RL.RL_model.RL_model.__init__"]], "__repr__() (rl_model method)": [[48, "seldonian.RL.RL_model.RL_model.__repr__"]], "get_prob_this_action() (rl_model method)": [[48, "seldonian.RL.RL_model.RL_model.get_prob_this_action"]], "get_probs_from_observations_and_actions() (rl_model method)": [[48, "seldonian.RL.RL_model.RL_model.get_probs_from_observations_and_actions"]], "seldonian.rl.rl_runner": [[49, "module-seldonian.RL.RL_runner"]], "create_agent() (in module seldonian.rl.rl_runner)": [[50, "seldonian.RL.RL_runner.create_agent"]], "run_all_trials() (in module seldonian.rl.rl_runner)": [[51, "seldonian.RL.RL_runner.run_all_trials"]], "run_episode() (in module seldonian.rl.rl_runner)": [[52, "seldonian.RL.RL_runner.run_episode"]], "run_episode_from_dict() (in module seldonian.rl.rl_runner)": [[53, "seldonian.RL.RL_runner.run_episode_from_dict"]], "run_trial() (in module seldonian.rl.rl_runner)": [[54, "seldonian.RL.RL_runner.run_trial"]], "run_trial_given_agent_and_env() (in module seldonian.rl.rl_runner)": [[55, "seldonian.RL.RL_runner.run_trial_given_agent_and_env"]], "seldonian.rl.environments": [[56, "module-seldonian.RL.environments"]], "seldonian.rl.environments.environment": [[57, "module-seldonian.RL.environments.Environment"]], "environment (class in seldonian.rl.environments.environment)": [[58, "seldonian.RL.environments.Environment.Environment"]], "__init__() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.__init__"]], "__repr__() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.__repr__"]], "get_env_description() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.get_env_description"]], "get_observation() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.get_observation"]], "reset() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.reset"]], "start_visualizing() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.start_visualizing"]], "stop_visualizing() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.stop_visualizing"]], "terminated() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.terminated"]], "transition() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.transition"]], "visualize() (environment method)": [[58, "seldonian.RL.environments.Environment.Environment.visualize"]], "seldonian.rl.environments.gridworld": [[59, "module-seldonian.RL.environments.gridworld"]], "gridworld (class in seldonian.rl.environments.gridworld)": [[60, "seldonian.RL.environments.gridworld.Gridworld"]], "__init__() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.__init__"]], "__repr__() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.__repr__"]], "create_env_description() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.create_env_description"]], "get_env_description() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.get_env_description"]], "get_observation() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.get_observation"]], "is_in_goal_state() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.is_in_goal_state"]], "reset() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.reset"]], "start_visualizing() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.start_visualizing"]], "stop_visualizing() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.stop_visualizing"]], "terminated() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.terminated"]], "transition() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.transition"]], "update_position() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.update_position"]], "visualize() (gridworld method)": [[60, "seldonian.RL.environments.gridworld.Gridworld.visualize"]], "seldonian.rl.environments.mountaincar": [[61, "module-seldonian.RL.environments.mountaincar"]], "mountaincar (class in seldonian.rl.environments.mountaincar)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar"]], "__init__() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.__init__"]], "__repr__() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.__repr__"]], "get_env_description() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.get_env_description"]], "get_observation() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.get_observation"]], "reset() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.reset"]], "start_visualizing() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.start_visualizing"]], "stop_visualizing() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.stop_visualizing"]], "terminated() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.terminated"]], "transition() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.transition"]], "visualize() (mountaincar method)": [[62, "seldonian.RL.environments.mountaincar.Mountaincar.visualize"]], "seldonian.rl.environments.n_step_mountaincar": [[63, "module-seldonian.RL.environments.n_step_mountaincar"]], "n_step_mountaincar (class in seldonian.rl.environments.n_step_mountaincar)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar"]], "__init__() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.__init__"]], "__repr__() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.__repr__"]], "get_env_description() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.get_env_description"]], "get_observation() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.get_observation"]], "reset() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.reset"]], "start_visualizing() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.start_visualizing"]], "stop_visualizing() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.stop_visualizing"]], "terminated() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.terminated"]], "transition() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.transition"]], "visualize() (n_step_mountaincar method)": [[64, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.visualize"]], "seldonian.rl.environments.simglucose_env": [[65, "module-seldonian.RL.environments.simglucose_env"]], "simglucose (class in seldonian.rl.environments.simglucose_env)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose"]], "__init__() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.__init__"]], "__repr__() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.__repr__"]], "get_env_description() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.get_env_description"]], "get_observation() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.get_observation"]], "reset() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.reset"]], "start_visualizing() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.start_visualizing"]], "stop_visualizing() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.stop_visualizing"]], "terminated() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.terminated"]], "transition() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.transition"]], "visualize() (simglucose method)": [[66, "seldonian.RL.environments.simglucose_env.Simglucose.visualize"]], "seldonian.rl.generate_gridworld_episodes": [[67, "module-seldonian.RL.generate_gridworld_episodes"]], "main() (in module seldonian.rl.generate_gridworld_episodes)": [[68, "seldonian.RL.generate_gridworld_episodes.main"]], "seldonian.rl.generate_mountaincar_episodes": [[69, "module-seldonian.RL.generate_mountaincar_episodes"]], "main() (in module seldonian.rl.generate_mountaincar_episodes)": [[70, "seldonian.RL.generate_mountaincar_episodes.main"]], "seldonian.rl.generate_simglucose_episodes": [[71, "module-seldonian.RL.generate_simglucose_episodes"]], "get_max_obs() (in module seldonian.rl.generate_simglucose_episodes)": [[72, "seldonian.RL.generate_simglucose_episodes.get_max_obs"]], "main() (in module seldonian.rl.generate_simglucose_episodes)": [[73, "seldonian.RL.generate_simglucose_episodes.main"]], "seldonian.rl.hyperparams_and_settings": [[74, "module-seldonian.RL.hyperparams_and_settings"]], "define_hyperparameter_and_setting_dict() (in module seldonian.rl.hyperparams_and_settings)": [[75, "seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict"]], "seldonian.candidate_selection": [[76, "module-seldonian.candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[77, "module-seldonian.candidate_selection.candidate_selection"]], "candidateselection (class in seldonian.candidate_selection.candidate_selection)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection"]], "__init__() (candidateselection method)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection.__init__"]], "__repr__() (candidateselection method)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection.__repr__"]], "calculate_batches() (candidateselection method)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection.calculate_batches"]], "evaluate_primary_objective() (candidateselection method)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection.evaluate_primary_objective"]], "get_constraint_upper_bounds() (candidateselection method)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection.get_constraint_upper_bounds"]], "objective_with_barrier() (candidateselection method)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection.objective_with_barrier"]], "run() (candidateselection method)": [[78, "seldonian.candidate_selection.candidate_selection.CandidateSelection.run"]], "seldonian.dataset": [[79, "module-seldonian.dataset"]], "dataset (class in seldonian.dataset)": [[80, "seldonian.dataset.DataSet"]], "__init__() (dataset method)": [[80, "seldonian.dataset.DataSet.__init__"]], "__repr__() (dataset method)": [[80, "seldonian.dataset.DataSet.__repr__"]], "datasetloader (class in seldonian.dataset)": [[81, "seldonian.dataset.DataSetLoader"]], "__init__() (datasetloader method)": [[81, "seldonian.dataset.DataSetLoader.__init__"]], "__repr__() (datasetloader method)": [[81, "seldonian.dataset.DataSetLoader.__repr__"]], "load_rl_dataset_from_csv() (datasetloader method)": [[81, "seldonian.dataset.DataSetLoader.load_RL_dataset_from_csv"]], "load_rl_dataset_from_episode_file() (datasetloader method)": [[81, "seldonian.dataset.DataSetLoader.load_RL_dataset_from_episode_file"]], "load_supervised_dataset() (datasetloader method)": [[81, "seldonian.dataset.DataSetLoader.load_supervised_dataset"]], "episode (class in seldonian.dataset)": [[82, "seldonian.dataset.Episode"]], "__init__() (episode method)": [[82, "seldonian.dataset.Episode.__init__"]], "__repr__() (episode method)": [[82, "seldonian.dataset.Episode.__repr__"]], "metadata (class in seldonian.dataset)": [[83, "seldonian.dataset.MetaData"]], "__init__() (metadata method)": [[83, "seldonian.dataset.MetaData.__init__"]], "__repr__() (metadata method)": [[83, "seldonian.dataset.MetaData.__repr__"]], "rldataset (class in seldonian.dataset)": [[84, "seldonian.dataset.RLDataSet"]], "__init__() (rldataset method)": [[84, "seldonian.dataset.RLDataSet.__init__"]], "__repr__() (rldataset method)": [[84, "seldonian.dataset.RLDataSet.__repr__"]], "rlmetadata (class in seldonian.dataset)": [[85, "seldonian.dataset.RLMetaData"]], "__init__() (rlmetadata method)": [[85, "seldonian.dataset.RLMetaData.__init__"]], "__repr__() (rlmetadata method)": [[85, "seldonian.dataset.RLMetaData.__repr__"]], "superviseddataset (class in seldonian.dataset)": [[86, "seldonian.dataset.SupervisedDataSet"]], "__init__() (superviseddataset method)": [[86, "seldonian.dataset.SupervisedDataSet.__init__"]], "__repr__() (superviseddataset method)": [[86, "seldonian.dataset.SupervisedDataSet.__repr__"]], "supervisedmetadata (class in seldonian.dataset)": [[87, "seldonian.dataset.SupervisedMetaData"]], "__init__() (supervisedmetadata method)": [[87, "seldonian.dataset.SupervisedMetaData.__init__"]], "__repr__() (supervisedmetadata method)": [[87, "seldonian.dataset.SupervisedMetaData.__repr__"]], "load_rl_metadata() (in module seldonian.dataset)": [[88, "seldonian.dataset.load_RL_metadata"]], "load_supervised_metadata() (in module seldonian.dataset)": [[89, "seldonian.dataset.load_supervised_metadata"]], "seldonian.hyperparam_search": [[90, "module-seldonian.hyperparam_search"]], "hyperparamsearch (class in seldonian.hyperparam_search)": [[91, "seldonian.hyperparam_search.HyperparamSearch"]], "__init__() (hyperparamsearch method)": [[91, "seldonian.hyperparam_search.HyperparamSearch.__init__"]], "__repr__() (hyperparamsearch method)": [[91, "seldonian.hyperparam_search.HyperparamSearch.__repr__"]], "bootstrap_sample_dataset() (hyperparamsearch method)": [[91, "seldonian.hyperparam_search.HyperparamSearch.bootstrap_sample_dataset"]], "candidate_selection() (hyperparamsearch method)": [[91, "seldonian.hyperparam_search.HyperparamSearch.candidate_selection"]], "create_dataset() (hyperparamsearch method)": [[91, "seldonian.hyperparam_search.HyperparamSearch.create_dataset"]], "est_prob_pass() (hyperparamsearch method)": [[91, "seldonian.hyperparam_search.HyperparamSearch.est_prob_pass"]], "find_best_hyperparams() (hyperparamsearch method)": [[91, "seldonian.hyperparam_search.HyperparamSearch.find_best_hyperparams"]], "get_initial_solution() (hyperparamsearch method)": [[91, "seldonian.hyperparam_search.HyperparamSearch.get_initial_solution"]], "get_safety_size() (hyperparamsearch method)": [[91, "seldonian.hyperparam_search.HyperparamSearch.get_safety_size"]], "run_core() (hyperparamsearch method)": [[91, "seldonian.hyperparam_search.HyperparamSearch.run_core"]], "run_safety_test() (hyperparamsearch method)": [[91, "seldonian.hyperparam_search.HyperparamSearch.run_safety_test"]], "safety_test() (hyperparamsearch method)": [[91, "seldonian.hyperparam_search.HyperparamSearch.safety_test"]], "seldonian.models": [[92, "module-seldonian.models"]], "seldonian.models.models": [[93, "module-seldonian.models.models"]], "baselogisticregressionmodel (class in seldonian.models.models)": [[94, "seldonian.models.models.BaseLogisticRegressionModel"]], "__init__() (baselogisticregressionmodel method)": [[94, "seldonian.models.models.BaseLogisticRegressionModel.__init__"]], "__repr__() (baselogisticregressionmodel method)": [[94, "seldonian.models.models.BaseLogisticRegressionModel.__repr__"]], "fit() (baselogisticregressionmodel method)": [[94, "seldonian.models.models.BaseLogisticRegressionModel.fit"]], "binarylogisticregressionmodel (class in seldonian.models.models)": [[95, "seldonian.models.models.BinaryLogisticRegressionModel"]], "__init__() (binarylogisticregressionmodel method)": [[95, "seldonian.models.models.BinaryLogisticRegressionModel.__init__"]], "__repr__() (binarylogisticregressionmodel method)": [[95, "seldonian.models.models.BinaryLogisticRegressionModel.__repr__"]], "fit() (binarylogisticregressionmodel method)": [[95, "seldonian.models.models.BinaryLogisticRegressionModel.fit"]], "predict() (binarylogisticregressionmodel method)": [[95, "seldonian.models.models.BinaryLogisticRegressionModel.predict"]], "boundedlinearregressionmodel (class in seldonian.models.models)": [[96, "seldonian.models.models.BoundedLinearRegressionModel"]], "__init__() (boundedlinearregressionmodel method)": [[96, "seldonian.models.models.BoundedLinearRegressionModel.__init__"]], "__repr__() (boundedlinearregressionmodel method)": [[96, "seldonian.models.models.BoundedLinearRegressionModel.__repr__"]], "fit() (boundedlinearregressionmodel method)": [[96, "seldonian.models.models.BoundedLinearRegressionModel.fit"]], "predict() (boundedlinearregressionmodel method)": [[96, "seldonian.models.models.BoundedLinearRegressionModel.predict"]], "classificationmodel (class in seldonian.models.models)": [[97, "seldonian.models.models.ClassificationModel"]], "__init__() (classificationmodel method)": [[97, "seldonian.models.models.ClassificationModel.__init__"]], "__repr__() (classificationmodel method)": [[97, "seldonian.models.models.ClassificationModel.__repr__"]], "dummyclassifiermodel (class in seldonian.models.models)": [[98, "seldonian.models.models.DummyClassifierModel"]], "__init__() (dummyclassifiermodel method)": [[98, "seldonian.models.models.DummyClassifierModel.__init__"]], "__repr__() (dummyclassifiermodel method)": [[98, "seldonian.models.models.DummyClassifierModel.__repr__"]], "predict() (dummyclassifiermodel method)": [[98, "seldonian.models.models.DummyClassifierModel.predict"]], "linearregressionmodel (class in seldonian.models.models)": [[99, "seldonian.models.models.LinearRegressionModel"]], "__init__() (linearregressionmodel method)": [[99, "seldonian.models.models.LinearRegressionModel.__init__"]], "__repr__() (linearregressionmodel method)": [[99, "seldonian.models.models.LinearRegressionModel.__repr__"]], "fit() (linearregressionmodel method)": [[99, "seldonian.models.models.LinearRegressionModel.fit"]], "predict() (linearregressionmodel method)": [[99, "seldonian.models.models.LinearRegressionModel.predict"]], "linearregressionmodellistfeatures (class in seldonian.models.models)": [[100, "seldonian.models.models.LinearRegressionModelListFeatures"]], "__init__() (linearregressionmodellistfeatures method)": [[100, "seldonian.models.models.LinearRegressionModelListFeatures.__init__"]], "__repr__() (linearregressionmodellistfeatures method)": [[100, "seldonian.models.models.LinearRegressionModelListFeatures.__repr__"]], "fit() (linearregressionmodellistfeatures method)": [[100, "seldonian.models.models.LinearRegressionModelListFeatures.fit"]], "predict() (linearregressionmodellistfeatures method)": [[100, "seldonian.models.models.LinearRegressionModelListFeatures.predict"]], "multiclasslogisticregressionmodel (class in seldonian.models.models)": [[101, "seldonian.models.models.MultiClassLogisticRegressionModel"]], "__init__() (multiclasslogisticregressionmodel method)": [[101, "seldonian.models.models.MultiClassLogisticRegressionModel.__init__"]], "__repr__() (multiclasslogisticregressionmodel method)": [[101, "seldonian.models.models.MultiClassLogisticRegressionModel.__repr__"]], "fit() (multiclasslogisticregressionmodel method)": [[101, "seldonian.models.models.MultiClassLogisticRegressionModel.fit"]], "predict() (multiclasslogisticregressionmodel method)": [[101, "seldonian.models.models.MultiClassLogisticRegressionModel.predict"]], "randomclassifiermodel (class in seldonian.models.models)": [[102, "seldonian.models.models.RandomClassifierModel"]], "__init__() (randomclassifiermodel method)": [[102, "seldonian.models.models.RandomClassifierModel.__init__"]], "__repr__() (randomclassifiermodel method)": [[102, "seldonian.models.models.RandomClassifierModel.__repr__"]], "predict() (randomclassifiermodel method)": [[102, "seldonian.models.models.RandomClassifierModel.predict"]], "regressionmodel (class in seldonian.models.models)": [[103, "seldonian.models.models.RegressionModel"]], "__init__() (regressionmodel method)": [[103, "seldonian.models.models.RegressionModel.__init__"]], "__repr__() (regressionmodel method)": [[103, "seldonian.models.models.RegressionModel.__repr__"]], "seldonianmodel (class in seldonian.models.models)": [[104, "seldonian.models.models.SeldonianModel"]], "__init__() (seldonianmodel method)": [[104, "seldonian.models.models.SeldonianModel.__init__"]], "__repr__() (seldonianmodel method)": [[104, "seldonian.models.models.SeldonianModel.__repr__"]], "supervisedmodel (class in seldonian.models.models)": [[105, "seldonian.models.models.SupervisedModel"]], "__init__() (supervisedmodel method)": [[105, "seldonian.models.models.SupervisedModel.__init__"]], "__repr__() (supervisedmodel method)": [[105, "seldonian.models.models.SupervisedModel.__repr__"]], "seldonian.models.objectives": [[106, "module-seldonian.models.objectives"]], "accuracy() (in module seldonian.models.objectives)": [[107, "seldonian.models.objectives.Accuracy"]], "false_negative_rate() (in module seldonian.models.objectives)": [[108, "seldonian.models.objectives.False_Negative_Rate"]], "false_positive_rate() (in module seldonian.models.objectives)": [[109, "seldonian.models.objectives.False_Positive_Rate"]], "is_estimate() (in module seldonian.models.objectives)": [[110, "seldonian.models.objectives.IS_estimate"]], "mean_error() (in module seldonian.models.objectives)": [[111, "seldonian.models.objectives.Mean_Error"]], "mean_squared_error() (in module seldonian.models.objectives)": [[112, "seldonian.models.objectives.Mean_Squared_Error"]], "negative_rate() (in module seldonian.models.objectives)": [[113, "seldonian.models.objectives.Negative_Rate"]], "pdis_estimate() (in module seldonian.models.objectives)": [[114, "seldonian.models.objectives.PDIS_estimate"]], "positive_rate() (in module seldonian.models.objectives)": [[115, "seldonian.models.objectives.Positive_Rate"]], "true_negative_rate() (in module seldonian.models.objectives)": [[116, "seldonian.models.objectives.True_Negative_Rate"]], "true_positive_rate() (in module seldonian.models.objectives)": [[117, "seldonian.models.objectives.True_Positive_Rate"]], "binary_logistic_loss() (in module seldonian.models.objectives)": [[118, "seldonian.models.objectives.binary_logistic_loss"]], "confusion_matrix() (in module seldonian.models.objectives)": [[119, "seldonian.models.objectives.confusion_matrix"]], "gradient_bounded_squared_error() (in module seldonian.models.objectives)": [[120, "seldonian.models.objectives.gradient_Bounded_Squared_Error"]], "gradient_mean_squared_error() (in module seldonian.models.objectives)": [[121, "seldonian.models.objectives.gradient_Mean_Squared_Error"]], "gradient_binary_logistic_loss() (in module seldonian.models.objectives)": [[122, "seldonian.models.objectives.gradient_binary_logistic_loss"]], "multiclass_logistic_loss() (in module seldonian.models.objectives)": [[123, "seldonian.models.objectives.multiclass_logistic_loss"]], "seldonian.models.sklearn_lr": [[124, "module-seldonian.models.sklearn_lr"]], "sklearnlinearregressor (class in seldonian.models.sklearn_lr)": [[125, "seldonian.models.sklearn_lr.SkLearnLinearRegressor"]], "__init__() (sklearnlinearregressor method)": [[125, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.__init__"]], "__repr__() (sklearnlinearregressor method)": [[125, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.__repr__"]], "backward_pass() (sklearnlinearregressor method)": [[125, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.backward_pass"]], "create_model() (sklearnlinearregressor method)": [[125, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.create_model"]], "forward_pass() (sklearnlinearregressor method)": [[125, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.forward_pass"]], "get_model_params() (sklearnlinearregressor method)": [[125, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.get_model_params"]], "predict() (sklearnlinearregressor method)": [[125, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.predict"]], "update_model_params() (sklearnlinearregressor method)": [[125, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.update_model_params"]], "seldonian.models.sklearn_model": [[126, "module-seldonian.models.sklearn_model"]], "supervisedsklearnbasemodel (class in seldonian.models.sklearn_model)": [[127, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel"]], "__init__() (supervisedsklearnbasemodel method)": [[127, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.__init__"]], "__repr__() (supervisedsklearnbasemodel method)": [[127, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.__repr__"]], "backward_pass() (supervisedsklearnbasemodel method)": [[127, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.backward_pass"]], "create_model() (supervisedsklearnbasemodel method)": [[127, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.create_model"]], "forward_pass() (supervisedsklearnbasemodel method)": [[127, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.forward_pass"]], "get_model_params() (supervisedsklearnbasemodel method)": [[127, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.get_model_params"]], "predict() (supervisedsklearnbasemodel method)": [[127, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.predict"]], "update_model_params() (supervisedsklearnbasemodel method)": [[127, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.update_model_params"]], "sklearn_predict_vjp() (in module seldonian.models.sklearn_model)": [[128, "seldonian.models.sklearn_model.sklearn_predict_vjp"]], "seldonian.models.zhat_funcs": [[129, "module-seldonian.models.zhat_funcs"]], "batcher() (in module seldonian.models.zhat_funcs)": [[130, "seldonian.models.zhat_funcs.batcher"]], "evaluate_statistic() (in module seldonian.models.zhat_funcs)": [[131, "seldonian.models.zhat_funcs.evaluate_statistic"]], "sample_from_statistic() (in module seldonian.models.zhat_funcs)": [[132, "seldonian.models.zhat_funcs.sample_from_statistic"]], "vector_accuracy() (in module seldonian.models.zhat_funcs)": [[133, "seldonian.models.zhat_funcs.vector_Accuracy"]], "vector_error() (in module seldonian.models.zhat_funcs)": [[134, "seldonian.models.zhat_funcs.vector_Error"]], "vector_false_negative_rate() (in module seldonian.models.zhat_funcs)": [[135, "seldonian.models.zhat_funcs.vector_False_Negative_Rate"]], "vector_false_positive_rate() (in module seldonian.models.zhat_funcs)": [[136, "seldonian.models.zhat_funcs.vector_False_Positive_Rate"]], "vector_is_estimate() (in module seldonian.models.zhat_funcs)": [[137, "seldonian.models.zhat_funcs.vector_IS_estimate"]], "vector_negative_rate() (in module seldonian.models.zhat_funcs)": [[138, "seldonian.models.zhat_funcs.vector_Negative_Rate"]], "vector_pdis_estimate() (in module seldonian.models.zhat_funcs)": [[139, "seldonian.models.zhat_funcs.vector_PDIS_estimate"]], "vector_positive_rate() (in module seldonian.models.zhat_funcs)": [[140, "seldonian.models.zhat_funcs.vector_Positive_Rate"]], "vector_squared_error() (in module seldonian.models.zhat_funcs)": [[141, "seldonian.models.zhat_funcs.vector_Squared_Error"]], "vector_true_negative_rate() (in module seldonian.models.zhat_funcs)": [[142, "seldonian.models.zhat_funcs.vector_True_Negative_Rate"]], "vector_true_positive_rate() (in module seldonian.models.zhat_funcs)": [[143, "seldonian.models.zhat_funcs.vector_True_Positive_Rate"]], "vector_confusion_matrix() (in module seldonian.models.zhat_funcs)": [[144, "seldonian.models.zhat_funcs.vector_confusion_matrix"]], "seldonian.optimizers": [[145, "module-seldonian.optimizers"]], "seldonian.optimizers.gradient_descent": [[146, "module-seldonian.optimizers.gradient_descent"]], "gradient_descent_adam() (in module seldonian.optimizers.gradient_descent)": [[147, "seldonian.optimizers.gradient_descent.gradient_descent_adam"]], "setup_gradients() (in module seldonian.optimizers.gradient_descent)": [[148, "seldonian.optimizers.gradient_descent.setup_gradients"]], "seldonian.parse_tree": [[149, "module-seldonian.parse_tree"]], "seldonian.parse_tree.nodes": [[150, "module-seldonian.parse_tree.nodes"]], "basenode (class in seldonian.parse_tree.nodes)": [[151, "seldonian.parse_tree.nodes.BaseNode"]], "__init__() (basenode method)": [[151, "seldonian.parse_tree.nodes.BaseNode.__init__"]], "__repr__() (basenode method)": [[151, "seldonian.parse_tree.nodes.BaseNode.__repr__"]], "calculate_bounds() (basenode method)": [[151, "seldonian.parse_tree.nodes.BaseNode.calculate_bounds"]], "calculate_data_forbound() (basenode method)": [[151, "seldonian.parse_tree.nodes.BaseNode.calculate_data_forbound"]], "calculate_value() (basenode method)": [[151, "seldonian.parse_tree.nodes.BaseNode.calculate_value"]], "compute_hc_lowerbound() (basenode method)": [[151, "seldonian.parse_tree.nodes.BaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (basenode method)": [[151, "seldonian.parse_tree.nodes.BaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (basenode method)": [[151, "seldonian.parse_tree.nodes.BaseNode.compute_HC_upperbound"]], "mask_data() (basenode method)": [[151, "seldonian.parse_tree.nodes.BaseNode.mask_data"]], "predict_hc_lowerbound() (basenode method)": [[151, "seldonian.parse_tree.nodes.BaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (basenode method)": [[151, "seldonian.parse_tree.nodes.BaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (basenode method)": [[151, "seldonian.parse_tree.nodes.BaseNode.predict_HC_upperbound"]], "zhat() (basenode method)": [[151, "seldonian.parse_tree.nodes.BaseNode.zhat"]], "cvarsqebasenode (class in seldonian.parse_tree.nodes)": [[152, "seldonian.parse_tree.nodes.CVaRSQeBaseNode"]], "__init__() (cvarsqebasenode method)": [[152, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.__init__"]], "__repr__() (cvarsqebasenode method)": [[152, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.__repr__"]], "calculate_bounds() (cvarsqebasenode method)": [[152, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.calculate_bounds"]], "calculate_data_forbound() (cvarsqebasenode method)": [[152, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.calculate_data_forbound"]], "calculate_value() (cvarsqebasenode method)": [[152, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.calculate_value"]], "compute_hc_lowerbound() (cvarsqebasenode method)": [[152, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (cvarsqebasenode method)": [[152, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (cvarsqebasenode method)": [[152, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.compute_HC_upperbound"]], "mask_data() (cvarsqebasenode method)": [[152, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.mask_data"]], "predict_hc_lowerbound() (cvarsqebasenode method)": [[152, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (cvarsqebasenode method)": [[152, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (cvarsqebasenode method)": [[152, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.predict_HC_upperbound"]], "zhat() (cvarsqebasenode method)": [[152, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.zhat"]], "confusionmatrixbasenode (class in seldonian.parse_tree.nodes)": [[153, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode"]], "__init__() (confusionmatrixbasenode method)": [[153, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.__init__"]], "__repr__() (confusionmatrixbasenode method)": [[153, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.__repr__"]], "calculate_bounds() (confusionmatrixbasenode method)": [[153, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.calculate_bounds"]], "calculate_data_forbound() (confusionmatrixbasenode method)": [[153, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.calculate_data_forbound"]], "calculate_value() (confusionmatrixbasenode method)": [[153, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.calculate_value"]], "compute_hc_lowerbound() (confusionmatrixbasenode method)": [[153, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (confusionmatrixbasenode method)": [[153, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (confusionmatrixbasenode method)": [[153, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.compute_HC_upperbound"]], "mask_data() (confusionmatrixbasenode method)": [[153, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.mask_data"]], "predict_hc_lowerbound() (confusionmatrixbasenode method)": [[153, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (confusionmatrixbasenode method)": [[153, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (confusionmatrixbasenode method)": [[153, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.predict_HC_upperbound"]], "zhat() (confusionmatrixbasenode method)": [[153, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.zhat"]], "constantnode (class in seldonian.parse_tree.nodes)": [[154, "seldonian.parse_tree.nodes.ConstantNode"]], "__init__() (constantnode method)": [[154, "seldonian.parse_tree.nodes.ConstantNode.__init__"]], "__repr__() (constantnode method)": [[154, "seldonian.parse_tree.nodes.ConstantNode.__repr__"]], "internalnode (class in seldonian.parse_tree.nodes)": [[155, "seldonian.parse_tree.nodes.InternalNode"]], "__init__() (internalnode method)": [[155, "seldonian.parse_tree.nodes.InternalNode.__init__"]], "__repr__() (internalnode method)": [[155, "seldonian.parse_tree.nodes.InternalNode.__repr__"]], "medcustombasenode (class in seldonian.parse_tree.nodes)": [[156, "seldonian.parse_tree.nodes.MEDCustomBaseNode"]], "__init__() (medcustombasenode method)": [[156, "seldonian.parse_tree.nodes.MEDCustomBaseNode.__init__"]], "__repr__() (medcustombasenode method)": [[156, "seldonian.parse_tree.nodes.MEDCustomBaseNode.__repr__"]], "calculate_bounds() (medcustombasenode method)": [[156, "seldonian.parse_tree.nodes.MEDCustomBaseNode.calculate_bounds"]], "calculate_data_forbound() (medcustombasenode method)": [[156, "seldonian.parse_tree.nodes.MEDCustomBaseNode.calculate_data_forbound"]], "calculate_value() (medcustombasenode method)": [[156, "seldonian.parse_tree.nodes.MEDCustomBaseNode.calculate_value"]], "compute_hc_lowerbound() (medcustombasenode method)": [[156, "seldonian.parse_tree.nodes.MEDCustomBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (medcustombasenode method)": [[156, "seldonian.parse_tree.nodes.MEDCustomBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (medcustombasenode method)": [[156, "seldonian.parse_tree.nodes.MEDCustomBaseNode.compute_HC_upperbound"]], "mask_data() (medcustombasenode method)": [[156, "seldonian.parse_tree.nodes.MEDCustomBaseNode.mask_data"]], "precalculate_data() (medcustombasenode method)": [[156, "seldonian.parse_tree.nodes.MEDCustomBaseNode.precalculate_data"]], "predict_hc_lowerbound() (medcustombasenode method)": [[156, "seldonian.parse_tree.nodes.MEDCustomBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (medcustombasenode method)": [[156, "seldonian.parse_tree.nodes.MEDCustomBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (medcustombasenode method)": [[156, "seldonian.parse_tree.nodes.MEDCustomBaseNode.predict_HC_upperbound"]], "zhat() (medcustombasenode method)": [[156, "seldonian.parse_tree.nodes.MEDCustomBaseNode.zhat"]], "multiclassbasenode (class in seldonian.parse_tree.nodes)": [[157, "seldonian.parse_tree.nodes.MultiClassBaseNode"]], "__init__() (multiclassbasenode method)": [[157, "seldonian.parse_tree.nodes.MultiClassBaseNode.__init__"]], "__repr__() (multiclassbasenode method)": [[157, "seldonian.parse_tree.nodes.MultiClassBaseNode.__repr__"]], "calculate_bounds() (multiclassbasenode method)": [[157, "seldonian.parse_tree.nodes.MultiClassBaseNode.calculate_bounds"]], "calculate_data_forbound() (multiclassbasenode method)": [[157, "seldonian.parse_tree.nodes.MultiClassBaseNode.calculate_data_forbound"]], "calculate_value() (multiclassbasenode method)": [[157, "seldonian.parse_tree.nodes.MultiClassBaseNode.calculate_value"]], "compute_hc_lowerbound() (multiclassbasenode method)": [[157, "seldonian.parse_tree.nodes.MultiClassBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (multiclassbasenode method)": [[157, "seldonian.parse_tree.nodes.MultiClassBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (multiclassbasenode method)": [[157, "seldonian.parse_tree.nodes.MultiClassBaseNode.compute_HC_upperbound"]], "mask_data() (multiclassbasenode method)": [[157, "seldonian.parse_tree.nodes.MultiClassBaseNode.mask_data"]], "predict_hc_lowerbound() (multiclassbasenode method)": [[157, "seldonian.parse_tree.nodes.MultiClassBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (multiclassbasenode method)": [[157, "seldonian.parse_tree.nodes.MultiClassBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (multiclassbasenode method)": [[157, "seldonian.parse_tree.nodes.MultiClassBaseNode.predict_HC_upperbound"]], "zhat() (multiclassbasenode method)": [[157, "seldonian.parse_tree.nodes.MultiClassBaseNode.zhat"]], "node (class in seldonian.parse_tree.nodes)": [[158, "seldonian.parse_tree.nodes.Node"]], "__init__() (node method)": [[158, "seldonian.parse_tree.nodes.Node.__init__"]], "__repr__() (node method)": [[158, "seldonian.parse_tree.nodes.Node.__repr__"]], "rlaltrewardbasenode (class in seldonian.parse_tree.nodes)": [[159, "seldonian.parse_tree.nodes.RLAltRewardBaseNode"]], "__init__() (rlaltrewardbasenode method)": [[159, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.__init__"]], "__repr__() (rlaltrewardbasenode method)": [[159, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.__repr__"]], "calculate_bounds() (rlaltrewardbasenode method)": [[159, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.calculate_bounds"]], "calculate_data_forbound() (rlaltrewardbasenode method)": [[159, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.calculate_data_forbound"]], "calculate_value() (rlaltrewardbasenode method)": [[159, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.calculate_value"]], "compute_hc_lowerbound() (rlaltrewardbasenode method)": [[159, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (rlaltrewardbasenode method)": [[159, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (rlaltrewardbasenode method)": [[159, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.compute_HC_upperbound"]], "mask_data() (rlaltrewardbasenode method)": [[159, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.mask_data"]], "predict_hc_lowerbound() (rlaltrewardbasenode method)": [[159, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (rlaltrewardbasenode method)": [[159, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (rlaltrewardbasenode method)": [[159, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.predict_HC_upperbound"]], "zhat() (rlaltrewardbasenode method)": [[159, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.zhat"]], "bounds_required_dict (in module seldonian.parse_tree.operators)": [[160, "seldonian.parse_tree.operators.bounds_required_dict"]], "custom_base_node_dict (in module seldonian.parse_tree.operators)": [[160, "seldonian.parse_tree.operators.custom_base_node_dict"]], "measure_functions_dict (in module seldonian.parse_tree.operators)": [[160, "seldonian.parse_tree.operators.measure_functions_dict"]], "not_supported_op_mapper (in module seldonian.parse_tree.operators)": [[160, "seldonian.parse_tree.operators.not_supported_op_mapper"]], "op_mapper (in module seldonian.parse_tree.operators)": [[160, "seldonian.parse_tree.operators.op_mapper"]], "seldonian.parse_tree.operators": [[160, "module-seldonian.parse_tree.operators"]], "seldonian.parse_tree.parse_tree": [[161, "module-seldonian.parse_tree.parse_tree"]], "parsetree (class in seldonian.parse_tree.parse_tree)": [[162, "seldonian.parse_tree.parse_tree.ParseTree"]], "__init__() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree.__init__"]], "__repr__() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree.__repr__"]], "_abs() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree._abs"]], "_add() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree._add"]], "_assign_bounds_helper() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree._assign_bounds_helper"]], "_assign_deltas_helper() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree._assign_deltas_helper"]], "_ast2pt_node() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree._ast2pt_node"]], "_ast_tree_helper() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree._ast_tree_helper"]], "_div() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree._div"]], "_evaluator_helper() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree._evaluator_helper"]], "_exp() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree._exp"]], "_log() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree._log"]], "_max() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree._max"]], "_min() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree._min"]], "_mult() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree._mult"]], "_pow() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree._pow"]], "_preprocess_constraint_str() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree._preprocess_constraint_str"]], "_propagate_value() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree._propagate_value"]], "_propagator_helper() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree._propagator_helper"]], "_protect_nan() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree._protect_nan"]], "_sub() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree._sub"]], "assign_bounds_needed() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree.assign_bounds_needed"]], "assign_deltas() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree.assign_deltas"]], "build_tree() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree.build_tree"]], "create_from_ast() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree.create_from_ast"]], "evaluate_constraint() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree.evaluate_constraint"]], "make_viz() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree.make_viz"]], "make_viz_helper() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree.make_viz_helper"]], "propagate() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree.propagate"]], "propagate_bounds() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree.propagate_bounds"]], "reset_base_node_dict() (parsetree method)": [[162, "seldonian.parse_tree.parse_tree.ParseTree.reset_base_node_dict"]], "make_parse_trees_from_constraints() (in module seldonian.parse_tree.parse_tree)": [[163, "seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints"]], "seldonian.safety_test": [[164, "module-seldonian.safety_test"]], "seldonian.safety_test.safety_test": [[165, "module-seldonian.safety_test.safety_test"]], "safetytest (class in seldonian.safety_test.safety_test)": [[166, "seldonian.safety_test.safety_test.SafetyTest"]], "__init__() (safetytest method)": [[166, "seldonian.safety_test.safety_test.SafetyTest.__init__"]], "__repr__() (safetytest method)": [[166, "seldonian.safety_test.safety_test.SafetyTest.__repr__"]], "evaluate_primary_objective() (safetytest method)": [[166, "seldonian.safety_test.safety_test.SafetyTest.evaluate_primary_objective"]], "run() (safetytest method)": [[166, "seldonian.safety_test.safety_test.SafetyTest.run"]], "seldonian.seldonian_algorithm": [[167, "module-seldonian.seldonian_algorithm"]], "seldonianalgorithm (class in seldonian.seldonian_algorithm)": [[168, "seldonian.seldonian_algorithm.SeldonianAlgorithm"]], "__init__() (seldonianalgorithm method)": [[168, "seldonian.seldonian_algorithm.SeldonianAlgorithm.__init__"]], "__repr__() (seldonianalgorithm method)": [[168, "seldonian.seldonian_algorithm.SeldonianAlgorithm.__repr__"]], "candidate_safety_split() (seldonianalgorithm method)": [[168, "seldonian.seldonian_algorithm.SeldonianAlgorithm.candidate_safety_split"]], "candidate_selection() (seldonianalgorithm method)": [[168, "seldonian.seldonian_algorithm.SeldonianAlgorithm.candidate_selection"]], "evaluate_primary_objective() (seldonianalgorithm method)": [[168, "seldonian.seldonian_algorithm.SeldonianAlgorithm.evaluate_primary_objective"]], "get_cs_result() (seldonianalgorithm method)": [[168, "seldonian.seldonian_algorithm.SeldonianAlgorithm.get_cs_result"]], "get_st_upper_bounds() (seldonianalgorithm method)": [[168, "seldonian.seldonian_algorithm.SeldonianAlgorithm.get_st_upper_bounds"]], "run() (seldonianalgorithm method)": [[168, "seldonian.seldonian_algorithm.SeldonianAlgorithm.run"]], "run_safety_test() (seldonianalgorithm method)": [[168, "seldonian.seldonian_algorithm.SeldonianAlgorithm.run_safety_test"]], "safety_test() (seldonianalgorithm method)": [[168, "seldonian.seldonian_algorithm.SeldonianAlgorithm.safety_test"]], "seldonian.spec": [[169, "module-seldonian.spec"]], "rlspec (class in seldonian.spec)": [[170, "seldonian.spec.RLSpec"]], "__init__() (rlspec method)": [[170, "seldonian.spec.RLSpec.__init__"]], "__repr__() (rlspec method)": [[170, "seldonian.spec.RLSpec.__repr__"]], "spec (class in seldonian.spec)": [[171, "seldonian.spec.Spec"]], "__init__() (spec method)": [[171, "seldonian.spec.Spec.__init__"]], "__repr__() (spec method)": [[171, "seldonian.spec.Spec.__repr__"]], "supervisedspec (class in seldonian.spec)": [[172, "seldonian.spec.SupervisedSpec"]], "__init__() (supervisedspec method)": [[172, "seldonian.spec.SupervisedSpec.__init__"]], "__repr__() (supervisedspec method)": [[172, "seldonian.spec.SupervisedSpec.__repr__"]], "createrlspec() (in module seldonian.spec)": [[173, "seldonian.spec.createRLSpec"]], "createsimplesupervisedspec() (in module seldonian.spec)": [[174, "seldonian.spec.createSimpleSupervisedSpec"]], "createsupervisedspec() (in module seldonian.spec)": [[175, "seldonian.spec.createSupervisedSpec"]], "validate_parse_trees() (in module seldonian.spec)": [[176, "seldonian.spec.validate_parse_trees"]], "seldonian.utils": [[177, "module-seldonian.utils"]], "seldonian.utils.rl_utils": [[178, "module-seldonian.utils.RL_utils"]], "argmax_multi() (in module seldonian.utils.rl_utils)": [[179, "seldonian.utils.RL_utils.argmax_multi"]], "clamp() (in module seldonian.utils.rl_utils)": [[180, "seldonian.utils.RL_utils.clamp"]], "error() (in module seldonian.utils.rl_utils)": [[181, "seldonian.utils.RL_utils.error"]], "seldonian.utils.io_utils": [[182, "module-seldonian.utils.io_utils"]], "dir_path() (in module seldonian.utils.io_utils)": [[183, "seldonian.utils.io_utils.dir_path"]], "load_json() (in module seldonian.utils.io_utils)": [[184, "seldonian.utils.io_utils.load_json"]], "load_pickle() (in module seldonian.utils.io_utils)": [[185, "seldonian.utils.io_utils.load_pickle"]], "save_json() (in module seldonian.utils.io_utils)": [[186, "seldonian.utils.io_utils.save_json"]], "save_pickle() (in module seldonian.utils.io_utils)": [[187, "seldonian.utils.io_utils.save_pickle"]], "seldonian.utils.plot_utils": [[188, "module-seldonian.utils.plot_utils"]], "plot_gradient_descent() (in module seldonian.utils.plot_utils)": [[189, "seldonian.utils.plot_utils.plot_gradient_descent"]], "seldonian.utils.stats_utils": [[190, "module-seldonian.utils.stats_utils"]], "custom_cumprod() (in module seldonian.utils.stats_utils)": [[191, "seldonian.utils.stats_utils.custom_cumprod"]], "softmax() (in module seldonian.utils.stats_utils)": [[192, "seldonian.utils.stats_utils.softmax"]], "stddev() (in module seldonian.utils.stats_utils)": [[193, "seldonian.utils.stats_utils.stddev"]], "tinv() (in module seldonian.utils.stats_utils)": [[194, "seldonian.utils.stats_utils.tinv"]], "weighted_sum_gamma() (in module seldonian.utils.stats_utils)": [[195, "seldonian.utils.stats_utils.weighted_sum_gamma"]], "seldonian.utils.tutorial_utils": [[196, "module-seldonian.utils.tutorial_utils"]], "generate_clipped_data() (in module seldonian.utils.tutorial_utils)": [[197, "seldonian.utils.tutorial_utils.generate_clipped_data"]], "generate_data() (in module seldonian.utils.tutorial_utils)": [[198, "seldonian.utils.tutorial_utils.generate_data"]], "make_synthetic_regression_dataset() (in module seldonian.utils.tutorial_utils)": [[199, "seldonian.utils.tutorial_utils.make_synthetic_regression_dataset"]], "seldonian.warnings": [[200, "module-seldonian.warnings"]], "seldonian.warnings.custom_warnings": [[201, "module-seldonian.warnings.custom_warnings"]], "custom_formatwarning() (in module seldonian.warnings.custom_warnings)": [[202, "seldonian.warnings.custom_warnings.custom_formatwarning"]]}})