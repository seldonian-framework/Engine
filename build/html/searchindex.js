Search.setIndex({"docnames": ["_autosummary/seldonian", "_autosummary/seldonian.RL", "_autosummary/seldonian.RL.Agents", "_autosummary/seldonian.RL.Agents.Agent", "_autosummary/seldonian.RL.Agents.Agent.Agent", "_autosummary/seldonian.RL.Agents.Bases", "_autosummary/seldonian.RL.Agents.Bases.Fourier", "_autosummary/seldonian.RL.Agents.Bases.Fourier.Fourier", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent", "_autosummary/seldonian.RL.Agents.Function_Approximators", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Q_Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Table", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent", "_autosummary/seldonian.RL.Agents.Policies", "_autosummary/seldonian.RL.Agents.Policies.Policy", "_autosummary/seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy", "_autosummary/seldonian.RL.Agents.Policies.Policy.Policy", "_autosummary/seldonian.RL.Agents.Policies.Softmax", "_autosummary/seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax", "_autosummary/seldonian.RL.Agents.Policies.Softmax.MixedSoftmax", "_autosummary/seldonian.RL.Agents.Policies.Softmax.Softmax", "_autosummary/seldonian.RL.Agents.keyboard_gridworld", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution", "_autosummary/seldonian.RL.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description.Env_Description", "_autosummary/seldonian.RL.Env_Description.Env_Description.check_space_type", "_autosummary/seldonian.RL.Env_Description.Spaces", "_autosummary/seldonian.RL.Env_Description.Spaces.Continuous_Space", "_autosummary/seldonian.RL.Env_Description.Spaces.Discrete_Space", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.main", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info", "_autosummary/seldonian.RL.RL_model", "_autosummary/seldonian.RL.RL_model.RL_model", "_autosummary/seldonian.RL.RL_runner", "_autosummary/seldonian.RL.RL_runner.create_agent_fromdict", "_autosummary/seldonian.RL.RL_runner.run_episode", "_autosummary/seldonian.RL.RL_runner.run_episode_from_dict", "_autosummary/seldonian.RL.RL_runner.run_trial", "_autosummary/seldonian.RL.RL_runner.run_trial_given_agent_and_env", "_autosummary/seldonian.RL.environments", "_autosummary/seldonian.RL.environments.Environment", "_autosummary/seldonian.RL.environments.Environment.Environment", "_autosummary/seldonian.RL.environments.gridworld", "_autosummary/seldonian.RL.environments.gridworld.Gridworld", "_autosummary/seldonian.RL.environments.mountaincar", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar", "_autosummary/seldonian.RL.environments.n_step_mountaincar", "_autosummary/seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar", "_autosummary/seldonian.RL.environments.simglucose_env", "_autosummary/seldonian.RL.environments.simglucose_env.Simglucose", "_autosummary/seldonian.RL.generate_gridworld_episodes", "_autosummary/seldonian.RL.generate_gridworld_episodes.main", "_autosummary/seldonian.RL.generate_mountaincar_episodes", "_autosummary/seldonian.RL.generate_mountaincar_episodes.main", "_autosummary/seldonian.RL.generate_simglucose_episodes", "_autosummary/seldonian.RL.generate_simglucose_episodes.get_max_obs", "_autosummary/seldonian.RL.generate_simglucose_episodes.main", "_autosummary/seldonian.RL.hyperparams_and_settings", "_autosummary/seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict", "_autosummary/seldonian.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection", "_autosummary/seldonian.dataset", "_autosummary/seldonian.dataset.DataSet", "_autosummary/seldonian.dataset.DataSetLoader", "_autosummary/seldonian.dataset.Episode", "_autosummary/seldonian.dataset.MetaData", "_autosummary/seldonian.dataset.RLDataSet", "_autosummary/seldonian.dataset.RLMetaData", "_autosummary/seldonian.dataset.SupervisedDataSet", "_autosummary/seldonian.dataset.SupervisedMetaData", "_autosummary/seldonian.dataset.load_RL_metadata", "_autosummary/seldonian.dataset.load_supervised_metadata", "_autosummary/seldonian.hyperparam_search", "_autosummary/seldonian.hyperparam_search.HyperparamSearch", "_autosummary/seldonian.models", "_autosummary/seldonian.models.models", "_autosummary/seldonian.models.models.BaseLogisticRegressionModel", "_autosummary/seldonian.models.models.BinaryLogisticRegressionModel", "_autosummary/seldonian.models.models.BoundedLinearRegressionModel", "_autosummary/seldonian.models.models.ClassificationModel", "_autosummary/seldonian.models.models.DummyClassifierModel", "_autosummary/seldonian.models.models.LinearRegressionModel", "_autosummary/seldonian.models.models.LinearRegressionModelListFeatures", "_autosummary/seldonian.models.models.MultiClassLogisticRegressionModel", "_autosummary/seldonian.models.models.RandomClassifierModel", "_autosummary/seldonian.models.models.RegressionModel", "_autosummary/seldonian.models.models.SeldonianModel", "_autosummary/seldonian.models.models.SupervisedModel", "_autosummary/seldonian.models.objectives", "_autosummary/seldonian.models.objectives.Error_Rate", "_autosummary/seldonian.models.objectives.False_Negative_Rate", "_autosummary/seldonian.models.objectives.False_Positive_Rate", "_autosummary/seldonian.models.objectives.IS_estimate", "_autosummary/seldonian.models.objectives.Mean_Error", "_autosummary/seldonian.models.objectives.Mean_Squared_Error", "_autosummary/seldonian.models.objectives.Negative_Rate", "_autosummary/seldonian.models.objectives.PDIS_estimate", "_autosummary/seldonian.models.objectives.Positive_Rate", "_autosummary/seldonian.models.objectives.True_Negative_Rate", "_autosummary/seldonian.models.objectives.True_Positive_Rate", "_autosummary/seldonian.models.objectives.WIS_estimate", "_autosummary/seldonian.models.objectives.binary_logistic_loss", "_autosummary/seldonian.models.objectives.confusion_matrix", "_autosummary/seldonian.models.objectives.gradient_Bounded_Squared_Error", "_autosummary/seldonian.models.objectives.gradient_Mean_Squared_Error", "_autosummary/seldonian.models.objectives.gradient_binary_logistic_loss", "_autosummary/seldonian.models.objectives.multiclass_logistic_loss", "_autosummary/seldonian.models.sklearn_lr", "_autosummary/seldonian.models.sklearn_lr.SkLearnLinearRegressor", "_autosummary/seldonian.models.sklearn_model", "_autosummary/seldonian.models.sklearn_model.SupervisedSkLearnBaseModel", "_autosummary/seldonian.models.sklearn_model.sklearn_predict_vjp", "_autosummary/seldonian.models.trees", "_autosummary/seldonian.models.trees.skrandomforest_model", "_autosummary/seldonian.models.trees.skrandomforest_model.SeldonianRandomForest", "_autosummary/seldonian.models.trees.skrandomforest_model.probs2theta", "_autosummary/seldonian.models.trees.skrandomforest_model.sigmoid", "_autosummary/seldonian.models.trees.skrandomforest_model.sklearn_predict_vjp", "_autosummary/seldonian.models.trees.sktree_model", "_autosummary/seldonian.models.trees.sktree_model.SeldonianDecisionTree", "_autosummary/seldonian.models.trees.sktree_model.probs2theta", "_autosummary/seldonian.models.trees.sktree_model.sigmoid", "_autosummary/seldonian.models.trees.sktree_model.sklearn_predict_vjp", "_autosummary/seldonian.models.zhat_funcs", "_autosummary/seldonian.models.zhat_funcs.batcher", "_autosummary/seldonian.models.zhat_funcs.evaluate_statistic", "_autosummary/seldonian.models.zhat_funcs.sample_from_statistic", "_autosummary/seldonian.models.zhat_funcs.vector_Accuracy", "_autosummary/seldonian.models.zhat_funcs.vector_Error", "_autosummary/seldonian.models.zhat_funcs.vector_Error_Rate", "_autosummary/seldonian.models.zhat_funcs.vector_False_Negative_Rate", "_autosummary/seldonian.models.zhat_funcs.vector_False_Positive_Rate", "_autosummary/seldonian.models.zhat_funcs.vector_IS_estimate", "_autosummary/seldonian.models.zhat_funcs.vector_Negative_Rate", "_autosummary/seldonian.models.zhat_funcs.vector_PDIS_estimate", "_autosummary/seldonian.models.zhat_funcs.vector_Positive_Rate", "_autosummary/seldonian.models.zhat_funcs.vector_Squared_Error", "_autosummary/seldonian.models.zhat_funcs.vector_True_Negative_Rate", "_autosummary/seldonian.models.zhat_funcs.vector_True_Positive_Rate", "_autosummary/seldonian.models.zhat_funcs.vector_WIS_estimate", "_autosummary/seldonian.models.zhat_funcs.vector_confusion_matrix", "_autosummary/seldonian.optimizers", "_autosummary/seldonian.optimizers.gradient_descent", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam", "_autosummary/seldonian.optimizers.gradient_descent.setup_gradients", "_autosummary/seldonian.parse_tree", "_autosummary/seldonian.parse_tree.nodes", "_autosummary/seldonian.parse_tree.nodes.BaseNode", "_autosummary/seldonian.parse_tree.nodes.CVaRSQeBaseNode", "_autosummary/seldonian.parse_tree.nodes.ConfusionMatrixBaseNode", "_autosummary/seldonian.parse_tree.nodes.ConstantNode", "_autosummary/seldonian.parse_tree.nodes.InternalNode", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode", "_autosummary/seldonian.parse_tree.nodes.MultiClassBaseNode", "_autosummary/seldonian.parse_tree.nodes.Node", "_autosummary/seldonian.parse_tree.nodes.RLAltRewardBaseNode", "_autosummary/seldonian.parse_tree.operators", "_autosummary/seldonian.parse_tree.parse_tree", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree", "_autosummary/seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints", "_autosummary/seldonian.safety_test", "_autosummary/seldonian.safety_test.safety_test", "_autosummary/seldonian.safety_test.safety_test.SafetyTest", "_autosummary/seldonian.seldonian_algorithm", "_autosummary/seldonian.seldonian_algorithm.SeldonianAlgorithm", "_autosummary/seldonian.spec", "_autosummary/seldonian.spec.RLSpec", "_autosummary/seldonian.spec.Spec", "_autosummary/seldonian.spec.SupervisedSpec", "_autosummary/seldonian.spec.createRLSpec", "_autosummary/seldonian.spec.createSimpleSupervisedSpec", "_autosummary/seldonian.spec.createSupervisedSpec", "_autosummary/seldonian.spec.validate_parse_trees", "_autosummary/seldonian.utils", "_autosummary/seldonian.utils.RL_utils", "_autosummary/seldonian.utils.RL_utils.argmax_multi", "_autosummary/seldonian.utils.RL_utils.clamp", "_autosummary/seldonian.utils.RL_utils.error", "_autosummary/seldonian.utils.io_utils", "_autosummary/seldonian.utils.io_utils.dir_path", "_autosummary/seldonian.utils.io_utils.load_json", "_autosummary/seldonian.utils.io_utils.load_pickle", "_autosummary/seldonian.utils.io_utils.save_json", "_autosummary/seldonian.utils.io_utils.save_pickle", "_autosummary/seldonian.utils.plot_utils", "_autosummary/seldonian.utils.plot_utils.plot_gradient_descent", "_autosummary/seldonian.utils.stats_utils", "_autosummary/seldonian.utils.stats_utils.custom_cumprod", "_autosummary/seldonian.utils.stats_utils.softmax", "_autosummary/seldonian.utils.stats_utils.stddev", "_autosummary/seldonian.utils.stats_utils.tinv", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma", "_autosummary/seldonian.utils.tutorial_utils", "_autosummary/seldonian.utils.tutorial_utils.generate_clipped_data", "_autosummary/seldonian.utils.tutorial_utils.generate_data", "_autosummary/seldonian.utils.tutorial_utils.make_synthetic_regression_dataset", "_autosummary/seldonian.warnings", "_autosummary/seldonian.warnings.custom_warnings", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning", "api", "getting_started", "index", "overview"], "filenames": ["_autosummary/seldonian.rst", "_autosummary/seldonian.RL.rst", "_autosummary/seldonian.RL.Agents.rst", "_autosummary/seldonian.RL.Agents.Agent.rst", "_autosummary/seldonian.RL.Agents.Agent.Agent.rst", "_autosummary/seldonian.RL.Agents.Bases.rst", "_autosummary/seldonian.RL.Agents.Bases.Fourier.rst", "_autosummary/seldonian.RL.Agents.Bases.Fourier.Fourier.rst", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.rst", "_autosummary/seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Q_Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.Table.rst", "_autosummary/seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description.rst", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.rst", "_autosummary/seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.rst", "_autosummary/seldonian.RL.Agents.Policies.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Policy.Policy.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.rst", "_autosummary/seldonian.RL.Agents.Policies.Softmax.Softmax.rst", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.rst", "_autosummary/seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.rst", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.rst", "_autosummary/seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.rst", "_autosummary/seldonian.RL.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.Env_Description.rst", "_autosummary/seldonian.RL.Env_Description.Env_Description.check_space_type.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.Continuous_Space.rst", "_autosummary/seldonian.RL.Env_Description.Spaces.Discrete_Space.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.main.rst", "_autosummary/seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info.rst", "_autosummary/seldonian.RL.RL_model.rst", "_autosummary/seldonian.RL.RL_model.RL_model.rst", "_autosummary/seldonian.RL.RL_runner.rst", "_autosummary/seldonian.RL.RL_runner.create_agent_fromdict.rst", "_autosummary/seldonian.RL.RL_runner.run_episode.rst", "_autosummary/seldonian.RL.RL_runner.run_episode_from_dict.rst", "_autosummary/seldonian.RL.RL_runner.run_trial.rst", "_autosummary/seldonian.RL.RL_runner.run_trial_given_agent_and_env.rst", "_autosummary/seldonian.RL.environments.rst", "_autosummary/seldonian.RL.environments.Environment.rst", "_autosummary/seldonian.RL.environments.Environment.Environment.rst", "_autosummary/seldonian.RL.environments.gridworld.rst", "_autosummary/seldonian.RL.environments.gridworld.Gridworld.rst", "_autosummary/seldonian.RL.environments.mountaincar.rst", "_autosummary/seldonian.RL.environments.mountaincar.Mountaincar.rst", "_autosummary/seldonian.RL.environments.n_step_mountaincar.rst", "_autosummary/seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.rst", "_autosummary/seldonian.RL.environments.simglucose_env.rst", "_autosummary/seldonian.RL.environments.simglucose_env.Simglucose.rst", "_autosummary/seldonian.RL.generate_gridworld_episodes.rst", "_autosummary/seldonian.RL.generate_gridworld_episodes.main.rst", "_autosummary/seldonian.RL.generate_mountaincar_episodes.rst", "_autosummary/seldonian.RL.generate_mountaincar_episodes.main.rst", "_autosummary/seldonian.RL.generate_simglucose_episodes.rst", "_autosummary/seldonian.RL.generate_simglucose_episodes.get_max_obs.rst", "_autosummary/seldonian.RL.generate_simglucose_episodes.main.rst", "_autosummary/seldonian.RL.hyperparams_and_settings.rst", "_autosummary/seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict.rst", "_autosummary/seldonian.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.rst", "_autosummary/seldonian.candidate_selection.candidate_selection.CandidateSelection.rst", "_autosummary/seldonian.dataset.rst", "_autosummary/seldonian.dataset.DataSet.rst", "_autosummary/seldonian.dataset.DataSetLoader.rst", "_autosummary/seldonian.dataset.Episode.rst", "_autosummary/seldonian.dataset.MetaData.rst", "_autosummary/seldonian.dataset.RLDataSet.rst", "_autosummary/seldonian.dataset.RLMetaData.rst", "_autosummary/seldonian.dataset.SupervisedDataSet.rst", "_autosummary/seldonian.dataset.SupervisedMetaData.rst", "_autosummary/seldonian.dataset.load_RL_metadata.rst", "_autosummary/seldonian.dataset.load_supervised_metadata.rst", "_autosummary/seldonian.hyperparam_search.rst", "_autosummary/seldonian.hyperparam_search.HyperparamSearch.rst", "_autosummary/seldonian.models.rst", "_autosummary/seldonian.models.models.rst", "_autosummary/seldonian.models.models.BaseLogisticRegressionModel.rst", "_autosummary/seldonian.models.models.BinaryLogisticRegressionModel.rst", "_autosummary/seldonian.models.models.BoundedLinearRegressionModel.rst", "_autosummary/seldonian.models.models.ClassificationModel.rst", "_autosummary/seldonian.models.models.DummyClassifierModel.rst", "_autosummary/seldonian.models.models.LinearRegressionModel.rst", "_autosummary/seldonian.models.models.LinearRegressionModelListFeatures.rst", "_autosummary/seldonian.models.models.MultiClassLogisticRegressionModel.rst", "_autosummary/seldonian.models.models.RandomClassifierModel.rst", "_autosummary/seldonian.models.models.RegressionModel.rst", "_autosummary/seldonian.models.models.SeldonianModel.rst", "_autosummary/seldonian.models.models.SupervisedModel.rst", "_autosummary/seldonian.models.objectives.rst", "_autosummary/seldonian.models.objectives.Error_Rate.rst", "_autosummary/seldonian.models.objectives.False_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.False_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.IS_estimate.rst", "_autosummary/seldonian.models.objectives.Mean_Error.rst", "_autosummary/seldonian.models.objectives.Mean_Squared_Error.rst", "_autosummary/seldonian.models.objectives.Negative_Rate.rst", "_autosummary/seldonian.models.objectives.PDIS_estimate.rst", "_autosummary/seldonian.models.objectives.Positive_Rate.rst", "_autosummary/seldonian.models.objectives.True_Negative_Rate.rst", "_autosummary/seldonian.models.objectives.True_Positive_Rate.rst", "_autosummary/seldonian.models.objectives.WIS_estimate.rst", "_autosummary/seldonian.models.objectives.binary_logistic_loss.rst", "_autosummary/seldonian.models.objectives.confusion_matrix.rst", "_autosummary/seldonian.models.objectives.gradient_Bounded_Squared_Error.rst", "_autosummary/seldonian.models.objectives.gradient_Mean_Squared_Error.rst", "_autosummary/seldonian.models.objectives.gradient_binary_logistic_loss.rst", "_autosummary/seldonian.models.objectives.multiclass_logistic_loss.rst", "_autosummary/seldonian.models.sklearn_lr.rst", "_autosummary/seldonian.models.sklearn_lr.SkLearnLinearRegressor.rst", "_autosummary/seldonian.models.sklearn_model.rst", "_autosummary/seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.rst", "_autosummary/seldonian.models.sklearn_model.sklearn_predict_vjp.rst", "_autosummary/seldonian.models.trees.rst", "_autosummary/seldonian.models.trees.skrandomforest_model.rst", "_autosummary/seldonian.models.trees.skrandomforest_model.SeldonianRandomForest.rst", "_autosummary/seldonian.models.trees.skrandomforest_model.probs2theta.rst", "_autosummary/seldonian.models.trees.skrandomforest_model.sigmoid.rst", "_autosummary/seldonian.models.trees.skrandomforest_model.sklearn_predict_vjp.rst", "_autosummary/seldonian.models.trees.sktree_model.rst", "_autosummary/seldonian.models.trees.sktree_model.SeldonianDecisionTree.rst", "_autosummary/seldonian.models.trees.sktree_model.probs2theta.rst", "_autosummary/seldonian.models.trees.sktree_model.sigmoid.rst", "_autosummary/seldonian.models.trees.sktree_model.sklearn_predict_vjp.rst", "_autosummary/seldonian.models.zhat_funcs.rst", "_autosummary/seldonian.models.zhat_funcs.batcher.rst", "_autosummary/seldonian.models.zhat_funcs.evaluate_statistic.rst", "_autosummary/seldonian.models.zhat_funcs.sample_from_statistic.rst", "_autosummary/seldonian.models.zhat_funcs.vector_Accuracy.rst", "_autosummary/seldonian.models.zhat_funcs.vector_Error.rst", "_autosummary/seldonian.models.zhat_funcs.vector_Error_Rate.rst", "_autosummary/seldonian.models.zhat_funcs.vector_False_Negative_Rate.rst", "_autosummary/seldonian.models.zhat_funcs.vector_False_Positive_Rate.rst", "_autosummary/seldonian.models.zhat_funcs.vector_IS_estimate.rst", "_autosummary/seldonian.models.zhat_funcs.vector_Negative_Rate.rst", "_autosummary/seldonian.models.zhat_funcs.vector_PDIS_estimate.rst", "_autosummary/seldonian.models.zhat_funcs.vector_Positive_Rate.rst", "_autosummary/seldonian.models.zhat_funcs.vector_Squared_Error.rst", "_autosummary/seldonian.models.zhat_funcs.vector_True_Negative_Rate.rst", "_autosummary/seldonian.models.zhat_funcs.vector_True_Positive_Rate.rst", "_autosummary/seldonian.models.zhat_funcs.vector_WIS_estimate.rst", "_autosummary/seldonian.models.zhat_funcs.vector_confusion_matrix.rst", "_autosummary/seldonian.optimizers.rst", "_autosummary/seldonian.optimizers.gradient_descent.rst", "_autosummary/seldonian.optimizers.gradient_descent.gradient_descent_adam.rst", "_autosummary/seldonian.optimizers.gradient_descent.setup_gradients.rst", "_autosummary/seldonian.parse_tree.rst", "_autosummary/seldonian.parse_tree.nodes.rst", "_autosummary/seldonian.parse_tree.nodes.BaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.CVaRSQeBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.ConstantNode.rst", "_autosummary/seldonian.parse_tree.nodes.InternalNode.rst", "_autosummary/seldonian.parse_tree.nodes.MEDCustomBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.MultiClassBaseNode.rst", "_autosummary/seldonian.parse_tree.nodes.Node.rst", "_autosummary/seldonian.parse_tree.nodes.RLAltRewardBaseNode.rst", "_autosummary/seldonian.parse_tree.operators.rst", "_autosummary/seldonian.parse_tree.parse_tree.rst", "_autosummary/seldonian.parse_tree.parse_tree.ParseTree.rst", "_autosummary/seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints.rst", "_autosummary/seldonian.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.rst", "_autosummary/seldonian.safety_test.safety_test.SafetyTest.rst", "_autosummary/seldonian.seldonian_algorithm.rst", "_autosummary/seldonian.seldonian_algorithm.SeldonianAlgorithm.rst", "_autosummary/seldonian.spec.rst", "_autosummary/seldonian.spec.RLSpec.rst", "_autosummary/seldonian.spec.Spec.rst", "_autosummary/seldonian.spec.SupervisedSpec.rst", "_autosummary/seldonian.spec.createRLSpec.rst", "_autosummary/seldonian.spec.createSimpleSupervisedSpec.rst", "_autosummary/seldonian.spec.createSupervisedSpec.rst", "_autosummary/seldonian.spec.validate_parse_trees.rst", "_autosummary/seldonian.utils.rst", "_autosummary/seldonian.utils.RL_utils.rst", "_autosummary/seldonian.utils.RL_utils.argmax_multi.rst", "_autosummary/seldonian.utils.RL_utils.clamp.rst", "_autosummary/seldonian.utils.RL_utils.error.rst", "_autosummary/seldonian.utils.io_utils.rst", "_autosummary/seldonian.utils.io_utils.dir_path.rst", "_autosummary/seldonian.utils.io_utils.load_json.rst", "_autosummary/seldonian.utils.io_utils.load_pickle.rst", "_autosummary/seldonian.utils.io_utils.save_json.rst", "_autosummary/seldonian.utils.io_utils.save_pickle.rst", "_autosummary/seldonian.utils.plot_utils.rst", "_autosummary/seldonian.utils.plot_utils.plot_gradient_descent.rst", "_autosummary/seldonian.utils.stats_utils.rst", "_autosummary/seldonian.utils.stats_utils.custom_cumprod.rst", "_autosummary/seldonian.utils.stats_utils.softmax.rst", "_autosummary/seldonian.utils.stats_utils.stddev.rst", "_autosummary/seldonian.utils.stats_utils.tinv.rst", "_autosummary/seldonian.utils.stats_utils.weighted_sum_gamma.rst", "_autosummary/seldonian.utils.tutorial_utils.rst", "_autosummary/seldonian.utils.tutorial_utils.generate_clipped_data.rst", "_autosummary/seldonian.utils.tutorial_utils.generate_data.rst", "_autosummary/seldonian.utils.tutorial_utils.make_synthetic_regression_dataset.rst", "_autosummary/seldonian.warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.rst", "_autosummary/seldonian.warnings.custom_warnings.custom_formatwarning.rst", "api.rst", "getting_started.rst", "index.rst", "overview.rst"], "titles": ["seldonian", "seldonian.RL", "seldonian.RL.Agents", "seldonian.RL.Agents.Agent", "seldonian.RL.Agents.Agent.Agent", "seldonian.RL.Agents.Bases", "seldonian.RL.Agents.Bases.Fourier", "seldonian.RL.Agents.Bases.Fourier.Fourier", "seldonian.RL.Agents.Discrete_Random_Agent", "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent", "seldonian.RL.Agents.Function_Approximators", "seldonian.RL.Agents.Function_Approximators.Function_Approximator", "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator", "seldonian.RL.Agents.Function_Approximators.Linear_FA", "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA", "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA", "seldonian.RL.Agents.Function_Approximators.Table", "seldonian.RL.Agents.Function_Approximators.Table.Q_Table", "seldonian.RL.Agents.Function_Approximators.Table.Table", "seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description", "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent", "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent", "seldonian.RL.Agents.Policies", "seldonian.RL.Agents.Policies.Policy", "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy", "seldonian.RL.Agents.Policies.Policy.Policy", "seldonian.RL.Agents.Policies.Softmax", "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax", "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax", "seldonian.RL.Agents.Policies.Softmax.Softmax", "seldonian.RL.Agents.keyboard_gridworld", "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld", "seldonian.RL.Agents.mountain_car_rough_solution", "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution", "seldonian.RL.Env_Description", "seldonian.RL.Env_Description.Env_Description", "seldonian.RL.Env_Description.Env_Description.Env_Description", "seldonian.RL.Env_Description.Env_Description.check_space_type", "seldonian.RL.Env_Description.Spaces", "seldonian.RL.Env_Description.Spaces.Continuous_Space", "seldonian.RL.Env_Description.Spaces.Discrete_Space", "seldonian.RL.RL_generate_dataset_and_spec_file", "seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string", "seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs", "seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path", "seldonian.RL.RL_generate_dataset_and_spec_file.main", "seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info", "seldonian.RL.RL_model", "seldonian.RL.RL_model.RL_model", "seldonian.RL.RL_runner", "seldonian.RL.RL_runner.create_agent_fromdict", "seldonian.RL.RL_runner.run_episode", "seldonian.RL.RL_runner.run_episode_from_dict", "seldonian.RL.RL_runner.run_trial", "seldonian.RL.RL_runner.run_trial_given_agent_and_env", "seldonian.RL.environments", "seldonian.RL.environments.Environment", "seldonian.RL.environments.Environment.Environment", "seldonian.RL.environments.gridworld", "seldonian.RL.environments.gridworld.Gridworld", "seldonian.RL.environments.mountaincar", "seldonian.RL.environments.mountaincar.Mountaincar", "seldonian.RL.environments.n_step_mountaincar", "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar", "seldonian.RL.environments.simglucose_env", "seldonian.RL.environments.simglucose_env.Simglucose", "seldonian.RL.generate_gridworld_episodes", "seldonian.RL.generate_gridworld_episodes.main", "seldonian.RL.generate_mountaincar_episodes", "seldonian.RL.generate_mountaincar_episodes.main", "seldonian.RL.generate_simglucose_episodes", "seldonian.RL.generate_simglucose_episodes.get_max_obs", "seldonian.RL.generate_simglucose_episodes.main", "seldonian.RL.hyperparams_and_settings", "seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict", "seldonian.candidate_selection", "seldonian.candidate_selection.candidate_selection", "seldonian.candidate_selection.candidate_selection.CandidateSelection", "seldonian.dataset", "seldonian.dataset.DataSet", "seldonian.dataset.DataSetLoader", "seldonian.dataset.Episode", "seldonian.dataset.MetaData", "seldonian.dataset.RLDataSet", "seldonian.dataset.RLMetaData", "seldonian.dataset.SupervisedDataSet", "seldonian.dataset.SupervisedMetaData", "seldonian.dataset.load_RL_metadata", "seldonian.dataset.load_supervised_metadata", "seldonian.hyperparam_search", "seldonian.hyperparam_search.HyperparamSearch", "seldonian.models", "seldonian.models.models", "seldonian.models.models.BaseLogisticRegressionModel", "seldonian.models.models.BinaryLogisticRegressionModel", "seldonian.models.models.BoundedLinearRegressionModel", "seldonian.models.models.ClassificationModel", "seldonian.models.models.DummyClassifierModel", "seldonian.models.models.LinearRegressionModel", "seldonian.models.models.LinearRegressionModelListFeatures", "seldonian.models.models.MultiClassLogisticRegressionModel", "seldonian.models.models.RandomClassifierModel", "seldonian.models.models.RegressionModel", "seldonian.models.models.SeldonianModel", "seldonian.models.models.SupervisedModel", "seldonian.models.objectives", "seldonian.models.objectives.Error_Rate", "seldonian.models.objectives.False_Negative_Rate", "seldonian.models.objectives.False_Positive_Rate", "seldonian.models.objectives.IS_estimate", "seldonian.models.objectives.Mean_Error", "seldonian.models.objectives.Mean_Squared_Error", "seldonian.models.objectives.Negative_Rate", "seldonian.models.objectives.PDIS_estimate", "seldonian.models.objectives.Positive_Rate", "seldonian.models.objectives.True_Negative_Rate", "seldonian.models.objectives.True_Positive_Rate", "seldonian.models.objectives.WIS_estimate", "seldonian.models.objectives.binary_logistic_loss", "seldonian.models.objectives.confusion_matrix", "seldonian.models.objectives.gradient_Bounded_Squared_Error", "seldonian.models.objectives.gradient_Mean_Squared_Error", "seldonian.models.objectives.gradient_binary_logistic_loss", "seldonian.models.objectives.multiclass_logistic_loss", "seldonian.models.sklearn_lr", "seldonian.models.sklearn_lr.SkLearnLinearRegressor", "seldonian.models.sklearn_model", "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel", "seldonian.models.sklearn_model.sklearn_predict_vjp", "seldonian.models.trees", "seldonian.models.trees.skrandomforest_model", "seldonian.models.trees.skrandomforest_model.SeldonianRandomForest", "seldonian.models.trees.skrandomforest_model.probs2theta", "seldonian.models.trees.skrandomforest_model.sigmoid", "seldonian.models.trees.skrandomforest_model.sklearn_predict_vjp", "seldonian.models.trees.sktree_model", "seldonian.models.trees.sktree_model.SeldonianDecisionTree", "seldonian.models.trees.sktree_model.probs2theta", "seldonian.models.trees.sktree_model.sigmoid", "seldonian.models.trees.sktree_model.sklearn_predict_vjp", "seldonian.models.zhat_funcs", "seldonian.models.zhat_funcs.batcher", "seldonian.models.zhat_funcs.evaluate_statistic", "seldonian.models.zhat_funcs.sample_from_statistic", "seldonian.models.zhat_funcs.vector_Accuracy", "seldonian.models.zhat_funcs.vector_Error", "seldonian.models.zhat_funcs.vector_Error_Rate", "seldonian.models.zhat_funcs.vector_False_Negative_Rate", "seldonian.models.zhat_funcs.vector_False_Positive_Rate", "seldonian.models.zhat_funcs.vector_IS_estimate", "seldonian.models.zhat_funcs.vector_Negative_Rate", "seldonian.models.zhat_funcs.vector_PDIS_estimate", "seldonian.models.zhat_funcs.vector_Positive_Rate", "seldonian.models.zhat_funcs.vector_Squared_Error", "seldonian.models.zhat_funcs.vector_True_Negative_Rate", "seldonian.models.zhat_funcs.vector_True_Positive_Rate", "seldonian.models.zhat_funcs.vector_WIS_estimate", "seldonian.models.zhat_funcs.vector_confusion_matrix", "seldonian.optimizers", "seldonian.optimizers.gradient_descent", "seldonian.optimizers.gradient_descent.gradient_descent_adam", "seldonian.optimizers.gradient_descent.setup_gradients", "seldonian.parse_tree", "seldonian.parse_tree.nodes", "seldonian.parse_tree.nodes.BaseNode", "seldonian.parse_tree.nodes.CVaRSQeBaseNode", "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode", "seldonian.parse_tree.nodes.ConstantNode", "seldonian.parse_tree.nodes.InternalNode", "seldonian.parse_tree.nodes.MEDCustomBaseNode", "seldonian.parse_tree.nodes.MultiClassBaseNode", "seldonian.parse_tree.nodes.Node", "seldonian.parse_tree.nodes.RLAltRewardBaseNode", "seldonian.parse_tree.operators", "seldonian.parse_tree.parse_tree", "seldonian.parse_tree.parse_tree.ParseTree", "seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints", "seldonian.safety_test", "seldonian.safety_test.safety_test", "seldonian.safety_test.safety_test.SafetyTest", "seldonian.seldonian_algorithm", "seldonian.seldonian_algorithm.SeldonianAlgorithm", "seldonian.spec", "seldonian.spec.RLSpec", "seldonian.spec.Spec", "seldonian.spec.SupervisedSpec", "seldonian.spec.createRLSpec", "seldonian.spec.createSimpleSupervisedSpec", "seldonian.spec.createSupervisedSpec", "seldonian.spec.validate_parse_trees", "seldonian.utils", "seldonian.utils.RL_utils", "seldonian.utils.RL_utils.argmax_multi", "seldonian.utils.RL_utils.clamp", "seldonian.utils.RL_utils.error", "seldonian.utils.io_utils", "seldonian.utils.io_utils.dir_path", "seldonian.utils.io_utils.load_json", "seldonian.utils.io_utils.load_pickle", "seldonian.utils.io_utils.save_json", "seldonian.utils.io_utils.save_pickle", "seldonian.utils.plot_utils", "seldonian.utils.plot_utils.plot_gradient_descent", "seldonian.utils.stats_utils", "seldonian.utils.stats_utils.custom_cumprod", "seldonian.utils.stats_utils.softmax", "seldonian.utils.stats_utils.stddev", "seldonian.utils.stats_utils.tinv", "seldonian.utils.stats_utils.weighted_sum_gamma", "seldonian.utils.tutorial_utils", "seldonian.utils.tutorial_utils.generate_clipped_data", "seldonian.utils.tutorial_utils.generate_data", "seldonian.utils.tutorial_utils.make_synthetic_regression_dataset", "seldonian.warnings", "seldonian.warnings.custom_warnings", "seldonian.warnings.custom_warnings.custom_formatwarning", "API", "Getting Started", "Seldonian Engine documentation", "Overview"], "terms": {"engin": [0, 173, 217, 219], "packag": [0, 219], "modul": [0, 1, 2, 5, 10, 22, 34, 55, 75, 76, 89, 91, 92, 129, 158, 162, 173, 174, 177, 178, 180, 182, 190, 213, 215, 219], "class": [3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 47, 48, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 112, 114, 115, 116, 119, 123, 124, 125, 126, 127, 128, 130, 131, 135, 136, 147, 148, 150, 152, 154, 155, 157, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 219], "base": [4, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 48, 57, 59, 61, 63, 65, 77, 79, 80, 81, 82, 83, 84, 85, 86, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 125, 127, 131, 136, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 179, 181, 183, 184, 185, 218, 219], "object": [4, 7, 9, 12, 14, 15, 19, 21, 24, 25, 27, 28, 29, 36, 39, 40, 45, 46, 57, 59, 77, 79, 80, 81, 82, 83, 85, 90, 103, 131, 136, 140, 160, 161, 164, 165, 166, 169, 170, 171, 172, 175, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 197, 198, 199, 200, 202, 218], "__init__": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 48, 57, 59, 61, 63, 65, 77, 79, 80, 81, 82, 83, 84, 85, 86, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 125, 127, 131, 136, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 179, 181, 183, 184, 185, 218], "__repr__": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 48, 57, 59, 61, 63, 65, 77, 79, 80, 81, 82, 83, 84, 85, 86, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 125, 127, 131, 136, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 179, 181, 183, 184, 185, 218], "return": [4, 7, 9, 12, 14, 15, 17, 18, 19, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 42, 43, 44, 46, 48, 50, 51, 52, 53, 54, 57, 59, 61, 63, 65, 77, 79, 80, 81, 82, 83, 84, 85, 86, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 131, 134, 136, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 164, 165, 166, 169, 170, 172, 173, 175, 179, 181, 183, 184, 185, 192, 202, 204, 206, 207, 208, 219], "repr": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 48, 57, 59, 61, 63, 65, 77, 79, 80, 81, 82, 83, 84, 85, 86, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 125, 127, 131, 136, 175, 179, 181, 183, 184, 185], "self": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 48, 57, 59, 61, 63, 65, 77, 79, 80, 81, 82, 83, 84, 85, 86, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 125, 127, 131, 136, 175, 179, 181, 183, 184, 185], "method": [4, 7, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 48, 57, 59, 61, 63, 65, 77, 79, 80, 81, 82, 83, 84, 85, 86, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 125, 127, 131, 136, 160, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 179, 181, 183, 184, 185, 219], "choose_act": [4, 9, 21, 24, 25, 27, 28, 29, 31, 33, 218], "observ": [4, 7, 9, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 48, 57, 61, 63, 65, 81, 94, 97, 100, 101, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 157, 164, 165, 166, 169, 170, 172, 219], "choos": [4, 9, 31, 33, 219], "an": [4, 7, 9, 14, 15, 19, 21, 24, 25, 27, 28, 29, 31, 33, 36, 50, 53, 57, 59, 61, 63, 65, 128, 131, 134, 136, 139, 164, 165, 166, 170, 171, 172, 173, 196, 197, 198, 199, 200, 208, 219], "action": [4, 9, 15, 17, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 48, 57, 59, 61, 63, 65, 80, 81, 219], "given": [4, 7, 9, 17, 19, 21, 24, 25, 27, 28, 29, 31, 33, 42, 43, 44, 48, 57, 59, 61, 63, 65, 77, 125, 161, 164, 165, 166, 169, 170, 172, 175, 176, 179, 181, 219], "To": [4, 9, 31, 33, 217], "overridden": [4, 9, 25, 31, 33], "paramet": [4, 7, 9, 12, 14, 15, 17, 18, 19, 21, 24, 25, 27, 28, 29, 31, 33, 36, 37, 39, 40, 46, 48, 50, 51, 52, 53, 54, 57, 59, 61, 63, 65, 77, 79, 80, 81, 83, 85, 88, 90, 93, 94, 95, 97, 98, 99, 100, 101, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 131, 134, 136, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 179, 181, 183, 184, 185, 186, 187, 188, 189, 196, 197, 198, 199, 200, 202, 204, 206, 207, 208, 210, 211, 212, 219], "The": [4, 9, 14, 15, 17, 18, 21, 27, 28, 29, 31, 33, 39, 59, 77, 79, 80, 85, 88, 90, 93, 94, 95, 97, 98, 99, 100, 101, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 128, 131, 134, 136, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 179, 181, 183, 184, 185, 186, 187, 188, 200, 202, 204, 208, 210, 211, 212, 218, 219], "current": [4, 9, 21, 24, 25, 27, 28, 29, 31, 33, 57, 59, 61, 63, 65, 90, 96, 131, 136, 219], "type": [4, 9, 19, 21, 24, 27, 28, 29, 31, 33, 37, 48, 50, 51, 52, 59, 77, 90, 93, 94, 95, 97, 98, 99, 100, 101, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 131, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 164, 165, 166, 169, 170, 172, 175, 179, 181, 204, 206, 207, 208, 219], "depend": [4, 9, 21, 24, 27, 28, 29, 31, 33, 107, 108, 112, 114, 115, 116, 127, 147, 148, 150, 152, 154, 155, 164, 165, 166, 169, 170, 172, 219], "environ": [4, 7, 9, 14, 15, 17, 18, 19, 21, 24, 27, 28, 29, 31, 33, 36, 42, 43, 44, 48, 50, 51, 52, 53, 54, 186, 218, 219], "get_param": [4, 9, 21, 24, 25, 27, 28, 29, 31, 33, 218], "retriev": [4, 9, 31, 33, 131, 136], "": [4, 9, 21, 31, 33, 36, 131, 136, 169, 175, 181, 206, 207, 219], "polici": [4, 9, 21, 31, 33, 48, 53, 81, 173, 186, 218, 219], "get_prob_this_act": [4, 9, 21, 24, 25, 27, 28, 29, 31, 33, 48, 218], "get": [4, 7, 9, 17, 21, 24, 25, 27, 28, 29, 31, 33, 36, 39, 40, 48, 57, 59, 61, 63, 65, 77, 90, 119, 131, 157, 175, 179, 181, 218, 219], "probabl": [4, 9, 17, 21, 24, 25, 27, 28, 29, 31, 33, 48, 81, 90, 94, 97, 100, 101, 119, 127, 131, 136, 144, 146, 157, 165, 175, 207, 219], "provid": [4, 9, 31, 33, 36, 142, 175, 181, 183, 184, 185, 186, 219], "i": [4, 9, 21, 24, 27, 28, 29, 31, 33, 39, 46, 59, 77, 90, 93, 94, 95, 100, 109, 117, 119, 122, 125, 127, 131, 136, 144, 146, 149, 151, 156, 157, 160, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 179, 181, 183, 184, 185, 196, 202, 217, 218, 219], "set_new_param": [4, 9, 12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 29, 31, 33, 218], "theta": [4, 9, 31, 33, 77, 94, 95, 97, 98, 99, 100, 101, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 131, 133, 134, 136, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 164, 165, 166, 169, 170, 172, 179, 181, 219], "updat": [4, 9, 21, 25, 31, 33, 59, 125, 127, 131, 136, 186, 188, 218], "model": [4, 9, 12, 14, 15, 17, 18, 31, 33, 48, 77, 90, 160, 164, 165, 166, 169, 170, 172, 179, 181, 183, 184, 185, 186, 218], "next_observ": [4, 9, 21, 31, 33], "reward": [4, 9, 21, 31, 33, 46, 59, 80, 81, 149, 151, 156, 172, 173, 208, 219], "termin": [4, 9, 21, 31, 33, 57, 59, 61, 63, 65, 218], "accord": [4, 9, 21, 31, 33, 90], "learn": [4, 9, 21, 31, 33, 77, 79, 80, 84, 85, 86, 92, 96, 103, 104, 125, 127, 160, 164, 165, 166, 169, 170, 172, 173, 175, 176, 179, 185, 218, 219], "rule": [4, 9, 21, 31, 33], "overriden": [4, 9, 31, 33], "after": [4, 9, 21, 31, 33], "taken": [4, 9, 21, 31, 33, 36, 48], "take": [4, 9, 21, 24, 25, 31, 33, 48, 175, 219], "bool": [4, 9, 21, 31, 33, 59, 77, 171, 175, 179, 183, 184, 185, 186, 202], "whether": [4, 9, 21, 24, 27, 28, 29, 31, 33, 53, 59, 77, 90, 112, 114, 131, 136, 147, 148, 150, 152, 154, 155, 171, 175, 179, 181, 183, 184, 185, 186, 187, 188, 196, 202, 212, 219], "hyperparam_and_setting_dict": [7, 21, 24, 27, 28, 29], "env_desc": 7, "basi": [7, 14, 15, 24, 27, 28, 29], "us": [7, 14, 15, 21, 27, 31, 39, 40, 46, 48, 53, 57, 61, 63, 65, 77, 90, 93, 94, 95, 98, 99, 100, 125, 127, 131, 136, 160, 161, 164, 165, 166, 169, 170, 172, 173, 175, 181, 183, 184, 185, 186, 187, 188, 207, 208, 212, 217, 219], "linear": [7, 14, 15, 24, 27, 28, 29, 95, 98, 99, 125], "valu": [7, 15, 17, 27, 28, 29, 40, 77, 90, 131, 145, 153, 160, 164, 165, 166, 167, 169, 170, 172, 175, 179, 181, 210, 212, 219], "function": [7, 12, 14, 15, 16, 21, 24, 27, 28, 29, 35, 41, 49, 59, 66, 68, 70, 73, 77, 78, 95, 105, 125, 126, 128, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 159, 160, 161, 164, 166, 170, 172, 173, 174, 175, 176, 179, 182, 183, 184, 185, 186, 187, 188, 191, 195, 201, 202, 203, 207, 209, 214, 219], "approxim": [7, 12, 14, 15, 21, 24, 27, 28, 29], "see": [7, 28, 165, 169, 183, 184, 185, 218, 219], "http": [7, 28, 165, 169, 204, 207], "irl": 7, "c": [7, 28, 119, 157, 165, 166], "brown": 7, "edu": [7, 28, 165], "fb": 7, "php": 7, "refer": [7, 172, 173, 219], "hyperparameter_and_setting_dict": [7, 24, 27, 28, 29, 50, 52, 53], "specifi": [7, 24, 27, 28, 29, 50, 53, 54, 173, 175, 183, 184, 185, 219], "number": [7, 17, 18, 24, 27, 28, 29, 36, 39, 40, 50, 53, 54, 59, 77, 79, 85, 90, 93, 94, 100, 119, 122, 131, 136, 141, 157, 160, 164, 165, 166, 169, 170, 172, 175, 179, 210, 211, 212, 219], "episod": [7, 24, 27, 28, 29, 45, 46, 50, 51, 52, 53, 54, 67, 69, 71, 72, 79, 80, 83, 85, 109, 113, 117, 149, 151, 156, 218, 219], "per": [7, 24, 27, 28, 29, 50, 113, 151, 202], "trial": [7, 24, 27, 28, 29, 45, 50, 53, 67, 69, 72], "env_descript": [7, 9, 14, 15, 19, 21, 24, 27, 28, 29, 31, 59, 218], "access": [7, 9, 14, 15, 19, 21, 24, 27, 28, 29, 36], "attribut": [7, 9, 14, 15, 19, 21, 24, 27, 28, 29, 36, 59, 80, 83, 166, 170, 172, 175, 181, 219], "calculate_num_featur": [7, 218], "order": [7, 131, 136, 219], "max_coupled_var": 7, "num_obs_dim": 7, "determin": [7, 90, 160, 175, 186, 187, 188], "featur": [7, 14, 15, 80, 85, 93, 94, 95, 97, 98, 99, 100, 101, 106, 107, 108, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 127, 128, 131, 134, 136, 139, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 157, 164, 165, 166, 169, 170, 172, 181, 219], "construct_basis_matrix": [7, 218], "creat": [7, 19, 24, 27, 28, 29, 45, 50, 59, 77, 80, 90, 125, 127, 164, 165, 166, 169, 170, 172, 175, 176, 181, 186, 187, 188, 219], "matrix": [7, 119, 131, 157, 166, 173, 219], "get_featur": [7, 218], "ob": [7, 17, 18, 21, 24, 25, 27, 28, 29, 36, 57, 59, 61, 63, 65, 80, 175], "get_normalized_observ": [7, 218], "normal": [7, 210, 211, 212], "act": 9, "discret": [9, 24, 27, 28, 29, 36, 37, 40], "space": [9, 24, 27, 28, 29, 36, 37, 59, 218], "pick": 9, "uniform": 9, "random": [9, 131, 210, 211, 212], "capabl": [9, 18], "new_param": [12, 14, 15, 17, 18, 21, 24, 25, 27, 28, 29, 48], "set": [12, 14, 15, 17, 18, 21, 24, 27, 28, 29, 53, 77, 90, 107, 108, 112, 114, 115, 116, 136, 162, 166, 167, 181, 219], "new": [12, 14, 15, 17, 18, 57, 61, 63, 65, 131, 173, 218, 219], "weight": [12, 14, 15, 17, 18, 21, 24, 27, 28, 29, 48, 77, 90, 93, 94, 95, 97, 98, 99, 100, 101, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 131, 134, 136, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 164, 165, 166, 169, 170, 172, 173, 175, 176, 179, 181, 183, 184, 185, 186, 208, 219], "encod": [14, 15, 219], "A": [15, 17, 19, 27, 48, 54, 57, 59, 61, 63, 65, 128, 131, 134, 136, 139, 141, 149, 151, 156, 166, 170, 172, 173, 175, 183, 184, 185, 196, 197, 198, 199, 200, 218], "state": [15, 17, 18, 21, 36, 59], "min_stat": [17, 18], "num_stat": [17, 18, 59], "num_act": 17, "q": [17, 19, 27], "contain": [17, 21, 25, 59, 77, 80, 90, 92, 131, 142, 143, 160, 164, 165, 166, 169, 170, 172, 173, 175, 179, 181, 183, 184, 185, 187, 188, 219], "transit": [17, 57, 59, 61, 63, 65, 218], "int": [17, 18, 27, 40, 59, 77, 79, 85, 90, 119, 141, 157, 160, 164, 165, 166, 169, 170, 171, 172, 175, 179, 207, 210, 211, 212], "smallest": [17, 18], "total": [17, 18, 40, 90, 141, 175], "from_environment_state_to_0_indexed_st": [17, 18, 218], "env_stat": [17, 18], "convert": [17, 18, 24, 27, 28, 29, 125, 127, 128, 134], "0": [17, 18, 24, 27, 28, 29, 39, 77, 95, 101, 106, 107, 108, 112, 114, 115, 116, 117, 131, 144, 146, 147, 148, 150, 152, 154, 155, 157, 160, 164, 165, 166, 169, 170, 172, 175, 179, 183, 184, 185, 186, 187, 188, 208, 210, 211, 212, 219], "index": [17, 18, 24, 27, 28, 29, 77, 119, 157, 166, 170, 171, 172, 208, 219], "you": [17, 18, 80, 141, 175, 179, 200, 202, 217, 218, 219], "want": [17, 18, 37, 80, 90, 141, 170, 172, 175, 179, 200, 202, 217, 219], "get_action_values_given_st": [17, 24, 27, 28, 29, 218], "state_number_not_zero_index": 17, "possibl": [17, 21, 24, 27, 28, 29, 36, 57, 59, 61, 63, 65, 165, 219], "environment": 17, "specif": [17, 24, 27, 28, 29, 50, 90, 172, 181, 182, 183, 184, 185, 219], "arrai": [17, 21, 24, 27, 28, 29, 39, 48, 77, 90, 93, 94, 100, 119, 125, 127, 128, 131, 134, 136, 157, 173, 204, 208, 219], "get_action_values_given_zero_indexed_st": [17, 218], "zero_indexed_state_numb": 17, "hold": [18, 79, 81, 82, 83, 84, 85, 86], "reindex": 18, "descript": [19, 24, 27, 28, 29, 57, 59, 61, 63, 65, 219], "q_tabl": [19, 21, 218], "parametr": 21, "softmax": [21, 218, 219], "pi": 21, "frac": 21, "e": [21, 46, 77, 79, 80, 83, 85, 131, 142, 143, 160, 164, 165, 166, 169, 170, 172, 175, 176, 179, 183, 184, 185, 219], "p": [21, 207, 219], "sum_": 21, "addit": [21, 219], "info": [21, 90, 160, 181], "about": [21, 160, 175, 219], "data": [21, 77, 80, 90, 94, 100, 118, 123, 164, 165, 166, 169, 170, 172, 175, 179, 181, 183, 184, 185, 186, 187, 188, 199, 200, 206, 210, 211, 212, 219], "gener": [21, 24, 29, 210, 211, 212, 219], "variabl": [21, 39, 59, 131, 136, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175], "fa": 21, "select": [21, 24, 25, 27, 28, 29, 75, 76, 77, 89, 90, 158, 160, 164, 165, 166, 169, 170, 172, 179, 181, 183, 184, 185, 186, 187, 218], "get_action_valu": [21, 218], "all": [21, 24, 27, 28, 29, 48, 57, 79, 85, 96, 102, 103, 104, 109, 113, 117, 118, 123, 125, 127, 131, 166, 170, 171, 172, 175, 179, 219], "from": [21, 24, 27, 28, 29, 48, 50, 80, 81, 88, 90, 95, 98, 99, 128, 131, 134, 136, 139, 149, 151, 156, 162, 169, 174, 175, 181, 197, 198, 212, 219], "thi": [21, 48, 57, 59, 61, 63, 65, 107, 108, 112, 114, 115, 116, 117, 119, 122, 131, 136, 144, 146, 156, 157, 160, 164, 165, 166, 169, 170, 171, 172, 175, 181, 210, 212, 218, 219], "float": [21, 27, 28, 29, 48, 59, 90, 97, 101, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 181, 183, 184, 185, 186, 187, 188, 204, 206, 207, 208, 210, 211, 212, 219], "Not": [21, 31, 173], "implement": [21, 25, 57, 59, 61, 63, 65, 90, 94, 95, 97, 98, 99, 100, 101, 125, 127, 160, 204, 207, 219], "where": [24, 27, 54, 77, 117, 125, 131, 136, 160, 164, 165, 166, 169, 170, 172, 175, 179, 181, 186, 187, 188, 199, 202, 208, 219], "ar": [24, 27, 37, 39, 54, 77, 90, 136, 165, 166, 172, 173, 175, 179, 181, 189, 202, 208, 218, 219], "defin": [24, 25, 39, 165, 173, 219], "how": [24, 25, 28, 175, 219], "construct_basis_and_linear_fa": [24, 27, 28, 29, 218], "dictionari": [24, 27, 28, 29, 50, 54, 88, 160, 173, 181, 183, 184, 185, 202, 219], "from_0_indexed_action_to_environment_act": [24, 27, 28, 29, 218], "action_0_index": [24, 27, 28, 29], "env": [24, 27, 28, 29, 43, 51, 52, 54], "from_environment_action_to_0_indexed_act": [24, 27, 28, 29, 218], "env_act": [24, 27, 28, 29], "make_state_action_fa": [24, 27, 28, 29, 218], "contin": [24, 27, 28, 29, 37], "four": [25, 219], "which": [25, 37, 125, 127, 131, 136, 164, 165, 166, 168, 169, 170, 172, 173, 175, 186, 188, 219], "must": [25, 122, 125, 127, 128, 134, 164, 219], "ani": [25, 77, 176, 219], "both": [27, 175, 219], "faster": 27, "than": [27, 39, 54, 165, 175, 179, 219], "just": [27, 127, 181], "becaus": [27, 175, 202], "cach": [27, 175], "lookup": 27, "tabl": 27, "_arg": [27, 218], "helper": [27, 59, 175], "acceler": 27, "calcul": [27, 59, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 164, 165, 166, 169, 170, 172, 175, 179, 208, 219], "_denom": [27, 218], "choose_action_from_action_valu": [27, 28, 29, 218], "action_valu": [27, 28, 29], "list": [27, 28, 29, 46, 48, 53, 54, 77, 79, 80, 81, 83, 85, 90, 109, 113, 117, 131, 149, 151, 156, 164, 165, 166, 169, 170, 172, 173, 175, 176, 179, 183, 184, 185, 186, 187, 188, 189, 219], "param": [27, 28, 29, 114], "get_action_probs_from_action_valu": [27, 28, 29, 218], "get_e_to_the_something_term": [27, 28, 29, 218], "exponenti": [27, 28, 29, 160, 175], "action_prob": [27, 48, 81], "obsertavt": [27, 29], "obserav": [27, 28, 29], "alpha": [28, 165], "5": [28, 39, 101, 183, 184, 185, 219], "mix": 28, "peopl": [28, 165], "umass": [28, 165], "pthoma": [28, 165], "paper": [28, 165], "thomas2015b": 28, "pdf": [28, 165], "equat": 28, "mu": 28, "last": [28, 181, 219], "paragraph": 28, "befor": [28, 53, 125, 127, 128, 134, 219], "section": 28, "2": [28, 39, 169, 170, 172, 199, 219], "1": [28, 39, 94, 106, 107, 108, 112, 114, 115, 116, 125, 131, 144, 146, 147, 148, 150, 152, 154, 155, 157, 160, 164, 165, 166, 170, 172, 210, 211, 212, 215, 219], "stationar": 28, "hyperparamet": [28, 89, 90, 183, 184, 185, 219], "100": [28, 90, 160, 165], "far": [28, 219], "behavior": [28, 48, 77, 81, 160, 162, 173, 174, 175, 179, 183, 184, 185, 218], "can": [28, 131, 172, 175, 186, 188, 219], "pi_b": [28, 83], "under": 28, "discrete_action_polici": [29, 218], "debug": [31, 46, 57, 61, 63, 65, 90, 160, 181], "gridworld": [31, 218], "intend": 31, "public": 31, "observation_spac": 36, "action_spac": 36, "describ": [36, 59, 80], "conveni": [36, 175, 176, 186, 187, 188, 219], "continu": [36, 39], "made": 36, "get_min_act": [36, 218], "first": [36, 170, 175, 218, 219], "get_min_st": [36, 218], "get_num_act": [36, 218], "get_num_observation_dim": [36, 218], "dimens": [36, 39, 210, 211, 212], "get_num_st": [36, 218], "also": [36, 122, 167, 168, 171, 175, 208, 219], "call": [36, 127, 131, 136, 141, 164, 165, 166, 169, 170, 172, 208, 219], "here": [36, 127, 131, 173, 219], "desired_typ": 37, "valid": [37, 39, 122, 175, 219], "ensur": [37, 189, 219], "equival": [37, 144, 164, 165, 166, 169, 170, 172], "discrete_spac": [37, 218], "continous_spac": 37, "we": [37, 90, 112, 114, 131, 164, 165, 166, 169, 170, 172, 175, 217, 219], "match": 37, "bound": [39, 77, 95, 120, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 179, 181, 183, 184, 185, 219], "np": [39, 204], "ndarrai": [39, 77, 90, 95, 97, 98, 99, 101, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 127, 128, 131, 134, 136, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 164, 165, 166, 169, 170, 172, 179, 181, 204, 206, 208], "shape": [39, 93, 94, 100, 119, 125, 127, 131, 136, 157, 219], "num_dim": 39, "min": [39, 40, 169, 219], "max": [39, 40, 219], "each": [39, 81, 83, 94, 97, 100, 101, 131, 136, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 164, 165, 166, 169, 170, 172, 173, 175, 176, 181, 183, 184, 185, 202, 219], "For": [39, 170, 173, 219], "exampl": [39, 170, 219], "3d": 39, "x": [39, 93, 94, 95, 97, 98, 99, 100, 101, 106, 107, 108, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 127, 128, 131, 134, 136, 139, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 157, 166, 169, 204, 205, 210, 211, 212], "y": [39, 93, 94, 95, 98, 99, 100, 106, 107, 108, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 157, 169, 210, 211, 212], "4": [39, 165, 173, 219], "z": [39, 165], "12": 39, "6": [39, 183, 185, 186, 187, 188, 219], "8": [39, 53, 219], "would": [39, 77, 160, 170, 172, 173, 183, 184, 185, 219], "check_bounds_valid": [39, 218], "check": [39, 59, 175, 196], "format": [39, 80, 219], "maximum": [39, 40, 59, 165, 175], "larger": [39, 165], "minimum": [39, 40, 165, 175, 219], "get_num_dim": [39, 218], "get_num_valu": [40, 218], "env_nam": [42, 43, 44], "name": [42, 43, 44, 77, 79, 80, 83, 85, 142, 143, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 183, 184, 185, 187, 219], "default": [42, 43, 80, 160, 161, 171, 175, 176, 183, 184, 185, 186, 188, 219], "constraint": [42, 77, 149, 151, 156, 160, 161, 162, 170, 173, 174, 175, 176, 179, 181, 183, 184, 185, 186, 187, 188, 189, 202, 218], "string": [42, 77, 167, 168, 171, 172, 173, 175, 176, 181, 183, 184, 185, 186, 187, 188, 218], "kwarg": [43, 48, 77, 79, 80, 83, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 131, 136, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 164, 165, 166, 167, 168, 169, 170, 172, 175, 179, 186, 215], "path": [44, 188, 196, 202], "metadata": [44, 79, 80, 83, 84, 85, 86, 88, 160, 187, 188, 218, 219], "file": [44, 80, 88, 90, 181, 186, 187, 188, 197, 198, 199, 200, 219], "run": [45, 51, 52, 53, 54, 67, 69, 72, 77, 78, 90, 91, 125, 131, 136, 160, 178, 179, 180, 181, 182, 183, 184, 185, 202, 218], "rlspec": [45, 186, 218, 219], "save": [45, 67, 69, 72, 186, 187, 188, 199, 200, 202, 219], "disk": [45, 67, 69, 72, 77, 80], "print": [46, 57, 59, 61, 63, 65, 90, 160, 181], "sum": [46, 117, 208], "env_kwarg": [48, 186, 219], "seldonianmodel": [48, 77, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 164, 165, 166, 169, 170, 172, 179, 184, 185, 218], "parameter": [48, 219], "dict": [48, 53, 142, 143, 160, 164, 165, 166, 169, 170, 172, 173, 175, 183, 184, 185, 186, 202], "pertain": [48, 186], "gamma": [48, 59, 186, 208, 219], "discount": [48, 59, 117, 186, 208, 219], "factor": [48, 59, 186, 208, 219], "singl": [48, 51, 52, 53, 131, 170, 175, 219], "pair": [48, 95, 98, 99, 169, 219], "timestep": [48, 59, 81, 219], "get_probs_from_observations_and_act": [48, 218], "those": [48, 173], "agent": [50, 51, 52, 53, 54, 218], "model_param": [52, 53], "none": [52, 53, 77, 80, 82, 160, 171, 179, 181, 183, 184, 185, 186], "parallel": 53, "fals": [53, 59, 77, 90, 106, 107, 108, 142, 147, 148, 160, 170, 173, 175, 181, 183, 184, 185, 186, 187, 188, 199, 200, 202, 212, 219], "n_worker": 53, "consist": [53, 219], "arbitrari": [53, 59, 172], "process": [53, 90, 181, 219], "cpu": 53, "num_episod": 54, "wrapper": [54, 77, 89, 131, 136, 141, 161, 179, 181, 197, 198, 199, 200], "run_trial": [54, 218], "explic": 54, "rather": 54, "via": [54, 175, 219], "get_env_descript": [57, 59, 61, 63, 65, 218], "overrid": [57, 59, 61, 63, 65, 95, 164, 165, 166, 169, 170, 172], "child": [57, 59, 61, 63, 65, 171, 173, 175, 219], "get_observ": [57, 59, 61, 63, 65, 218], "reset": [57, 59, 61, 63, 65, 175, 218], "initi": [57, 59, 61, 63, 65, 77, 90, 160, 175, 183, 184, 185, 186], "start_visu": [57, 59, 61, 63, 65, 218], "turn": [57, 59, 61, 63, 65], "visual": [57, 59, 61, 63, 65, 167, 168, 171, 175, 217, 218, 219], "debugg": [57, 59, 61, 63, 65], "stop_visu": [57, 59, 61, 63, 65, 218], "off": [57, 59, 61, 63, 65], "out": [57, 59, 61, 63, 65, 90, 131, 160, 181], "size": [59, 77, 90, 141], "3": [59, 165, 170, 210, 212, 219], "squar": [59, 111, 120, 121, 153, 165, 173, 219], "grid": 59, "cell": 59, "side": [59, 175], "distinct": 59, "terminal_st": 59, "occupi": 59, "time": [59, 141, 179, 181], "max_tim": 59, "allow": [59, 172], "expect": [59, 117, 164, 165, 166, 169, 170, 172, 173], "create_env_descript": [59, 218], "is_in_goal_st": [59, 218], "goal": [59, 219], "true": [59, 115, 116, 119, 154, 155, 157, 164, 165, 166, 169, 170, 172, 173, 183, 184, 185, 186, 187, 188, 202, 219], "go": [59, 219], "back": [59, 125, 127, 128, 134, 183, 184, 185], "between": [59, 106, 107, 108, 112, 114, 115, 116, 144, 146, 147, 148, 150, 152, 154, 155, 157, 169, 193, 219], "reach": 59, "next": 59, "update_posit": [59, 218], "posit": [59, 94, 97, 101, 106, 108, 114, 116, 131, 136, 142, 148, 152, 155, 165, 170, 173, 175, 219], "inform": [59, 219], "candid": [75, 76, 77, 90, 158, 160, 164, 165, 166, 169, 170, 172, 179, 181, 183, 184, 185, 186, 187, 218], "candidate_dataset": [77, 90], "n_safeti": [77, 90], "parse_tre": [77, 179, 183, 184, 185, 189, 218, 219], "primary_object": [77, 160, 161, 179, 181, 183, 184, 185], "optimization_techniqu": [77, 183, 184, 185, 219], "barrier_funct": [77, 183, 184, 185, 219], "optim": [77, 90, 131, 136, 181, 183, 184, 185, 218, 219], "powel": [77, 219], "initial_solut": [77, 90], "regim": [77, 79, 80, 82, 85, 173, 175, 176, 179, 219], "supervised_learn": [77, 79, 80, 85, 175, 176, 179, 219], "write_logfil": [77, 90, 181], "dataset": [77, 90, 145, 153, 164, 165, 166, 169, 170, 172, 176, 179, 181, 183, 184, 185, 186, 187, 188, 212, 218], "length": [77, 94, 165, 173], "safeti": [77, 90, 160, 164, 165, 166, 169, 170, 172, 177, 178, 179, 181, 183, 184, 185, 186, 187, 218], "when": [77, 164, 166, 170, 172, 175, 202, 219], "predict": [77, 94, 95, 97, 98, 99, 100, 101, 119, 125, 127, 131, 136, 144, 146, 157, 165, 166, 170, 218, 219], "confid": [77, 164, 165, 166, 168, 169, 170, 171, 172, 175, 186, 187, 188, 219], "dure": [77, 90, 131, 136, 173, 181, 183, 184, 185, 219], "parsetre": [77, 179, 183, 184, 189, 218, 219], "pars": [77, 162, 164, 167, 168, 169, 171, 173, 174, 175, 176, 179, 183, 184, 185, 189, 217, 219], "tree": [77, 162, 164, 167, 168, 169, 171, 173, 174, 175, 176, 179, 183, 184, 185, 189, 217, 218, 219], "sole": [77, 160, 183, 184, 185], "absenc": [77, 160, 183, 184, 185], "loss": [77, 118, 122, 123, 160, 183, 184, 185, 219], "str": [77, 79, 80, 83, 85, 142, 143, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 179, 181, 183, 184, 185, 186, 187, 188, 196, 197, 198, 199, 200, 202], "g": [77, 79, 80, 83, 85, 142, 143, 160, 164, 165, 166, 169, 170, 172, 175, 176, 179, 183, 184, 185, 219], "gradient_desc": [77, 183, 184, 185, 218, 219], "categori": [77, 79, 80, 85, 175, 176, 179, 215], "machin": [77, 79, 80, 85, 92, 96, 103, 164, 165, 166, 169, 170, 172, 175, 176, 179, 218, 219], "algorithm": [77, 78, 79, 80, 85, 89, 90, 91, 169, 175, 176, 179, 180, 181, 182, 183, 184, 185, 219], "reinforcement_learn": [77, 79, 80, 85, 175, 176, 179, 219], "write": [77, 90, 170, 181, 219], "output": [77, 127, 219], "calculate_batch": [77, 218], "batch_index": 77, "batch_siz": [77, 141, 160], "batch": [77, 141], "gradient": [77, 120, 121, 122, 127, 160, 161, 183, 184, 185, 186, 202, 219], "descent": [77, 160, 202, 219], "doe": [77, 141, 169, 175, 218], "anyth": 77, "instead": 77, "batch_dataset": 77, "evaluate_primary_object": [77, 179, 181, 218], "primari": [77, 160, 161, 172, 179, 181, 183, 184, 185, 186, 202, 219], "fix": [77, 165, 179, 181, 219], "input": [77, 97, 101, 141, 164, 165, 166, 169, 170, 172, 196, 197, 204, 208, 219], "numpi": [77, 90, 95, 97, 98, 99, 101, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 127, 128, 131, 134, 136, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 164, 165, 166, 169, 170, 172, 179, 181, 204, 206, 208], "evalu": [77, 131, 136, 142, 143, 164, 165, 166, 169, 170, 172, 175, 179, 181], "get_constraint_upper_bound": [77, 218], "upper": [77, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 179, 181, 219], "objective_with_barri": [77, 218], "minimization_techniqu": 77, "barrier": [77, 219], "add": [77, 131, 175], "larg": 77, "penalti": 77, "violat": [77, 175, 219], "nsf": [77, 90, 181, 219], "build": [78, 162, 174, 175, 182], "load": [78, 80, 88, 197, 198, 219], "num_datapoint": [79, 85], "meta": [79, 83, 85], "datafram": [79, 83, 85, 149, 151, 156, 164, 165, 166, 169, 170, 172, 175], "row": [79, 85, 119, 157, 166, 169, 202, 219], "rl": [79, 81, 83, 85, 175, 183, 208, 218, 219], "meta_inform": [79, 83, 85], "column": [79, 85, 119, 157, 164, 165, 166, 169, 170, 172, 175, 176, 187, 219], "load_rl_dataset_from_csv": [80, 218, 219], "filenam": [80, 88, 197, 198, 199, 200, 215, 219], "metadata_filenam": [80, 87, 219], "rldataset": [80, 218, 219], "csv": [80, 219], "episode_index": 80, "probability_of_act": 80, "load_rl_dataset_from_episode_fil": [80, 218, 219], "pickl": [80, 181, 198, 200, 219], "load_supervised_dataset": [80, 218, 219], "file_typ": 80, "superviseddataset": [80, 218, 219], "label": [80, 85, 93, 94, 95, 97, 98, 99, 100, 101, 107, 108, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 127, 131, 136, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 157, 164, 165, 166, 169, 170, 172, 181, 202, 219], "sensit": [80, 181, 187, 219], "extens": 80, "alt_reward": 81, "sub_regim": [82, 86, 173, 175, 176, 185, 187, 219], "all_col_nam": [82, 84, 86], "sensitive_col_nam": [82, 84, 86, 187], "sensitive_attr": [83, 85], "o": 83, "r": [83, 121, 122], "supervis": [84, 86, 104, 127, 173, 175, 185, 219], "feature_col_nam": 86, "label_col_nam": 86, "required_col_nam": 87, "json": [88, 197, 199, 219], "spec": [90, 181, 218], "all_frac_data_in_candidate_select": 90, "find": [90, 160, 219], "best": [90, 219], "safe": 90, "solut": [90, 160, 175, 179, 181, 202, 219], "note": [90, 219], "onli": [90, 96, 122, 136, 165, 173, 202, 219], "split": [90, 175, 181, 219], "percentag": 90, "complet": [90, 181, 218, 219], "fraction": [90, 181, 183, 184, 185, 186, 187], "being": [90, 164, 166, 170, 172], "consid": [90, 165], "bootstrap_sample_dataset": [90, 218], "n_bootstrap": 90, "bootstrap": 90, "sampl": [90, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 131, 136, 142, 143, 149, 151, 156, 165, 206, 219], "point": [90, 94, 100, 118, 123, 160, 169, 197, 198, 210, 211, 212, 219], "desir": 90, "candidate_select": [90, 181, 218], "should": [90, 219], "create_dataset": [90, 218], "frac_data_in_safeti": [90, 181, 183, 184, 185, 186, 187, 188], "shuffl": 90, "partit": [90, 219], "test": [90, 160, 164, 165, 166, 169, 170, 172, 177, 178, 179, 181, 183, 184, 185, 186, 187, 202, 218], "remain": [90, 181, 183, 184, 185, 186, 187], "est_prob_pass": [90, 218], "rho_prim": 90, "safety_dataset": [90, 179], "n_candid": [90, 165], "write_cs_logfil": [90, 181, 219], "bootstrap_it": 90, "estim": [90, 109, 113, 117, 149, 151, 156, 164, 165, 166, 170, 172, 219], "probabiilti": 90, "find_best_hyperparam": [90, 218], "indic": [90, 166, 181, 192, 219], "includ": [90, 93, 94, 100, 119, 157, 175, 219], "rtyle": 90, "tupl": [90, 175, 181, 219], "get_initial_solut": [90, 218], "soluion": 90, "get_safety_s": [90, 218], "n_total": 90, "amount": 90, "run_cor": [90, 218], "core": [90, 218], "log": [90, 122, 175, 181, 219], "passed_safeti": [90, 181, 219], "found": [90, 160, 179, 181, 219], "pass": [90, 125, 127, 128, 131, 134, 136, 139, 164, 165, 166, 169, 170, 172, 175, 179, 181, 186, 219], "run_safety_test": [90, 181, 218], "candidate_solut": [90, 181], "some": [90, 175, 181, 219], "other": [90, 170, 181, 219], "mean": [90, 107, 108, 110, 111, 112, 114, 115, 116, 118, 119, 121, 123, 142, 147, 148, 150, 152, 153, 154, 155, 156, 169, 173, 181, 210, 211, 212, 219], "safety_test": [90, 181, 218, 219], "main": [92, 174, 218], "classificationmodel": [93, 97, 101, 131, 136, 218, 219], "binari": [93, 94, 96, 107, 108, 112, 114, 115, 116, 118, 122, 147, 148, 150, 152, 154, 155], "multi": [93, 100, 107, 108, 112, 114, 115, 116, 123, 147, 148, 150, 152, 154, 155, 173], "logist": [93, 94, 100, 118, 122, 123], "regress": [93, 94, 95, 98, 99, 100, 102, 122, 169, 173, 175, 176, 185, 187, 219], "fit": [93, 94, 95, 98, 99, 100, 131, 136, 218, 219], "train": [93, 94, 95, 98, 99, 100, 219], "let": [93, 94, 100, 119, 157, 219], "datapoint": [93, 94, 100, 119, 125, 131, 136, 141, 157, 179], "j": [93, 94, 100, 117, 119, 125, 131, 136, 157, 166], "bia": [93, 94, 100, 119, 157], "term": [93, 94, 100, 119, 125, 131, 136, 157, 160], "provi": [93, 94, 100, 119, 157, 219], "k": [93, 94, 100, 119, 157, 166], "baselogisticregressionmodel": [94, 100, 218], "have": [94, 97, 100, 101, 175, 219], "linearregressionmodel": [95, 218, 219], "sever": [95, 165, 169, 219], "parent": [95, 96, 102, 103, 104, 165, 169], "assum": 95, "intercept": [95, 125, 131, 136], "nxm": [95, 98, 99], "nx1": [95, 98, 99], "origin": 95, "squash": 95, "supervisedmodel": [96, 102, 127, 218], "classif": [96, 118, 123, 147, 148, 150, 152, 154, 155, 170, 173, 175, 185, 187, 219], "support": [96, 173, 219], "classifi": [97, 101, 131, 136], "alwai": [97, 101, 160, 164, 165, 166, 169, 170, 172, 175, 219], "regardless": [97, 101, 219], "regressionmodel": [98, 99, 218, 219], "ha": [101, 107, 108, 112, 114, 115, 116, 131, 136, 170, 173, 219], "prob": [101, 131, 132, 136, 137], "error": [106, 110, 111, 120, 121, 144, 145, 146, 153, 165, 169, 173, 218, 219], "rate": [106, 107, 108, 112, 114, 115, 116, 142, 144, 146, 147, 148, 150, 152, 154, 155, 160, 170, 173, 175, 219], "whole": [106, 107, 108, 110, 111, 112, 114, 115, 116, 142, 175], "instanc": [106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 128, 134, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "probabilist": [107, 108, 144], "neg": [107, 112, 115, 147, 150, 154, 173, 175], "over": [107, 108, 109, 110, 111, 113, 117, 118, 123, 125, 131, 136, 142, 179, 219], "slightli": [107, 108, 112, 114, 115, 116], "differ": [107, 108, 112, 114, 115, 116, 169, 219], "v": [107, 108, 115, 116, 206], "averag": [108, 118, 202], "vanilla": [109, 131, 136, 219], "import": [109, 113, 117, 149, 151, 156, 160, 217, 219], "y_hat": [110, 145], "re": [112, 114, 131, 136], "decis": [113, 131, 136, 151], "pdi": [113, 151], "n": [117, 131, 141, 202, 219], "rho_i": 117, "rhosum": 117, "g_i": [117, 202, 219], "rho_j": 117, "l_i": [119, 157], "l_k": [119, 157], "wa": [119, 157, 169, 170, 175, 181, 219], "element": [119, 157], "confus": [119, 157, 166, 173], "correspond": [119, 157, 176, 207, 219], "analyt": 120, "bse": 120, "d": [120, 121, 122, 125, 128, 131, 134, 136, 139], "dtheta": [120, 121, 122, 128, 134, 139], "w": [121, 122], "t": [121, 122, 131, 136, 164, 165, 166, 169, 170, 172, 207], "vector": [121, 127, 128, 131, 134, 136, 139, 145, 149, 151, 153, 156, 160, 164, 165, 166, 169, 170, 172, 206], "mse": 121, "same": [122, 125, 127, 131, 136, 169], "supervisedsklearnbasemodel": [125, 128, 218], "regressor": 125, "scikit": [125, 127, 219], "backward_pass": [125, 127, 218], "jacobian": [125, 128, 131, 134, 136, 139], "forward_pass": [125, 127, 131, 136, 218], "_i": [125, 131, 136, 219], "dtheta_": [125, 131], "keep": [125, 175], "mind": 125, "henc": 125, "create_model": [125, 127, 218], "make": [125, 175, 202, 219], "get_model_param": [125, 127, 218], "arg": [125, 127, 215], "flatten": [125, 127, 131], "1d": [125, 127, 131, 136], "do": [125, 127, 128, 134, 136, 139, 218], "forward": [125, 127, 128, 131, 134, 136, 139], "through": [125, 127, 128, 134, 136, 139, 169, 175, 179], "sklearn": [125, 127, 128, 131, 134, 136, 139], "pred_numpi": [125, 127], "rtype": [125, 127, 136], "update_model_param": [125, 127, 218], "reshap": [125, 127], "external_grad": 127, "backward": [127, 128, 134, 139], "respect": 127, "obtain": [128, 134, 139, 161], "pred": [128, 134, 136, 139], "result": [128, 131, 134, 136, 139, 219], "inherit": [128, 166, 170, 172, 219], "fn": [128, 134, 139], "repres": [128, 134, 139, 164, 167, 168, 173, 175, 219], "oper": [128, 134, 139, 164, 168, 218, 219], "rf_kwarg": 131, "forest": 131, "leaf": [131, 136, 164, 167, 168, 179], "node": [131, 136, 173, 175, 176, 179, 183, 184, 185, 218, 219], "built": [131, 136, 175, 183, 184, 185, 186, 219], "randomforestclassifi": 131, "n_tree": 131, "has_intercept": [131, 136], "params_upd": [131, 136], "intern": [131, 136, 168, 219], "flag": [131, 136, 160, 186, 187, 188, 200, 212, 219], "around": [131, 136], "assign": [131, 175], "id": [131, 136], "sublist": 131, "left": [131, 136, 171, 175, 219], "right": [131, 136, 171, 175, 219], "flattend": 131, "probabilit": 131, "postiv": 131, "get_jacobian": [131, 136, 218], "sum_k": 131, "forward_k": 131, "comput": [131, 136, 160, 161, 169, 170, 172, 175, 183, 184, 185], "separ": [131, 219], "horizont": 131, "stack": 131, "them": 131, "front": 131, "isn": [131, 136], "get_leaf_node_prob": [131, 136, 218], "autograd": [131, 136, 160, 161, 183, 184, 185, 186, 204], "primit": [131, 136], "workaround": [131, 136], "sinc": [131, 136], "our": [131, 136, 219], "involv": [131, 136], "extern": [131, 136], "librari": [131, 136, 160, 161, 218, 219], "set_leaf_node_valu": [131, 136, 218], "categor": [131, 219], "seldonianrandomforest": [134, 218], "dt_kwarg": 136, "decisiontreeclassifi": 136, "probs_pos_class": 136, "leaf_nodes_hit": 136, "were": 136, "hit": 136, "These": [136, 168, 172, 219], "need": [136, 169, 171, 175, 176, 182, 219], "dtheta_j": 136, "actual": [136, 141, 165, 219], "seldoniandecisiontre": [139, 218], "func": 141, "num_batch": 141, "up": [141, 169, 175, 219], "statistic_nam": [142, 143], "data_dict": [142, 143, 164, 165, 166, 169, 170, 172], "statist": [142, 143, 164, 170, 173, 219], "fpr": [142, 143, 164, 173, 219], "accuraci": [144, 173], "correct": [144, 146, 206], "weighted_return": [149, 151, 156], "unweight": 149, "pre": [149, 151, 156], "present": [149, 151, 156, 169, 175], "wi": 156, "n_constraint": 160, "upper_bounds_funct": [160, 161], "theta_init": 160, "lambda_init": [160, 183, 184, 185], "batch_calcul": 160, "n_batch": 160, "n_epoch": 160, "alpha_theta": [160, 183, 184, 185], "05": [160, 164, 165, 166, 169, 170, 172, 219], "alpha_lamb": [160, 183, 184, 185], "beta_veloc": [160, 183, 184, 185], "9": [160, 183, 184, 185, 208, 219], "beta_rmsprop": [160, 183, 184, 185], "gradient_librari": [160, 161, 183, 184, 185], "clip_theta": 160, "verbos": [160, 183, 184, 185, 186, 187, 188, 199, 200], "simultan": 160, "ascent": 160, "adam": [160, 183, 184, 185, 219], "lagrangian": [160, 202, 219], "l": [160, 181, 202, 219], "lambda": [160, 219], "f": [160, 169, 181, 202, 219], "lagrang": [160, 202], "multipli": [160, 175, 202], "done": 160, "saddl": 160, "Being": 160, "part": [160, 219], "No": [160, 219], "decai": 160, "veloc": 160, "rmsprop": 160, "num_it": [160, 183, 184, 185], "iter": [160, 169, 219], "automat": [160, 161], "boolean": [160, 173, 186, 187, 188, 200, 212, 219], "control": [160, 186, 187, 188, 212, 219], "lower": [164, 165, 166, 167, 168, 169, 170, 171, 172, 175], "inf": [164, 165, 166, 168, 169, 170, 172], "conditional_column": [164, 165, 166, 169, 170, 172], "measur": [164, 166, 170, 172, 173, 175, 179, 219], "condit": [164, 165, 166, 169, 170, 172, 175, 176], "node_typ": [164, 167], "equal": [164, 175, 176, 179, 219], "base_nod": 164, "delta": [164, 165, 166, 169, 170, 172, 175, 176, 186, 187, 188, 219], "share": [164, 165, 169], "put": [164, 165, 169], "measure_function_nam": 164, "measure_funct": [164, 219], "calculate_bound": [164, 165, 166, 169, 170, 172, 218], "bound_method": [164, 165, 166, 169, 170, 172], "calculate_data_forbound": [164, 165, 166, 169, 170, 172, 218], "prepar": [164, 165, 166, 170, 172], "calculate_valu": [164, 165, 166, 169, 170, 172, 218], "etc": [164, 166, 168, 169, 170, 172], "compute_hc_lowerbound": [164, 165, 166, 169, 170, 172, 218], "datas": [164, 165, 166, 169, 170, 172], "high": [164, 165, 166, 169, 170, 172], "level": [164, 165, 166, 169, 170, 172, 175, 219], "compute_hc_upper_and_lowerbound": [164, 165, 166, 169, 170, 172, 218], "compute_hc_upperbound": [164, 165, 166, 169, 170, 172, 218], "independ": [164, 165, 166, 169, 170, 172, 219], "mask_data": [164, 165, 166, 169, 170, 172, 218], "mask": [164, 165, 166, 169, 170, 172], "joint": [164, 165, 166, 169, 170, 172], "AND": [164, 165, 166, 169, 170, 172], "predict_hc_lowerbound": [164, 165, 166, 169, 170, 172, 218], "predict_hc_upper_and_lowerbound": [164, 165, 166, 169, 170, 172, 218], "predict_hc_upperbound": [164, 165, 166, 169, 170, 172, 218], "zhat": [164, 165, 166, 169, 170, 172, 218], "unbias": [164, 165, 166, 170, 172], "basenod": [165, 166, 169, 170, 172, 218], "custom": [165, 169, 173, 204, 219], "cvar_alpha": 165, "definit": [165, 219], "least": [165, 219], "var_alpha": 165, "largest": 165, "thoma": [165, 169], "miller": 165, "2019": [165, 169], "thomas2019": 165, "theorem": 165, "threshold": [165, 186, 187, 188], "cvar": 165, "sort": 165, "b": [165, 173, 175], "cm_true_index": 166, "cm_pred_index": 166, "c_00": 166, "c_01": 166, "c_0k": 166, "______": 166, "_____": 166, "c_10": 166, "c_11": 166, "c_1k": 166, "c_k0": 166, "c_k1": 166, "c_kk": 166, "constant": [167, 175, 208, 219], "constant_nod": 167, "represent": [167, 168, 171, 173], "what": [167, 168, 171, 218], "displai": [167, 168, 171, 175, 202], "insid": [167, 168, 171], "box": [167, 168, 171, 219], "graph": [167, 168, 171, 175, 217], "non": 168, "perform": [168, 173, 219], "wise": 169, "male": [169, 219], "femal": [169, 219], "et": 169, "al": 169, "www": [169, 207], "scienc": 169, "org": 169, "stoken": 169, "author": 169, "token": 169, "st": 169, "119": 169, "full": [169, 202, 219], "figur": [169, 202, 219], "precalculate_data": [169, 218], "preconfigur": 169, "so": [169, 172, 175, 219], "recalcul": 169, "panda": 169, "y_i": 169, "y_hat_i": 169, "m": [169, 175, 219], "y_j": 169, "y_hat_j": 169, "There": [169, 172, 175, 219], "mai": [169, 196, 219], "n_male": 169, "n_femal": 169, "class_index": 170, "against": 170, "one": [170, 172, 173, 175, 183, 184, 185, 186, 219], "thei": [170, 173, 202, 219], "fpr_": 170, "will_lower_bound": 171, "will_upper_bound": 171, "alt_reward_numb": 172, "altern": 172, "besid": 172, "second": [172, 219], "j_pi_new_": 172, "global": 173, "construct": [173, 219], "measure_functions_dict": [173, 218], "appear": [173, 175, 219], "recogn": 173, "special": [173, 219], "organ": 173, "sub": [173, 175, 176, 219], "pr": [173, 175, 219], "nr": 173, "tpr": [173, 219], "fnr": 173, "tnr": 173, "acc": 173, "cm": 173, "relev": [173, 202], "mean_error": [173, 175, 218], "mean_squared_error": [173, 218, 219], "reinforc": [173, 219], "j_pi_new": [173, 219], "custom_base_node_dict": [173, 218], "map": 173, "op_mapp": [173, 218], "ast": [173, 175], "not_supported_op_mapp": [173, 218], "bounds_required_dict": [173, 218], "requir": [173, 175, 184, 217, 219], "If": [173, 175, 183, 184, 185, 186, 217, 218, 219], "two": [173, 175, 219], "children": [173, 175], "like": [173, 175, 219], "need_a_low": 173, "need_a_upp": 173, "need_b_low": 173, "need_b_upp": 173, "ml": [175, 219], "user": [175, 219], "appropri": 175, "root": [175, 179], "constraint_str": [175, 176, 186, 187, 188], "express": [175, 219], "n_node": 175, "n_base_nod": 175, "more": [175, 219], "onc": [175, 219], "contribut": 175, "base_node_dict": 175, "track": 175, "uniqu": 175, "been": [175, 219], "alreadi": [175, 219], "help": [175, 207], "handl": 175, "case": [175, 192, 219], "duplic": [175, 189], "node_fonts": 175, "fontsiz": 175, "graphviz": [175, 217], "available_measure_funct": 175, "_ab": [175, 218], "absolut": [175, 219], "interv": 175, "_add": [175, 218], "_assign_bounds_help": [175, 218], "lower_need": 175, "upper_need": 175, "travers": 175, "_assign_deltas_help": [175, 218], "weight_method": 175, "_ast2pt_nod": [175, 218], "ast_nod": 175, "_ast_tree_help": [175, 218], "recurs": 175, "_div": [175, 218], "divid": 175, "_evaluator_help": [175, 218], "_exp": [175, 218], "_log": [175, 218], "_max": [175, 218], "_min": [175, 218], "_mult": [175, 218], "_pow": [175, 218], "pow": 175, "_preprocess_constraint_str": [175, 218], "inequ": [175, 219], "move": 175, "everyth": 175, "final": 175, "form": [175, 219], "sure": 175, "mathemat": [175, 219], "written": [175, 219], "python": [175, 207, 217, 219], "syntax": 175, "_propagate_valu": [175, 218], "propag": [175, 179, 218], "_propagator_help": [175, 218], "_protect_nan": [175, 218], "bound_typ": 175, "nan": 175, "infin": 175, "postit": 175, "_sub": [175, 218], "subract": 175, "assign_bounds_need": [175, 218], "breadth": 175, "search": 175, "decid": 175, "eventu": 175, "necessari": [175, 219], "end": [175, 219], "care": 175, "assign_delta": [175, 218], "among": 175, "build_tre": [175, 218], "delta_weight_method": [175, 176], "create_from_ast": [175, 218], "structur": 175, "evaluate_constraint": [175, 218], "itself": 175, "postord": 175, "logic": 175, "make_viz": [175, 218], "titl": 175, "diagram": 175, "top": [175, 219], "make_viz_help": [175, 218], "edg": 175, "digraph": 175, "propagate_bound": [175, 218], "reset_base_node_dict": [175, 218], "reset_data": 175, "less": [175, 179, 219], "frequent": 175, "defult": 176, "classifict": 176, "across": 176, "batch_size_safeti": [179, 181, 183, 184, 185], "loop": 179, "introspect": 181, "candidate_safety_split": [181, 218], "f_c": 181, "f_": 181, "l_c": 181, "l_": 181, "s_c": 181, "s_": 181, "detail": [181, 219], "branch": 181, "either": [181, 219], "get_cs_result": [181, 218], "get_st_upper_bound": [181, 218], "upper_bounds_dict": 181, "kei": [181, 219], "initial_solution_fn": [183, 184, 185, 186], "base_node_bound_method_dict": [183, 184, 185], "use_builtin_primary_gradient_fn": [183, 184, 185, 186], "custom_primary_gradient_fn": [183, 184, 185], "optimization_hyperparam": [183, 184, 185, 219], "005": [183, 184, 185], "95": [183, 184, 185], "hyper_search": [183, 184, 185], "200": [183, 184, 185], "use_batch": [183, 185], "regularization_hyperparam": [183, 184, 185], "rl_model": [183, 186, 218, 219], "exist": [183, 184, 185, 186], "fall": [183, 184, 185], "builtin": [183, 184, 185], "regular": [183, 184, 185], "save_dir": [186, 187, 188], "mani": [186, 188], "later": [186, 188], "chang": [186, 188, 202], "directori": [186, 187, 188, 196, 219], "pkl": [186, 187, 188, 219], "glag": [186, 187, 188], "supervisedspec": [187, 188, 218, 219], "without": 187, "metadata_pth": 188, "array_in": 192, "argmax": 192, "multipl": [192, 219], "tie": 192, "val_in": 193, "min_val": 193, "max_val": 193, "limit": 193, "output_str": 194, "indent": 199, "abl": 200, "primary_objective_nam": [202, 219], "plot_running_avg": 202, "savenam": 202, "png": 202, "show": [202, 219], "evolut": [202, 219], "One": [202, 219], "subplot": [202, 219], "repeat": [202, 219], "plot": [202, 219], "ii": 202, "lambda_i": [202, 219], "iii": 202, "iv": 202, "lagranian": 202, "sum_i": 202, "plt": 202, "cumprod": 204, "work": [204, 219], "sourc": [204, 218], "github": [204, 218], "com": [204, 207], "hip": 204, "issu": 204, "257": 204, "cumul": 204, "product": 204, "standard": [206, 210, 211, 212], "deviat": [206, 210, 211, 212], "bessel": 206, "nu": 207, "invers": [207, 219], "student": 207, "cdf": 207, "degre": 207, "freedom": 207, "matlab": 207, "mathwork": 207, "stat": 207, "html": 207, "arr": 208, "num_point": [210, 211, 212], "loc_x": [210, 211, 212], "loc_i": [210, 211, 212], "sigma_x": [210, 211, 212], "sigma_i": [210, 211, 212], "clip_min": [210, 212], "clip_max": [210, 212], "2d": [210, 211, 212], "distribut": [210, 211, 212], "clip": [210, 212], "option": [212, 219], "msg": 215, "lineno": 215, "seldonian": [217, 219], "pip": 217, "Then": 217, "system": 217, "wide": 217, "recommend": 217, "welcom": 218, "toolkit": [218, 219], "code": [218, 219], "host": 218, "overview": 218, "interfac": 218, "sa": 218, "start": [218, 219], "instal": 218, "tutori": [218, 219], "api": [218, 219], "fourier": 218, "discrete_random_ag": 218, "function_approxim": 218, "linear_fa": 218, "linear_state_action_value_fa": 218, "construct_q_table_from_env_descript": 218, "parameterized_non_learning_softmax_ag": 218, "discretesoftmax": [218, 219], "mixedsoftmax": 218, "keyboard_gridworld": 218, "mountain_car_rough_solut": 218, "check_space_typ": 218, "continuous_spac": 218, "rl_generate_dataset_and_spec_fil": 218, "get_constraint_str": 218, "get_env_kwarg": 218, "get_metadata_path": 218, "print_return_info": 218, "rl_runner": 218, "create_agent_fromdict": 218, "run_episod": 218, "run_episode_from_dict": 218, "run_trial_given_agent_and_env": 218, "mountaincar": 218, "n_step_mountaincar": 218, "simglucose_env": 218, "simglucos": 218, "generate_gridworld_episod": 218, "generate_mountaincar_episod": 218, "generate_simglucose_episod": 218, "get_max_ob": 218, "hyperparams_and_set": 218, "define_hyperparameter_and_setting_dict": 218, "candidateselect": [218, 219], "load_rl_metadata": 218, "load_supervised_metadata": 218, "datasetload": [218, 219], "rlmetadata": 218, "supervisedmetadata": 218, "hyperparam_search": 218, "hyperparamsearch": 218, "binarylogisticregressionmodel": 218, "boundedlinearregressionmodel": 218, "dummyclassifiermodel": 218, "linearregressionmodellistfeatur": 218, "multiclasslogisticregressionmodel": 218, "randomclassifiermodel": 218, "error_r": 218, "false_negative_r": 218, "false_positive_r": 218, "is_estim": 218, "negative_r": 218, "pdis_estim": 218, "positive_r": 218, "true_negative_r": 218, "true_positive_r": 218, "wis_estim": 218, "binary_logistic_loss": 218, "confusion_matrix": 218, "gradient_bounded_squared_error": 218, "gradient_mean_squared_error": 218, "gradient_binary_logistic_loss": 218, "multiclass_logistic_loss": 218, "sklearn_lr": 218, "sklearnlinearregressor": 218, "sklearn_model": 218, "sklearn_predict_vjp": 218, "skrandomforest_model": 218, "probs2theta": 218, "sigmoid": 218, "sktree_model": 218, "zhat_func": 218, "batcher": 218, "evaluate_statist": 218, "sample_from_statist": 218, "vector_accuraci": 218, "vector_error": 218, "vector_error_r": 218, "vector_false_negative_r": 218, "vector_false_positive_r": 218, "vector_is_estim": 218, "vector_negative_r": 218, "vector_pdis_estim": 218, "vector_positive_r": 218, "vector_squared_error": 218, "vector_true_negative_r": 218, "vector_true_positive_r": 218, "vector_wis_estim": 218, "vector_confusion_matrix": 218, "gradient_descent_adam": 218, "setup_gradi": 218, "cvarsqebasenod": 218, "confusionmatrixbasenod": 218, "constantnod": 218, "internalnod": 218, "medcustombasenod": 218, "multiclassbasenod": 218, "rlaltrewardbasenod": 218, "make_parse_trees_from_constraint": 218, "safetytest": [218, 219], "seldonian_algorithm": [218, 219], "seldonianalgorithm": [218, 219], "createrlspec": [218, 219], "createsimplesupervisedspec": 218, "createsupervisedspec": [218, 219], "validate_parse_tre": 218, "util": [218, 219], "rl_util": 218, "argmax_multi": 218, "clamp": 218, "io_util": [218, 219], "dir_path": 218, "load_json": 218, "load_pickl": [218, 219], "save_json": 218, "save_pickl": 218, "plot_util": [218, 219], "plot_gradient_desc": [218, 219], "stats_util": 218, "custom_cumprod": 218, "stddev": 218, "tinv": 218, "weighted_sum_gamma": 218, "tutorial_util": 218, "generate_clipped_data": 218, "generate_data": 218, "make_synthetic_regression_dataset": 218, "warn": 218, "custom_warn": 218, "custom_formatwarn": 218, "document": 219, "homepag": 219, "In": 219, "page": 219, "few": 219, "hand": 219, "illustr": 219, "simul": 219, "realist": 219, "most": 219, "piec": 219, "cover": 219, "could": 219, "unifi": 219, "pattern": 219, "concept": 219, "conceptu": 219, "enforc": 219, "develop": 219, "design": 219, "applic": 219, "command": 219, "line": 219, "graphic": 219, "short": 219, "underli": 219, "discuss": 219, "below": 219, "well": 219, "manual": 219, "loader": 219, "comma": 219, "header": 219, "numer": 219, "might": 219, "look": 219, "622": 219, "491": 219, "56": 219, "439": 219, "93": 219, "707": 219, "64": 219, "663": 219, "65": 219, "557": 219, "09": 219, "711": 219, "37": 219, "731": 219, "31": 219, "509": 219, "33333": 219, "538": 219, "490": 219, "58": 219, "406": 219, "59": 219, "529": 219, "532": 219, "28": 219, "447": 219, "23": 219, "527": 219, "379": 219, "14": 219, "488": 219, "98333": 219, "455": 219, "18": 219, "440": 219, "570": 219, "86": 219, "417": 219, "54": 219, "453": 219, "53": 219, "425": 219, "87": 219, "475": 219, "63": 219, "476": 219, "11": 219, "407": 219, "15": 219, "97333": 219, "756": 219, "91": 219, "679": 219, "62": 219, "531": 219, "583": 219, "534": 219, "42": 219, "521": 219, "592": 219, "41": 219, "783": 219, "76": 219, "588": 219, "26": 219, "53333": 219, "hot": 219, "10": 219, "integ": 219, "25": 219, "intention": 219, "exclud": 219, "your": 219, "problem": 219, "label_column": 219, "try": 219, "sensitive_column": 219, "biggest": 219, "logisticregressionmodel": 219, "essenti": 219, "wrap": 219, "linearregress": 219, "unless": 219, "own": 219, "know": 219, "though": 219, "chosen": 219, "explicitli": 219, "thing": 219, "extend": 219, "py": 219, "_": 219, "directli": 219, "often": 219, "five": 219, "follow": 219, "math": 219, "nativ": 219, "ab": 219, "exp": 219, "239": 219, "trigger": 219, "open": 219, "ad": 219, "quantiti": 219, "It": 219, "someth": 219, "wai": 219, "wrote": 219, "instruct": 219, "recal": 219, "leq": 219, "satisfi": 219, "howev": 219, "cumbersom": 219, "symbol": 219, "interpret": 219, "ident": 219, "themselv": 219, "tri": 219, "basic": 219, "plain": 219, "english": 219, "88": 219, "greater": 219, "commonli": 219, "fair": 219, "filter": 219, "atr1": 219, "atr2": 219, "placehold": 219, "parenthes": 219, "surround": 219, "statement": 219, "sai": 219, "r1": 219, "r2": 219, "stand": 219, "race": 219, "subject": 219, "demograph": 219, "pariti": 219, "toler": 219, "ratio": 219, "dispar": 219, "impact": 219, "anoth": 219, "permit": 219, "belong": 219, "bundl": 219, "shown": 219, "block": 219, "At": 219, "broad": 219, "scope": 219, "throught": 219, "now": 219, "happen": 219, "even": 219, "small": 219, "techniqu": 219, "black": 219, "cost": 219, "forc": 219, "toward": 219, "feasibl": 219, "cg": 219, "nelder": 219, "mead": 219, "bfg": 219, "cma": 219, "scipi": 219, "minim": 219, "solver": 219, "covari": 219, "adapt": 219, "strategi": 219, "kkt": 219, "situat": 219, "contraint": 219, "conflict": 219, "oscil": 219, "boundari": 219, "dampen": 219, "momentum": 219, "mitig": 219, "accept": 219, "hat": 219, "mathcal": 219, "ran": 219, "convent": 219, "candidate_selection_log": 219, "increas": 219, "overwritten": 219, "log_fil": 219, "candidate_selection_log0": 219, "cs_dict": 219, "produc": 219, "1500": 219, "red": 219, "area": 219, "middl": 219, "region": 219, "dot": 219, "its": 219, "deem": 219, "assembl": 219, "interact": 219}, "objects": {"": [[0, 0, 0, "-", "seldonian"]], "seldonian": [[1, 0, 0, "-", "RL"], [75, 0, 0, "-", "candidate_selection"], [78, 0, 0, "-", "dataset"], [89, 0, 0, "-", "hyperparam_search"], [91, 0, 0, "-", "models"], [158, 0, 0, "-", "optimizers"], [162, 0, 0, "-", "parse_tree"], [177, 0, 0, "-", "safety_test"], [180, 0, 0, "-", "seldonian_algorithm"], [182, 0, 0, "-", "spec"], [190, 0, 0, "-", "utils"], [213, 0, 0, "-", "warnings"]], "seldonian.RL": [[2, 0, 0, "-", "Agents"], [34, 0, 0, "-", "Env_Description"], [41, 0, 0, "-", "RL_generate_dataset_and_spec_file"], [47, 0, 0, "-", "RL_model"], [49, 0, 0, "-", "RL_runner"], [55, 0, 0, "-", "environments"], [66, 0, 0, "-", "generate_gridworld_episodes"], [68, 0, 0, "-", "generate_mountaincar_episodes"], [70, 0, 0, "-", "generate_simglucose_episodes"], [73, 0, 0, "-", "hyperparams_and_settings"]], "seldonian.RL.Agents": [[3, 0, 0, "-", "Agent"], [5, 0, 0, "-", "Bases"], [8, 0, 0, "-", "Discrete_Random_Agent"], [10, 0, 0, "-", "Function_Approximators"], [20, 0, 0, "-", "Parameterized_non_learning_softmax_agent"], [22, 0, 0, "-", "Policies"], [30, 0, 0, "-", "keyboard_gridworld"], [32, 0, 0, "-", "mountain_car_rough_solution"]], "seldonian.RL.Agents.Agent": [[4, 1, 1, "", "Agent"]], "seldonian.RL.Agents.Agent.Agent": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "__repr__"], [4, 2, 1, "", "choose_action"], [4, 2, 1, "", "get_params"], [4, 2, 1, "", "get_prob_this_action"], [4, 2, 1, "", "set_new_params"], [4, 2, 1, "", "update"]], "seldonian.RL.Agents.Bases": [[6, 0, 0, "-", "Fourier"]], "seldonian.RL.Agents.Bases.Fourier": [[7, 1, 1, "", "Fourier"]], "seldonian.RL.Agents.Bases.Fourier.Fourier": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "__repr__"], [7, 2, 1, "", "calculate_num_features"], [7, 2, 1, "", "construct_basis_matrix"], [7, 2, 1, "", "get_features"], [7, 2, 1, "", "get_normalized_observation"]], "seldonian.RL.Agents.Discrete_Random_Agent": [[9, 1, 1, "", "Discrete_Random_Agent"]], "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "__repr__"], [9, 2, 1, "", "choose_action"], [9, 2, 1, "", "get_params"], [9, 2, 1, "", "get_prob_this_action"], [9, 2, 1, "", "set_new_params"], [9, 2, 1, "", "update"]], "seldonian.RL.Agents.Function_Approximators": [[11, 0, 0, "-", "Function_Approximator"], [13, 0, 0, "-", "Linear_FA"], [16, 0, 0, "-", "Table"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator": [[12, 1, 1, "", "Function_Approximator"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "__repr__"], [12, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA": [[14, 1, 1, "", "Linear_FA"], [15, 1, 1, "", "Linear_state_action_value_FA"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "__repr__"], [14, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "__repr__"], [15, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Table": [[17, 1, 1, "", "Q_Table"], [18, 1, 1, "", "Table"], [19, 3, 1, "", "construct_Q_Table_From_Env_Description"]], "seldonian.RL.Agents.Function_Approximators.Table.Q_Table": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "__repr__"], [17, 2, 1, "", "from_environment_state_to_0_indexed_state"], [17, 2, 1, "", "get_action_values_given_state"], [17, 2, 1, "", "get_action_values_given_zero_indexed_state"], [17, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Function_Approximators.Table.Table": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "__repr__"], [18, 2, 1, "", "from_environment_state_to_0_indexed_state"], [18, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent": [[21, 1, 1, "", "Parameterized_non_learning_softmax_agent"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "__repr__"], [21, 2, 1, "", "choose_action"], [21, 2, 1, "", "get_action_values"], [21, 2, 1, "", "get_params"], [21, 2, 1, "", "get_prob_this_action"], [21, 2, 1, "", "set_new_params"], [21, 2, 1, "", "update"]], "seldonian.RL.Agents.Policies": [[23, 0, 0, "-", "Policy"], [26, 0, 0, "-", "Softmax"]], "seldonian.RL.Agents.Policies.Policy": [[24, 1, 1, "", "Discrete_Action_Policy"], [25, 1, 1, "", "Policy"]], "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "__repr__"], [24, 2, 1, "", "choose_action"], [24, 2, 1, "", "construct_basis_and_linear_FA"], [24, 2, 1, "", "from_0_indexed_action_to_environment_action"], [24, 2, 1, "", "from_environment_action_to_0_indexed_action"], [24, 2, 1, "", "get_action_values_given_state"], [24, 2, 1, "", "get_params"], [24, 2, 1, "", "get_prob_this_action"], [24, 2, 1, "", "make_state_action_FA"], [24, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Policy.Policy": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "__repr__"], [25, 2, 1, "", "choose_action"], [25, 2, 1, "", "get_params"], [25, 2, 1, "", "get_prob_this_action"], [25, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Softmax": [[27, 1, 1, "", "DiscreteSoftmax"], [28, 1, 1, "", "MixedSoftmax"], [29, 1, 1, "", "Softmax"]], "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "__repr__"], [27, 2, 1, "", "_arg"], [27, 2, 1, "", "_denom"], [27, 2, 1, "", "choose_action"], [27, 2, 1, "", "choose_action_from_action_values"], [27, 2, 1, "", "construct_basis_and_linear_FA"], [27, 2, 1, "", "from_0_indexed_action_to_environment_action"], [27, 2, 1, "", "from_environment_action_to_0_indexed_action"], [27, 2, 1, "", "get_action_probs_from_action_values"], [27, 2, 1, "", "get_action_values_given_state"], [27, 2, 1, "", "get_e_to_the_something_terms"], [27, 2, 1, "", "get_params"], [27, 2, 1, "", "get_prob_this_action"], [27, 2, 1, "", "make_state_action_FA"], [27, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "__repr__"], [28, 2, 1, "", "choose_action"], [28, 2, 1, "", "choose_action_from_action_values"], [28, 2, 1, "", "construct_basis_and_linear_FA"], [28, 2, 1, "", "from_0_indexed_action_to_environment_action"], [28, 2, 1, "", "from_environment_action_to_0_indexed_action"], [28, 2, 1, "", "get_action_probs_from_action_values"], [28, 2, 1, "", "get_action_values_given_state"], [28, 2, 1, "", "get_e_to_the_something_terms"], [28, 2, 1, "", "get_params"], [28, 2, 1, "", "get_prob_this_action"], [28, 2, 1, "", "make_state_action_FA"], [28, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.Policies.Softmax.Softmax": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "__repr__"], [29, 2, 1, "", "choose_action"], [29, 2, 1, "", "choose_action_from_action_values"], [29, 2, 1, "", "construct_basis_and_linear_FA"], [29, 2, 1, "", "from_0_indexed_action_to_environment_action"], [29, 2, 1, "", "from_environment_action_to_0_indexed_action"], [29, 2, 1, "", "get_action_probs_from_action_values"], [29, 2, 1, "", "get_action_values_given_state"], [29, 2, 1, "", "get_e_to_the_something_terms"], [29, 2, 1, "", "get_params"], [29, 2, 1, "", "get_prob_this_action"], [29, 2, 1, "", "make_state_action_FA"], [29, 2, 1, "", "set_new_params"]], "seldonian.RL.Agents.keyboard_gridworld": [[31, 1, 1, "", "Keyboard_gridworld"]], "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "__repr__"], [31, 2, 1, "", "choose_action"], [31, 2, 1, "", "get_params"], [31, 2, 1, "", "get_prob_this_action"], [31, 2, 1, "", "set_new_params"], [31, 2, 1, "", "update"]], "seldonian.RL.Agents.mountain_car_rough_solution": [[33, 1, 1, "", "Mountain_car_rough_solution"]], "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution": [[33, 2, 1, "", "__init__"], [33, 2, 1, "", "__repr__"], [33, 2, 1, "", "choose_action"], [33, 2, 1, "", "get_params"], [33, 2, 1, "", "get_prob_this_action"], [33, 2, 1, "", "set_new_params"], [33, 2, 1, "", "update"]], "seldonian.RL.Env_Description": [[35, 0, 0, "-", "Env_Description"], [38, 0, 0, "-", "Spaces"]], "seldonian.RL.Env_Description.Env_Description": [[36, 1, 1, "", "Env_Description"], [37, 3, 1, "", "check_space_type"]], "seldonian.RL.Env_Description.Env_Description.Env_Description": [[36, 2, 1, "", "__init__"], [36, 2, 1, "", "__repr__"], [36, 2, 1, "", "get_min_action"], [36, 2, 1, "", "get_min_state"], [36, 2, 1, "", "get_num_actions"], [36, 2, 1, "", "get_num_observation_dims"], [36, 2, 1, "", "get_num_states"]], "seldonian.RL.Env_Description.Spaces": [[39, 1, 1, "", "Continuous_Space"], [40, 1, 1, "", "Discrete_Space"]], "seldonian.RL.Env_Description.Spaces.Continuous_Space": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "__repr__"], [39, 2, 1, "", "check_bounds_valid"], [39, 2, 1, "", "get_num_dims"]], "seldonian.RL.Env_Description.Spaces.Discrete_Space": [[40, 2, 1, "", "__init__"], [40, 2, 1, "", "__repr__"], [40, 2, 1, "", "get_num_values"]], "seldonian.RL.RL_generate_dataset_and_spec_file": [[42, 3, 1, "", "get_constraint_string"], [43, 3, 1, "", "get_env_kwargs"], [44, 3, 1, "", "get_metadata_path"], [45, 3, 1, "", "main"], [46, 3, 1, "", "print_return_info"]], "seldonian.RL.RL_model": [[48, 1, 1, "", "RL_model"]], "seldonian.RL.RL_model.RL_model": [[48, 2, 1, "", "__init__"], [48, 2, 1, "", "__repr__"], [48, 2, 1, "", "get_prob_this_action"], [48, 2, 1, "", "get_probs_from_observations_and_actions"]], "seldonian.RL.RL_runner": [[50, 3, 1, "", "create_agent_fromdict"], [51, 3, 1, "", "run_episode"], [52, 3, 1, "", "run_episode_from_dict"], [53, 3, 1, "", "run_trial"], [54, 3, 1, "", "run_trial_given_agent_and_env"]], "seldonian.RL.environments": [[56, 0, 0, "-", "Environment"], [58, 0, 0, "-", "gridworld"], [60, 0, 0, "-", "mountaincar"], [62, 0, 0, "-", "n_step_mountaincar"], [64, 0, 0, "-", "simglucose_env"]], "seldonian.RL.environments.Environment": [[57, 1, 1, "", "Environment"]], "seldonian.RL.environments.Environment.Environment": [[57, 2, 1, "", "__init__"], [57, 2, 1, "", "__repr__"], [57, 2, 1, "", "get_env_description"], [57, 2, 1, "", "get_observation"], [57, 2, 1, "", "reset"], [57, 2, 1, "", "start_visualizing"], [57, 2, 1, "", "stop_visualizing"], [57, 2, 1, "", "terminated"], [57, 2, 1, "", "transition"], [57, 2, 1, "", "visualize"]], "seldonian.RL.environments.gridworld": [[59, 1, 1, "", "Gridworld"]], "seldonian.RL.environments.gridworld.Gridworld": [[59, 2, 1, "", "__init__"], [59, 2, 1, "", "__repr__"], [59, 2, 1, "", "create_env_description"], [59, 2, 1, "", "get_env_description"], [59, 2, 1, "", "get_observation"], [59, 2, 1, "", "is_in_goal_state"], [59, 2, 1, "", "reset"], [59, 2, 1, "", "start_visualizing"], [59, 2, 1, "", "stop_visualizing"], [59, 2, 1, "", "terminated"], [59, 2, 1, "", "transition"], [59, 2, 1, "", "update_position"], [59, 2, 1, "", "visualize"]], "seldonian.RL.environments.mountaincar": [[61, 1, 1, "", "Mountaincar"]], "seldonian.RL.environments.mountaincar.Mountaincar": [[61, 2, 1, "", "__init__"], [61, 2, 1, "", "__repr__"], [61, 2, 1, "", "get_env_description"], [61, 2, 1, "", "get_observation"], [61, 2, 1, "", "reset"], [61, 2, 1, "", "start_visualizing"], [61, 2, 1, "", "stop_visualizing"], [61, 2, 1, "", "terminated"], [61, 2, 1, "", "transition"], [61, 2, 1, "", "visualize"]], "seldonian.RL.environments.n_step_mountaincar": [[63, 1, 1, "", "N_step_mountaincar"]], "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "__repr__"], [63, 2, 1, "", "get_env_description"], [63, 2, 1, "", "get_observation"], [63, 2, 1, "", "reset"], [63, 2, 1, "", "start_visualizing"], [63, 2, 1, "", "stop_visualizing"], [63, 2, 1, "", "terminated"], [63, 2, 1, "", "transition"], [63, 2, 1, "", "visualize"]], "seldonian.RL.environments.simglucose_env": [[65, 1, 1, "", "Simglucose"]], "seldonian.RL.environments.simglucose_env.Simglucose": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "__repr__"], [65, 2, 1, "", "get_env_description"], [65, 2, 1, "", "get_observation"], [65, 2, 1, "", "reset"], [65, 2, 1, "", "start_visualizing"], [65, 2, 1, "", "stop_visualizing"], [65, 2, 1, "", "terminated"], [65, 2, 1, "", "transition"], [65, 2, 1, "", "visualize"]], "seldonian.RL.generate_gridworld_episodes": [[67, 3, 1, "", "main"]], "seldonian.RL.generate_mountaincar_episodes": [[69, 3, 1, "", "main"]], "seldonian.RL.generate_simglucose_episodes": [[71, 3, 1, "", "get_max_obs"], [72, 3, 1, "", "main"]], "seldonian.RL.hyperparams_and_settings": [[74, 3, 1, "", "define_hyperparameter_and_setting_dict"]], "seldonian.candidate_selection": [[76, 0, 0, "-", "candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[77, 1, 1, "", "CandidateSelection"]], "seldonian.candidate_selection.candidate_selection.CandidateSelection": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "__repr__"], [77, 2, 1, "", "calculate_batches"], [77, 2, 1, "", "evaluate_primary_objective"], [77, 2, 1, "", "get_constraint_upper_bounds"], [77, 2, 1, "", "objective_with_barrier"], [77, 2, 1, "", "run"]], "seldonian.dataset": [[79, 1, 1, "", "DataSet"], [80, 1, 1, "", "DataSetLoader"], [81, 1, 1, "", "Episode"], [82, 1, 1, "", "MetaData"], [83, 1, 1, "", "RLDataSet"], [84, 1, 1, "", "RLMetaData"], [85, 1, 1, "", "SupervisedDataSet"], [86, 1, 1, "", "SupervisedMetaData"], [87, 3, 1, "", "load_RL_metadata"], [88, 3, 1, "", "load_supervised_metadata"]], "seldonian.dataset.DataSet": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "__repr__"]], "seldonian.dataset.DataSetLoader": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "__repr__"], [80, 2, 1, "", "load_RL_dataset_from_csv"], [80, 2, 1, "", "load_RL_dataset_from_episode_file"], [80, 2, 1, "", "load_supervised_dataset"]], "seldonian.dataset.Episode": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__repr__"]], "seldonian.dataset.MetaData": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "__repr__"]], "seldonian.dataset.RLDataSet": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "__repr__"]], "seldonian.dataset.RLMetaData": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__repr__"]], "seldonian.dataset.SupervisedDataSet": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "__repr__"]], "seldonian.dataset.SupervisedMetaData": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "__repr__"]], "seldonian.hyperparam_search": [[90, 1, 1, "", "HyperparamSearch"]], "seldonian.hyperparam_search.HyperparamSearch": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "__repr__"], [90, 2, 1, "", "bootstrap_sample_dataset"], [90, 2, 1, "", "candidate_selection"], [90, 2, 1, "", "create_dataset"], [90, 2, 1, "", "est_prob_pass"], [90, 2, 1, "", "find_best_hyperparams"], [90, 2, 1, "", "get_initial_solution"], [90, 2, 1, "", "get_safety_size"], [90, 2, 1, "", "run_core"], [90, 2, 1, "", "run_safety_test"], [90, 2, 1, "", "safety_test"]], "seldonian.models": [[92, 0, 0, "-", "models"], [105, 0, 0, "-", "objectives"], [124, 0, 0, "-", "sklearn_lr"], [126, 0, 0, "-", "sklearn_model"], [129, 0, 0, "-", "trees"], [140, 0, 0, "-", "zhat_funcs"]], "seldonian.models.models": [[93, 1, 1, "", "BaseLogisticRegressionModel"], [94, 1, 1, "", "BinaryLogisticRegressionModel"], [95, 1, 1, "", "BoundedLinearRegressionModel"], [96, 1, 1, "", "ClassificationModel"], [97, 1, 1, "", "DummyClassifierModel"], [98, 1, 1, "", "LinearRegressionModel"], [99, 1, 1, "", "LinearRegressionModelListFeatures"], [100, 1, 1, "", "MultiClassLogisticRegressionModel"], [101, 1, 1, "", "RandomClassifierModel"], [102, 1, 1, "", "RegressionModel"], [103, 1, 1, "", "SeldonianModel"], [104, 1, 1, "", "SupervisedModel"]], "seldonian.models.models.BaseLogisticRegressionModel": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "__repr__"], [93, 2, 1, "", "fit"]], "seldonian.models.models.BinaryLogisticRegressionModel": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "__repr__"], [94, 2, 1, "", "fit"], [94, 2, 1, "", "predict"]], "seldonian.models.models.BoundedLinearRegressionModel": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "__repr__"], [95, 2, 1, "", "fit"], [95, 2, 1, "", "predict"]], "seldonian.models.models.ClassificationModel": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "__repr__"]], "seldonian.models.models.DummyClassifierModel": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "__repr__"], [97, 2, 1, "", "predict"]], "seldonian.models.models.LinearRegressionModel": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "__repr__"], [98, 2, 1, "", "fit"], [98, 2, 1, "", "predict"]], "seldonian.models.models.LinearRegressionModelListFeatures": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "__repr__"], [99, 2, 1, "", "fit"], [99, 2, 1, "", "predict"]], "seldonian.models.models.MultiClassLogisticRegressionModel": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "__repr__"], [100, 2, 1, "", "fit"], [100, 2, 1, "", "predict"]], "seldonian.models.models.RandomClassifierModel": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "__repr__"], [101, 2, 1, "", "predict"]], "seldonian.models.models.RegressionModel": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "__repr__"]], "seldonian.models.models.SeldonianModel": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "__repr__"]], "seldonian.models.models.SupervisedModel": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "__repr__"]], "seldonian.models.objectives": [[106, 3, 1, "", "Error_Rate"], [107, 3, 1, "", "False_Negative_Rate"], [108, 3, 1, "", "False_Positive_Rate"], [109, 3, 1, "", "IS_estimate"], [110, 3, 1, "", "Mean_Error"], [111, 3, 1, "", "Mean_Squared_Error"], [112, 3, 1, "", "Negative_Rate"], [113, 3, 1, "", "PDIS_estimate"], [114, 3, 1, "", "Positive_Rate"], [115, 3, 1, "", "True_Negative_Rate"], [116, 3, 1, "", "True_Positive_Rate"], [117, 3, 1, "", "WIS_estimate"], [118, 3, 1, "", "binary_logistic_loss"], [119, 3, 1, "", "confusion_matrix"], [120, 3, 1, "", "gradient_Bounded_Squared_Error"], [121, 3, 1, "", "gradient_Mean_Squared_Error"], [122, 3, 1, "", "gradient_binary_logistic_loss"], [123, 3, 1, "", "multiclass_logistic_loss"]], "seldonian.models.sklearn_lr": [[125, 1, 1, "", "SkLearnLinearRegressor"]], "seldonian.models.sklearn_lr.SkLearnLinearRegressor": [[125, 2, 1, "", "__init__"], [125, 2, 1, "", "__repr__"], [125, 2, 1, "", "backward_pass"], [125, 2, 1, "", "create_model"], [125, 2, 1, "", "forward_pass"], [125, 2, 1, "", "get_model_params"], [125, 2, 1, "", "predict"], [125, 2, 1, "", "update_model_params"]], "seldonian.models.sklearn_model": [[127, 1, 1, "", "SupervisedSkLearnBaseModel"], [128, 3, 1, "", "sklearn_predict_vjp"]], "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel": [[127, 2, 1, "", "__init__"], [127, 2, 1, "", "__repr__"], [127, 2, 1, "", "backward_pass"], [127, 2, 1, "", "create_model"], [127, 2, 1, "", "forward_pass"], [127, 2, 1, "", "get_model_params"], [127, 2, 1, "", "predict"], [127, 2, 1, "", "update_model_params"]], "seldonian.models.trees": [[130, 0, 0, "-", "skrandomforest_model"], [135, 0, 0, "-", "sktree_model"]], "seldonian.models.trees.skrandomforest_model": [[131, 1, 1, "", "SeldonianRandomForest"], [132, 3, 1, "", "probs2theta"], [133, 3, 1, "", "sigmoid"], [134, 3, 1, "", "sklearn_predict_vjp"]], "seldonian.models.trees.skrandomforest_model.SeldonianRandomForest": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "__repr__"], [131, 2, 1, "", "fit"], [131, 2, 1, "", "forward_pass"], [131, 2, 1, "", "get_jacobian"], [131, 2, 1, "", "get_leaf_node_probs"], [131, 2, 1, "", "predict"], [131, 2, 1, "", "set_leaf_node_values"]], "seldonian.models.trees.sktree_model": [[136, 1, 1, "", "SeldonianDecisionTree"], [137, 3, 1, "", "probs2theta"], [138, 3, 1, "", "sigmoid"], [139, 3, 1, "", "sklearn_predict_vjp"]], "seldonian.models.trees.sktree_model.SeldonianDecisionTree": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "__repr__"], [136, 2, 1, "", "fit"], [136, 2, 1, "", "forward_pass"], [136, 2, 1, "", "get_jacobian"], [136, 2, 1, "", "get_leaf_node_probs"], [136, 2, 1, "", "predict"], [136, 2, 1, "", "set_leaf_node_values"]], "seldonian.models.zhat_funcs": [[141, 3, 1, "", "batcher"], [142, 3, 1, "", "evaluate_statistic"], [143, 3, 1, "", "sample_from_statistic"], [144, 3, 1, "", "vector_Accuracy"], [145, 3, 1, "", "vector_Error"], [146, 3, 1, "", "vector_Error_Rate"], [147, 3, 1, "", "vector_False_Negative_Rate"], [148, 3, 1, "", "vector_False_Positive_Rate"], [149, 3, 1, "", "vector_IS_estimate"], [150, 3, 1, "", "vector_Negative_Rate"], [151, 3, 1, "", "vector_PDIS_estimate"], [152, 3, 1, "", "vector_Positive_Rate"], [153, 3, 1, "", "vector_Squared_Error"], [154, 3, 1, "", "vector_True_Negative_Rate"], [155, 3, 1, "", "vector_True_Positive_Rate"], [156, 3, 1, "", "vector_WIS_estimate"], [157, 3, 1, "", "vector_confusion_matrix"]], "seldonian.optimizers": [[159, 0, 0, "-", "gradient_descent"]], "seldonian.optimizers.gradient_descent": [[160, 3, 1, "", "gradient_descent_adam"], [161, 3, 1, "", "setup_gradients"]], "seldonian.parse_tree": [[163, 0, 0, "-", "nodes"], [173, 0, 0, "-", "operators"], [174, 0, 0, "-", "parse_tree"]], "seldonian.parse_tree.nodes": [[164, 1, 1, "", "BaseNode"], [165, 1, 1, "", "CVaRSQeBaseNode"], [166, 1, 1, "", "ConfusionMatrixBaseNode"], [167, 1, 1, "", "ConstantNode"], [168, 1, 1, "", "InternalNode"], [169, 1, 1, "", "MEDCustomBaseNode"], [170, 1, 1, "", "MultiClassBaseNode"], [171, 1, 1, "", "Node"], [172, 1, 1, "", "RLAltRewardBaseNode"]], "seldonian.parse_tree.nodes.BaseNode": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "__repr__"], [164, 2, 1, "", "calculate_bounds"], [164, 2, 1, "", "calculate_data_forbound"], [164, 2, 1, "", "calculate_value"], [164, 2, 1, "", "compute_HC_lowerbound"], [164, 2, 1, "", "compute_HC_upper_and_lowerbound"], [164, 2, 1, "", "compute_HC_upperbound"], [164, 2, 1, "", "mask_data"], [164, 2, 1, "", "predict_HC_lowerbound"], [164, 2, 1, "", "predict_HC_upper_and_lowerbound"], [164, 2, 1, "", "predict_HC_upperbound"], [164, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.CVaRSQeBaseNode": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "__repr__"], [165, 2, 1, "", "calculate_bounds"], [165, 2, 1, "", "calculate_data_forbound"], [165, 2, 1, "", "calculate_value"], [165, 2, 1, "", "compute_HC_lowerbound"], [165, 2, 1, "", "compute_HC_upper_and_lowerbound"], [165, 2, 1, "", "compute_HC_upperbound"], [165, 2, 1, "", "mask_data"], [165, 2, 1, "", "predict_HC_lowerbound"], [165, 2, 1, "", "predict_HC_upper_and_lowerbound"], [165, 2, 1, "", "predict_HC_upperbound"], [165, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "__repr__"], [166, 2, 1, "", "calculate_bounds"], [166, 2, 1, "", "calculate_data_forbound"], [166, 2, 1, "", "calculate_value"], [166, 2, 1, "", "compute_HC_lowerbound"], [166, 2, 1, "", "compute_HC_upper_and_lowerbound"], [166, 2, 1, "", "compute_HC_upperbound"], [166, 2, 1, "", "mask_data"], [166, 2, 1, "", "predict_HC_lowerbound"], [166, 2, 1, "", "predict_HC_upper_and_lowerbound"], [166, 2, 1, "", "predict_HC_upperbound"], [166, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.ConstantNode": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.InternalNode": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.MEDCustomBaseNode": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "__repr__"], [169, 2, 1, "", "calculate_bounds"], [169, 2, 1, "", "calculate_data_forbound"], [169, 2, 1, "", "calculate_value"], [169, 2, 1, "", "compute_HC_lowerbound"], [169, 2, 1, "", "compute_HC_upper_and_lowerbound"], [169, 2, 1, "", "compute_HC_upperbound"], [169, 2, 1, "", "mask_data"], [169, 2, 1, "", "precalculate_data"], [169, 2, 1, "", "predict_HC_lowerbound"], [169, 2, 1, "", "predict_HC_upper_and_lowerbound"], [169, 2, 1, "", "predict_HC_upperbound"], [169, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.MultiClassBaseNode": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "__repr__"], [170, 2, 1, "", "calculate_bounds"], [170, 2, 1, "", "calculate_data_forbound"], [170, 2, 1, "", "calculate_value"], [170, 2, 1, "", "compute_HC_lowerbound"], [170, 2, 1, "", "compute_HC_upper_and_lowerbound"], [170, 2, 1, "", "compute_HC_upperbound"], [170, 2, 1, "", "mask_data"], [170, 2, 1, "", "predict_HC_lowerbound"], [170, 2, 1, "", "predict_HC_upper_and_lowerbound"], [170, 2, 1, "", "predict_HC_upperbound"], [170, 2, 1, "", "zhat"]], "seldonian.parse_tree.nodes.Node": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "__repr__"]], "seldonian.parse_tree.nodes.RLAltRewardBaseNode": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "__repr__"], [172, 2, 1, "", "calculate_bounds"], [172, 2, 1, "", "calculate_data_forbound"], [172, 2, 1, "", "calculate_value"], [172, 2, 1, "", "compute_HC_lowerbound"], [172, 2, 1, "", "compute_HC_upper_and_lowerbound"], [172, 2, 1, "", "compute_HC_upperbound"], [172, 2, 1, "", "mask_data"], [172, 2, 1, "", "predict_HC_lowerbound"], [172, 2, 1, "", "predict_HC_upper_and_lowerbound"], [172, 2, 1, "", "predict_HC_upperbound"], [172, 2, 1, "", "zhat"]], "seldonian.parse_tree.operators": [[173, 4, 1, "", "bounds_required_dict"], [173, 4, 1, "", "custom_base_node_dict"], [173, 4, 1, "", "measure_functions_dict"], [173, 4, 1, "", "not_supported_op_mapper"], [173, 4, 1, "", "op_mapper"]], "seldonian.parse_tree.parse_tree": [[175, 1, 1, "", "ParseTree"], [176, 3, 1, "", "make_parse_trees_from_constraints"]], "seldonian.parse_tree.parse_tree.ParseTree": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "__repr__"], [175, 2, 1, "", "_abs"], [175, 2, 1, "", "_add"], [175, 2, 1, "", "_assign_bounds_helper"], [175, 2, 1, "", "_assign_deltas_helper"], [175, 2, 1, "", "_ast2pt_node"], [175, 2, 1, "", "_ast_tree_helper"], [175, 2, 1, "", "_div"], [175, 2, 1, "", "_evaluator_helper"], [175, 2, 1, "", "_exp"], [175, 2, 1, "", "_log"], [175, 2, 1, "", "_max"], [175, 2, 1, "", "_min"], [175, 2, 1, "", "_mult"], [175, 2, 1, "", "_pow"], [175, 2, 1, "", "_preprocess_constraint_str"], [175, 2, 1, "", "_propagate_value"], [175, 2, 1, "", "_propagator_helper"], [175, 2, 1, "", "_protect_nan"], [175, 2, 1, "", "_sub"], [175, 2, 1, "", "assign_bounds_needed"], [175, 2, 1, "", "assign_deltas"], [175, 2, 1, "", "build_tree"], [175, 2, 1, "", "create_from_ast"], [175, 2, 1, "", "evaluate_constraint"], [175, 2, 1, "", "make_viz"], [175, 2, 1, "", "make_viz_helper"], [175, 2, 1, "", "propagate"], [175, 2, 1, "", "propagate_bounds"], [175, 2, 1, "", "reset_base_node_dict"]], "seldonian.safety_test": [[178, 0, 0, "-", "safety_test"]], "seldonian.safety_test.safety_test": [[179, 1, 1, "", "SafetyTest"]], "seldonian.safety_test.safety_test.SafetyTest": [[179, 2, 1, "", "__init__"], [179, 2, 1, "", "__repr__"], [179, 2, 1, "", "evaluate_primary_objective"], [179, 2, 1, "", "run"]], "seldonian.seldonian_algorithm": [[181, 1, 1, "", "SeldonianAlgorithm"]], "seldonian.seldonian_algorithm.SeldonianAlgorithm": [[181, 2, 1, "", "__init__"], [181, 2, 1, "", "__repr__"], [181, 2, 1, "", "candidate_safety_split"], [181, 2, 1, "", "candidate_selection"], [181, 2, 1, "", "evaluate_primary_objective"], [181, 2, 1, "", "get_cs_result"], [181, 2, 1, "", "get_st_upper_bounds"], [181, 2, 1, "", "run"], [181, 2, 1, "", "run_safety_test"], [181, 2, 1, "", "safety_test"]], "seldonian.spec": [[183, 1, 1, "", "RLSpec"], [184, 1, 1, "", "Spec"], [185, 1, 1, "", "SupervisedSpec"], [186, 3, 1, "", "createRLSpec"], [187, 3, 1, "", "createSimpleSupervisedSpec"], [188, 3, 1, "", "createSupervisedSpec"], [189, 3, 1, "", "validate_parse_trees"]], "seldonian.spec.RLSpec": [[183, 2, 1, "", "__init__"], [183, 2, 1, "", "__repr__"]], "seldonian.spec.Spec": [[184, 2, 1, "", "__init__"], [184, 2, 1, "", "__repr__"]], "seldonian.spec.SupervisedSpec": [[185, 2, 1, "", "__init__"], [185, 2, 1, "", "__repr__"]], "seldonian.utils": [[191, 0, 0, "-", "RL_utils"], [195, 0, 0, "-", "io_utils"], [201, 0, 0, "-", "plot_utils"], [203, 0, 0, "-", "stats_utils"], [209, 0, 0, "-", "tutorial_utils"]], "seldonian.utils.RL_utils": [[192, 3, 1, "", "argmax_multi"], [193, 3, 1, "", "clamp"], [194, 3, 1, "", "error"]], "seldonian.utils.io_utils": [[196, 3, 1, "", "dir_path"], [197, 3, 1, "", "load_json"], [198, 3, 1, "", "load_pickle"], [199, 3, 1, "", "save_json"], [200, 3, 1, "", "save_pickle"]], "seldonian.utils.plot_utils": [[202, 3, 1, "", "plot_gradient_descent"]], "seldonian.utils.stats_utils": [[204, 3, 1, "", "custom_cumprod"], [205, 3, 1, "", "softmax"], [206, 3, 1, "", "stddev"], [207, 3, 1, "", "tinv"], [208, 3, 1, "", "weighted_sum_gamma"]], "seldonian.utils.tutorial_utils": [[210, 3, 1, "", "generate_clipped_data"], [211, 3, 1, "", "generate_data"], [212, 3, 1, "", "make_synthetic_regression_dataset"]], "seldonian.warnings": [[214, 0, 0, "-", "custom_warnings"]], "seldonian.warnings.custom_warnings": [[215, 3, 1, "", "custom_formatwarning"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"seldonian": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218], "rl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "agent": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "base": [5, 6, 7], "fourier": [6, 7], "discrete_random_ag": [8, 9], "function_approxim": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "linear_fa": [13, 14, 15], "linear_state_action_value_fa": 15, "tabl": [16, 17, 18, 19, 218], "q_tabl": 17, "construct_q_table_from_env_descript": 19, "parameterized_non_learning_softmax_ag": [20, 21], "polici": [22, 23, 24, 25, 26, 27, 28, 29], "discrete_action_polici": 24, "softmax": [26, 27, 28, 29, 205], "discretesoftmax": 27, "mixedsoftmax": 28, "keyboard_gridworld": [30, 31], "mountain_car_rough_solut": [32, 33], "env_descript": [34, 35, 36, 37, 38, 39, 40], "check_space_typ": 37, "space": [38, 39, 40], "continuous_spac": 39, "discrete_spac": 40, "rl_generate_dataset_and_spec_fil": [41, 42, 43, 44, 45, 46], "get_constraint_str": 42, "get_env_kwarg": 43, "get_metadata_path": 44, "main": [45, 67, 69, 72], "print_return_info": 46, "rl_model": [47, 48], "rl_runner": [49, 50, 51, 52, 53, 54], "create_agent_fromdict": 50, "run_episod": 51, "run_episode_from_dict": 52, "run_trial": 53, "run_trial_given_agent_and_env": 54, "environ": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "gridworld": [58, 59], "mountaincar": [60, 61], "n_step_mountaincar": [62, 63], "simglucose_env": [64, 65], "simglucos": 65, "generate_gridworld_episod": [66, 67], "generate_mountaincar_episod": [68, 69], "generate_simglucose_episod": [70, 71, 72], "get_max_ob": 71, "hyperparams_and_set": [73, 74], "define_hyperparameter_and_setting_dict": 74, "candidate_select": [75, 76, 77], "candidateselect": 77, "dataset": [78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 219], "datasetload": 80, "episod": 81, "metadata": 82, "rldataset": 83, "rlmetadata": 84, "superviseddataset": 85, "supervisedmetadata": 86, "load_rl_metadata": 87, "load_supervised_metadata": 88, "hyperparam_search": [89, 90], "hyperparamsearch": 90, "model": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 219], "baselogisticregressionmodel": 93, "binarylogisticregressionmodel": 94, "boundedlinearregressionmodel": 95, "classificationmodel": 96, "dummyclassifiermodel": 97, "linearregressionmodel": 98, "linearregressionmodellistfeatur": 99, "multiclasslogisticregressionmodel": 100, "randomclassifiermodel": 101, "regressionmodel": 102, "seldonianmodel": 103, "supervisedmodel": 104, "object": [105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 219], "error_r": 106, "false_negative_r": 107, "false_positive_r": 108, "is_estim": 109, "mean_error": 110, "mean_squared_error": 111, "negative_r": 112, "pdis_estim": 113, "positive_r": 114, "true_negative_r": 115, "true_positive_r": 116, "wis_estim": 117, "binary_logistic_loss": 118, "confusion_matrix": 119, "gradient_bounded_squared_error": 120, "gradient_mean_squared_error": 121, "gradient_binary_logistic_loss": 122, "multiclass_logistic_loss": 123, "sklearn_lr": [124, 125], "sklearnlinearregressor": 125, "sklearn_model": [126, 127, 128], "supervisedsklearnbasemodel": 127, "sklearn_predict_vjp": [128, 134, 139], "tree": [129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "skrandomforest_model": [130, 131, 132, 133, 134], "seldonianrandomforest": 131, "probs2theta": [132, 137], "sigmoid": [133, 138], "sktree_model": [135, 136, 137, 138, 139], "seldoniandecisiontre": 136, "zhat_func": [140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "batcher": 141, "evaluate_statist": 142, "sample_from_statist": 143, "vector_accuraci": 144, "vector_error": 145, "vector_error_r": 146, "vector_false_negative_r": 147, "vector_false_positive_r": 148, "vector_is_estim": 149, "vector_negative_r": 150, "vector_pdis_estim": 151, "vector_positive_r": 152, "vector_squared_error": 153, "vector_true_negative_r": 154, "vector_true_positive_r": 155, "vector_wis_estim": 156, "vector_confusion_matrix": 157, "optim": [158, 159, 160, 161], "gradient_desc": [159, 160, 161], "gradient_descent_adam": 160, "setup_gradi": 161, "parse_tre": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176], "node": [163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "basenod": 164, "cvarsqebasenod": 165, "confusionmatrixbasenod": 166, "constantnod": 167, "internalnod": 168, "medcustombasenod": 169, "multiclassbasenod": 170, "rlaltrewardbasenod": 172, "oper": 173, "parsetre": 175, "make_parse_trees_from_constraint": 176, "safety_test": [177, 178, 179], "safetytest": 179, "seldonian_algorithm": [180, 181], "seldonianalgorithm": 181, "spec": [182, 183, 184, 185, 186, 187, 188, 189, 219], "rlspec": 183, "supervisedspec": 185, "createrlspec": 186, "createsimplesupervisedspec": 187, "createsupervisedspec": 188, "validate_parse_tre": 189, "util": [190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212], "rl_util": [191, 192, 193, 194], "argmax_multi": 192, "clamp": 193, "error": 194, "io_util": [195, 196, 197, 198, 199, 200], "dir_path": 196, "load_json": 197, "load_pickl": 198, "save_json": 199, "save_pickl": 200, "plot_util": [201, 202], "plot_gradient_desc": 202, "stats_util": [203, 204, 205, 206, 207, 208], "custom_cumprod": 204, "stddev": 206, "tinv": 207, "weighted_sum_gamma": 208, "tutorial_util": [209, 210, 211, 212], "generate_clipped_data": 210, "generate_data": 211, "make_synthetic_regression_dataset": 212, "warn": [213, 214, 215], "custom_warn": [214, 215], "custom_formatwarn": 215, "api": 216, "get": 217, "start": 217, "instal": 217, "A": 217, "first": 217, "tutori": 217, "engin": 218, "document": 218, "content": 218, "overview": 219, "interfac": 219, "behavior": 219, "constraint": 219, "string": 219, "what": 219, "doe": 219, "sa": 219, "run": 219, "do": 219, "candid": 219, "select": 219, "safeti": 219, "test": 219}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 58}, "alltitles": {"seldonian": [[0, "module-seldonian"]], "seldonian.RL": [[1, "module-seldonian.RL"]], "seldonian.RL.Agents": [[2, "module-seldonian.RL.Agents"]], "seldonian.RL.Agents.Agent": [[3, "module-seldonian.RL.Agents.Agent"]], "seldonian.RL.Agents.Agent.Agent": [[4, "seldonian-rl-agents-agent-agent"]], "seldonian.RL.Agents.Bases": [[5, "module-seldonian.RL.Agents.Bases"]], "seldonian.RL.Agents.Bases.Fourier": [[6, "module-seldonian.RL.Agents.Bases.Fourier"]], "seldonian.RL.Agents.Bases.Fourier.Fourier": [[7, "seldonian-rl-agents-bases-fourier-fourier"]], "seldonian.RL.Agents.Discrete_Random_Agent": [[8, "module-seldonian.RL.Agents.Discrete_Random_Agent"]], "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent": [[9, "seldonian-rl-agents-discrete-random-agent-discrete-random-agent"]], "seldonian.RL.Agents.Function_Approximators": [[10, "module-seldonian.RL.Agents.Function_Approximators"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator": [[11, "module-seldonian.RL.Agents.Function_Approximators.Function_Approximator"]], "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator": [[12, "seldonian-rl-agents-function-approximators-function-approximator-function-approximator"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA": [[13, "module-seldonian.RL.Agents.Function_Approximators.Linear_FA"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA": [[14, "seldonian-rl-agents-function-approximators-linear-fa-linear-fa"]], "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA": [[15, "seldonian-rl-agents-function-approximators-linear-fa-linear-state-action-value-fa"]], "seldonian.RL.Agents.Function_Approximators.Table": [[16, "module-seldonian.RL.Agents.Function_Approximators.Table"]], "seldonian.RL.Agents.Function_Approximators.Table.Q_Table": [[17, "seldonian-rl-agents-function-approximators-table-q-table"]], "seldonian.RL.Agents.Function_Approximators.Table.Table": [[18, "seldonian-rl-agents-function-approximators-table-table"]], "seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description": [[19, "seldonian-rl-agents-function-approximators-table-construct-q-table-from-env-description"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent": [[20, "module-seldonian.RL.Agents.Parameterized_non_learning_softmax_agent"]], "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent": [[21, "seldonian-rl-agents-parameterized-non-learning-softmax-agent-parameterized-non-learning-softmax-agent"]], "seldonian.RL.Agents.Policies": [[22, "module-seldonian.RL.Agents.Policies"]], "seldonian.RL.Agents.Policies.Policy": [[23, "module-seldonian.RL.Agents.Policies.Policy"]], "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy": [[24, "seldonian-rl-agents-policies-policy-discrete-action-policy"]], "seldonian.RL.Agents.Policies.Policy.Policy": [[25, "seldonian-rl-agents-policies-policy-policy"]], "seldonian.RL.Agents.Policies.Softmax": [[26, "module-seldonian.RL.Agents.Policies.Softmax"]], "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax": [[27, "seldonian-rl-agents-policies-softmax-discretesoftmax"]], "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax": [[28, "seldonian-rl-agents-policies-softmax-mixedsoftmax"]], "seldonian.RL.Agents.Policies.Softmax.Softmax": [[29, "seldonian-rl-agents-policies-softmax-softmax"]], "seldonian.RL.Agents.keyboard_gridworld": [[30, "module-seldonian.RL.Agents.keyboard_gridworld"]], "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld": [[31, "seldonian-rl-agents-keyboard-gridworld-keyboard-gridworld"]], "seldonian.RL.Agents.mountain_car_rough_solution": [[32, "module-seldonian.RL.Agents.mountain_car_rough_solution"]], "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution": [[33, "seldonian-rl-agents-mountain-car-rough-solution-mountain-car-rough-solution"]], "seldonian.RL.Env_Description": [[34, "module-seldonian.RL.Env_Description"]], "seldonian.RL.Env_Description.Env_Description": [[35, "module-seldonian.RL.Env_Description.Env_Description"]], "seldonian.RL.Env_Description.Env_Description.Env_Description": [[36, "seldonian-rl-env-description-env-description-env-description"]], "seldonian.RL.Env_Description.Env_Description.check_space_type": [[37, "seldonian-rl-env-description-env-description-check-space-type"]], "seldonian.RL.Env_Description.Spaces": [[38, "module-seldonian.RL.Env_Description.Spaces"]], "seldonian.RL.Env_Description.Spaces.Continuous_Space": [[39, "seldonian-rl-env-description-spaces-continuous-space"]], "seldonian.RL.Env_Description.Spaces.Discrete_Space": [[40, "seldonian-rl-env-description-spaces-discrete-space"]], "seldonian.RL.RL_generate_dataset_and_spec_file": [[41, "module-seldonian.RL.RL_generate_dataset_and_spec_file"]], "seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string": [[42, "seldonian-rl-rl-generate-dataset-and-spec-file-get-constraint-string"]], "seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs": [[43, "seldonian-rl-rl-generate-dataset-and-spec-file-get-env-kwargs"]], "seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path": [[44, "seldonian-rl-rl-generate-dataset-and-spec-file-get-metadata-path"]], "seldonian.RL.RL_generate_dataset_and_spec_file.main": [[45, "seldonian-rl-rl-generate-dataset-and-spec-file-main"]], "seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info": [[46, "seldonian-rl-rl-generate-dataset-and-spec-file-print-return-info"]], "seldonian.RL.RL_model": [[47, "module-seldonian.RL.RL_model"]], "seldonian.RL.RL_model.RL_model": [[48, "seldonian-rl-rl-model-rl-model"]], "seldonian.RL.RL_runner": [[49, "module-seldonian.RL.RL_runner"]], "seldonian.RL.RL_runner.create_agent_fromdict": [[50, "seldonian-rl-rl-runner-create-agent-fromdict"]], "seldonian.RL.RL_runner.run_episode": [[51, "seldonian-rl-rl-runner-run-episode"]], "seldonian.RL.RL_runner.run_episode_from_dict": [[52, "seldonian-rl-rl-runner-run-episode-from-dict"]], "seldonian.RL.RL_runner.run_trial": [[53, "seldonian-rl-rl-runner-run-trial"]], "seldonian.RL.RL_runner.run_trial_given_agent_and_env": [[54, "seldonian-rl-rl-runner-run-trial-given-agent-and-env"]], "seldonian.RL.environments": [[55, "module-seldonian.RL.environments"]], "seldonian.RL.environments.Environment": [[56, "module-seldonian.RL.environments.Environment"]], "seldonian.RL.environments.Environment.Environment": [[57, "seldonian-rl-environments-environment-environment"]], "seldonian.RL.environments.gridworld": [[58, "module-seldonian.RL.environments.gridworld"]], "seldonian.RL.environments.gridworld.Gridworld": [[59, "seldonian-rl-environments-gridworld-gridworld"]], "seldonian.RL.environments.mountaincar": [[60, "module-seldonian.RL.environments.mountaincar"]], "seldonian.RL.environments.mountaincar.Mountaincar": [[61, "seldonian-rl-environments-mountaincar-mountaincar"]], "seldonian.RL.environments.n_step_mountaincar": [[62, "module-seldonian.RL.environments.n_step_mountaincar"]], "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar": [[63, "seldonian-rl-environments-n-step-mountaincar-n-step-mountaincar"]], "seldonian.RL.environments.simglucose_env": [[64, "module-seldonian.RL.environments.simglucose_env"]], "seldonian.RL.environments.simglucose_env.Simglucose": [[65, "seldonian-rl-environments-simglucose-env-simglucose"]], "seldonian.RL.generate_gridworld_episodes": [[66, "module-seldonian.RL.generate_gridworld_episodes"]], "seldonian.RL.generate_gridworld_episodes.main": [[67, "seldonian-rl-generate-gridworld-episodes-main"]], "seldonian.RL.generate_mountaincar_episodes": [[68, "module-seldonian.RL.generate_mountaincar_episodes"]], "seldonian.RL.generate_mountaincar_episodes.main": [[69, "seldonian-rl-generate-mountaincar-episodes-main"]], "seldonian.RL.generate_simglucose_episodes": [[70, "module-seldonian.RL.generate_simglucose_episodes"]], "seldonian.RL.generate_simglucose_episodes.get_max_obs": [[71, "seldonian-rl-generate-simglucose-episodes-get-max-obs"]], "seldonian.RL.generate_simglucose_episodes.main": [[72, "seldonian-rl-generate-simglucose-episodes-main"]], "seldonian.RL.hyperparams_and_settings": [[73, "module-seldonian.RL.hyperparams_and_settings"]], "seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict": [[74, "seldonian-rl-hyperparams-and-settings-define-hyperparameter-and-setting-dict"]], "seldonian.candidate_selection": [[75, "module-seldonian.candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[76, "module-seldonian.candidate_selection.candidate_selection"]], "seldonian.candidate_selection.candidate_selection.CandidateSelection": [[77, "seldonian-candidate-selection-candidate-selection-candidateselection"]], "seldonian.dataset": [[78, "module-seldonian.dataset"]], "seldonian.dataset.DataSet": [[79, "seldonian-dataset-dataset"]], "seldonian.dataset.DataSetLoader": [[80, "seldonian-dataset-datasetloader"]], "seldonian.dataset.Episode": [[81, "seldonian-dataset-episode"]], "seldonian.dataset.MetaData": [[82, "seldonian-dataset-metadata"]], "seldonian.dataset.RLDataSet": [[83, "seldonian-dataset-rldataset"]], "seldonian.dataset.RLMetaData": [[84, "seldonian-dataset-rlmetadata"]], "seldonian.dataset.SupervisedDataSet": [[85, "seldonian-dataset-superviseddataset"]], "seldonian.dataset.SupervisedMetaData": [[86, "seldonian-dataset-supervisedmetadata"]], "seldonian.dataset.load_RL_metadata": [[87, "seldonian-dataset-load-rl-metadata"]], "seldonian.dataset.load_supervised_metadata": [[88, "seldonian-dataset-load-supervised-metadata"]], "seldonian.hyperparam_search": [[89, "module-seldonian.hyperparam_search"]], "seldonian.hyperparam_search.HyperparamSearch": [[90, "seldonian-hyperparam-search-hyperparamsearch"]], "seldonian.models": [[91, "module-seldonian.models"]], "seldonian.models.models": [[92, "module-seldonian.models.models"]], "seldonian.models.models.BaseLogisticRegressionModel": [[93, "seldonian-models-models-baselogisticregressionmodel"]], "seldonian.models.models.BinaryLogisticRegressionModel": [[94, "seldonian-models-models-binarylogisticregressionmodel"]], "seldonian.models.models.BoundedLinearRegressionModel": [[95, "seldonian-models-models-boundedlinearregressionmodel"]], "seldonian.models.models.ClassificationModel": [[96, "seldonian-models-models-classificationmodel"]], "seldonian.models.models.DummyClassifierModel": [[97, "seldonian-models-models-dummyclassifiermodel"]], "seldonian.models.models.LinearRegressionModel": [[98, "seldonian-models-models-linearregressionmodel"]], "seldonian.models.models.LinearRegressionModelListFeatures": [[99, "seldonian-models-models-linearregressionmodellistfeatures"]], "seldonian.models.models.MultiClassLogisticRegressionModel": [[100, "seldonian-models-models-multiclasslogisticregressionmodel"]], "seldonian.models.models.RandomClassifierModel": [[101, "seldonian-models-models-randomclassifiermodel"]], "seldonian.models.models.RegressionModel": [[102, "seldonian-models-models-regressionmodel"]], "seldonian.models.models.SeldonianModel": [[103, "seldonian-models-models-seldonianmodel"]], "seldonian.models.models.SupervisedModel": [[104, "seldonian-models-models-supervisedmodel"]], "seldonian.models.objectives": [[105, "module-seldonian.models.objectives"]], "seldonian.models.objectives.Error_Rate": [[106, "seldonian-models-objectives-error-rate"]], "seldonian.models.objectives.False_Negative_Rate": [[107, "seldonian-models-objectives-false-negative-rate"]], "seldonian.models.objectives.False_Positive_Rate": [[108, "seldonian-models-objectives-false-positive-rate"]], "seldonian.models.objectives.IS_estimate": [[109, "seldonian-models-objectives-is-estimate"]], "seldonian.models.objectives.Mean_Error": [[110, "seldonian-models-objectives-mean-error"]], "seldonian.models.objectives.Mean_Squared_Error": [[111, "seldonian-models-objectives-mean-squared-error"]], "seldonian.models.objectives.Negative_Rate": [[112, "seldonian-models-objectives-negative-rate"]], "seldonian.models.objectives.PDIS_estimate": [[113, "seldonian-models-objectives-pdis-estimate"]], "seldonian.models.objectives.Positive_Rate": [[114, "seldonian-models-objectives-positive-rate"]], "seldonian.models.objectives.True_Negative_Rate": [[115, "seldonian-models-objectives-true-negative-rate"]], "seldonian.models.objectives.True_Positive_Rate": [[116, "seldonian-models-objectives-true-positive-rate"]], "seldonian.models.objectives.WIS_estimate": [[117, "seldonian-models-objectives-wis-estimate"]], "seldonian.models.objectives.binary_logistic_loss": [[118, "seldonian-models-objectives-binary-logistic-loss"]], "seldonian.models.objectives.confusion_matrix": [[119, "seldonian-models-objectives-confusion-matrix"]], "seldonian.models.objectives.gradient_Bounded_Squared_Error": [[120, "seldonian-models-objectives-gradient-bounded-squared-error"]], "seldonian.models.objectives.gradient_Mean_Squared_Error": [[121, "seldonian-models-objectives-gradient-mean-squared-error"]], "seldonian.models.objectives.gradient_binary_logistic_loss": [[122, "seldonian-models-objectives-gradient-binary-logistic-loss"]], "seldonian.models.objectives.multiclass_logistic_loss": [[123, "seldonian-models-objectives-multiclass-logistic-loss"]], "seldonian.models.sklearn_lr": [[124, "module-seldonian.models.sklearn_lr"]], "seldonian.models.sklearn_lr.SkLearnLinearRegressor": [[125, "seldonian-models-sklearn-lr-sklearnlinearregressor"]], "seldonian.models.sklearn_model": [[126, "module-seldonian.models.sklearn_model"]], "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel": [[127, "seldonian-models-sklearn-model-supervisedsklearnbasemodel"]], "seldonian.models.sklearn_model.sklearn_predict_vjp": [[128, "seldonian-models-sklearn-model-sklearn-predict-vjp"]], "seldonian.models.trees": [[129, "module-seldonian.models.trees"]], "seldonian.models.trees.skrandomforest_model": [[130, "module-seldonian.models.trees.skrandomforest_model"]], "seldonian.models.trees.skrandomforest_model.SeldonianRandomForest": [[131, "seldonian-models-trees-skrandomforest-model-seldonianrandomforest"]], "seldonian.models.trees.skrandomforest_model.probs2theta": [[132, "seldonian-models-trees-skrandomforest-model-probs2theta"]], "seldonian.models.trees.skrandomforest_model.sigmoid": [[133, "seldonian-models-trees-skrandomforest-model-sigmoid"]], "seldonian.models.trees.skrandomforest_model.sklearn_predict_vjp": [[134, "seldonian-models-trees-skrandomforest-model-sklearn-predict-vjp"]], "seldonian.models.trees.sktree_model": [[135, "module-seldonian.models.trees.sktree_model"]], "seldonian.models.trees.sktree_model.SeldonianDecisionTree": [[136, "seldonian-models-trees-sktree-model-seldoniandecisiontree"]], "seldonian.models.trees.sktree_model.probs2theta": [[137, "seldonian-models-trees-sktree-model-probs2theta"]], "seldonian.models.trees.sktree_model.sigmoid": [[138, "seldonian-models-trees-sktree-model-sigmoid"]], "seldonian.models.trees.sktree_model.sklearn_predict_vjp": [[139, "seldonian-models-trees-sktree-model-sklearn-predict-vjp"]], "seldonian.models.zhat_funcs": [[140, "module-seldonian.models.zhat_funcs"]], "seldonian.models.zhat_funcs.batcher": [[141, "seldonian-models-zhat-funcs-batcher"]], "seldonian.models.zhat_funcs.evaluate_statistic": [[142, "seldonian-models-zhat-funcs-evaluate-statistic"]], "seldonian.models.zhat_funcs.sample_from_statistic": [[143, "seldonian-models-zhat-funcs-sample-from-statistic"]], "seldonian.models.zhat_funcs.vector_Accuracy": [[144, "seldonian-models-zhat-funcs-vector-accuracy"]], "seldonian.models.zhat_funcs.vector_Error": [[145, "seldonian-models-zhat-funcs-vector-error"]], "seldonian.models.zhat_funcs.vector_Error_Rate": [[146, "seldonian-models-zhat-funcs-vector-error-rate"]], "seldonian.models.zhat_funcs.vector_False_Negative_Rate": [[147, "seldonian-models-zhat-funcs-vector-false-negative-rate"]], "seldonian.models.zhat_funcs.vector_False_Positive_Rate": [[148, "seldonian-models-zhat-funcs-vector-false-positive-rate"]], "seldonian.models.zhat_funcs.vector_IS_estimate": [[149, "seldonian-models-zhat-funcs-vector-is-estimate"]], "seldonian.models.zhat_funcs.vector_Negative_Rate": [[150, "seldonian-models-zhat-funcs-vector-negative-rate"]], "seldonian.models.zhat_funcs.vector_PDIS_estimate": [[151, "seldonian-models-zhat-funcs-vector-pdis-estimate"]], "seldonian.models.zhat_funcs.vector_Positive_Rate": [[152, "seldonian-models-zhat-funcs-vector-positive-rate"]], "seldonian.models.zhat_funcs.vector_Squared_Error": [[153, "seldonian-models-zhat-funcs-vector-squared-error"]], "seldonian.models.zhat_funcs.vector_True_Negative_Rate": [[154, "seldonian-models-zhat-funcs-vector-true-negative-rate"]], "seldonian.models.zhat_funcs.vector_True_Positive_Rate": [[155, "seldonian-models-zhat-funcs-vector-true-positive-rate"]], "seldonian.models.zhat_funcs.vector_WIS_estimate": [[156, "seldonian-models-zhat-funcs-vector-wis-estimate"]], "seldonian.models.zhat_funcs.vector_confusion_matrix": [[157, "seldonian-models-zhat-funcs-vector-confusion-matrix"]], "seldonian.optimizers": [[158, "module-seldonian.optimizers"]], "seldonian.optimizers.gradient_descent": [[159, "module-seldonian.optimizers.gradient_descent"]], "seldonian.optimizers.gradient_descent.gradient_descent_adam": [[160, "seldonian-optimizers-gradient-descent-gradient-descent-adam"]], "seldonian.optimizers.gradient_descent.setup_gradients": [[161, "seldonian-optimizers-gradient-descent-setup-gradients"]], "seldonian.parse_tree": [[162, "module-seldonian.parse_tree"]], "seldonian.parse_tree.nodes": [[163, "module-seldonian.parse_tree.nodes"]], "seldonian.parse_tree.nodes.BaseNode": [[164, "seldonian-parse-tree-nodes-basenode"]], "seldonian.parse_tree.nodes.CVaRSQeBaseNode": [[165, "seldonian-parse-tree-nodes-cvarsqebasenode"]], "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode": [[166, "seldonian-parse-tree-nodes-confusionmatrixbasenode"]], "seldonian.parse_tree.nodes.ConstantNode": [[167, "seldonian-parse-tree-nodes-constantnode"]], "seldonian.parse_tree.nodes.InternalNode": [[168, "seldonian-parse-tree-nodes-internalnode"]], "seldonian.parse_tree.nodes.MEDCustomBaseNode": [[169, "seldonian-parse-tree-nodes-medcustombasenode"]], "seldonian.parse_tree.nodes.MultiClassBaseNode": [[170, "seldonian-parse-tree-nodes-multiclassbasenode"]], "seldonian.parse_tree.nodes.Node": [[171, "seldonian-parse-tree-nodes-node"]], "seldonian.parse_tree.nodes.RLAltRewardBaseNode": [[172, "seldonian-parse-tree-nodes-rlaltrewardbasenode"]], "seldonian.parse_tree.operators": [[173, "module-seldonian.parse_tree.operators"]], "seldonian.parse_tree.parse_tree": [[174, "module-seldonian.parse_tree.parse_tree"]], "seldonian.parse_tree.parse_tree.ParseTree": [[175, "seldonian-parse-tree-parse-tree-parsetree"]], "seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints": [[176, "seldonian-parse-tree-parse-tree-make-parse-trees-from-constraints"]], "seldonian.safety_test": [[177, "module-seldonian.safety_test"]], "seldonian.safety_test.safety_test": [[178, "module-seldonian.safety_test.safety_test"]], "seldonian.safety_test.safety_test.SafetyTest": [[179, "seldonian-safety-test-safety-test-safetytest"]], "seldonian.seldonian_algorithm": [[180, "module-seldonian.seldonian_algorithm"]], "seldonian.seldonian_algorithm.SeldonianAlgorithm": [[181, "seldonian-seldonian-algorithm-seldonianalgorithm"]], "seldonian.spec": [[182, "module-seldonian.spec"]], "seldonian.spec.RLSpec": [[183, "seldonian-spec-rlspec"]], "seldonian.spec.Spec": [[184, "seldonian-spec-spec"]], "seldonian.spec.SupervisedSpec": [[185, "seldonian-spec-supervisedspec"]], "seldonian.spec.createRLSpec": [[186, "seldonian-spec-createrlspec"]], "seldonian.spec.createSimpleSupervisedSpec": [[187, "seldonian-spec-createsimplesupervisedspec"]], "seldonian.spec.createSupervisedSpec": [[188, "seldonian-spec-createsupervisedspec"]], "seldonian.spec.validate_parse_trees": [[189, "seldonian-spec-validate-parse-trees"]], "seldonian.utils": [[190, "module-seldonian.utils"]], "seldonian.utils.RL_utils": [[191, "module-seldonian.utils.RL_utils"]], "seldonian.utils.RL_utils.argmax_multi": [[192, "seldonian-utils-rl-utils-argmax-multi"]], "seldonian.utils.RL_utils.clamp": [[193, "seldonian-utils-rl-utils-clamp"]], "seldonian.utils.RL_utils.error": [[194, "seldonian-utils-rl-utils-error"]], "seldonian.utils.io_utils": [[195, "module-seldonian.utils.io_utils"]], "seldonian.utils.io_utils.dir_path": [[196, "seldonian-utils-io-utils-dir-path"]], "seldonian.utils.io_utils.load_json": [[197, "seldonian-utils-io-utils-load-json"]], "seldonian.utils.io_utils.load_pickle": [[198, "seldonian-utils-io-utils-load-pickle"]], "seldonian.utils.io_utils.save_json": [[199, "seldonian-utils-io-utils-save-json"]], "seldonian.utils.io_utils.save_pickle": [[200, "seldonian-utils-io-utils-save-pickle"]], "seldonian.utils.plot_utils": [[201, "module-seldonian.utils.plot_utils"]], "seldonian.utils.plot_utils.plot_gradient_descent": [[202, "seldonian-utils-plot-utils-plot-gradient-descent"]], "seldonian.utils.stats_utils": [[203, "module-seldonian.utils.stats_utils"]], "seldonian.utils.stats_utils.custom_cumprod": [[204, "seldonian-utils-stats-utils-custom-cumprod"]], "seldonian.utils.stats_utils.softmax": [[205, "seldonian-utils-stats-utils-softmax"]], "seldonian.utils.stats_utils.stddev": [[206, "seldonian-utils-stats-utils-stddev"]], "seldonian.utils.stats_utils.tinv": [[207, "seldonian-utils-stats-utils-tinv"]], "seldonian.utils.stats_utils.weighted_sum_gamma": [[208, "seldonian-utils-stats-utils-weighted-sum-gamma"]], "seldonian.utils.tutorial_utils": [[209, "module-seldonian.utils.tutorial_utils"]], "seldonian.utils.tutorial_utils.generate_clipped_data": [[210, "seldonian-utils-tutorial-utils-generate-clipped-data"]], "seldonian.utils.tutorial_utils.generate_data": [[211, "seldonian-utils-tutorial-utils-generate-data"]], "seldonian.utils.tutorial_utils.make_synthetic_regression_dataset": [[212, "seldonian-utils-tutorial-utils-make-synthetic-regression-dataset"]], "seldonian.warnings": [[213, "module-seldonian.warnings"]], "seldonian.warnings.custom_warnings": [[214, "module-seldonian.warnings.custom_warnings"]], "seldonian.warnings.custom_warnings.custom_formatwarning": [[215, "seldonian-warnings-custom-warnings-custom-formatwarning"]], "API": [[216, "api"]], "Getting Started": [[217, "getting-started"]], "Installation": [[217, "installation"]], "A first tutorial": [[217, "a-first-tutorial"]], "Seldonian Engine documentation": [[218, "seldonian-engine-documentation"]], "Table of contents": [[218, "table-of-contents"]], "Overview": [[219, "overview"]], "Interface": [[219, "interface"]], "Spec object": [[219, "spec-object"]], "Dataset object": [[219, "dataset-object"]], "Model object": [[219, "model-object"]], "Behavioral constraints": [[219, "behavioral-constraints"]], "Constraint strings": [[219, "constraint-strings"]], "What does SA.run() do?": [[219, "what-does-sa-run-do"]], "Candidate Selection": [[219, "candidate-selection"]], "Safety Test": [[219, "safety-test"]]}, "indexentries": {"module": [[0, "module-seldonian"], [1, "module-seldonian.RL"], [2, "module-seldonian.RL.Agents"], [3, "module-seldonian.RL.Agents.Agent"], [5, "module-seldonian.RL.Agents.Bases"], [6, "module-seldonian.RL.Agents.Bases.Fourier"], [8, "module-seldonian.RL.Agents.Discrete_Random_Agent"], [10, "module-seldonian.RL.Agents.Function_Approximators"], [11, "module-seldonian.RL.Agents.Function_Approximators.Function_Approximator"], [13, "module-seldonian.RL.Agents.Function_Approximators.Linear_FA"], [16, "module-seldonian.RL.Agents.Function_Approximators.Table"], [20, "module-seldonian.RL.Agents.Parameterized_non_learning_softmax_agent"], [22, "module-seldonian.RL.Agents.Policies"], [23, "module-seldonian.RL.Agents.Policies.Policy"], [26, "module-seldonian.RL.Agents.Policies.Softmax"], [30, "module-seldonian.RL.Agents.keyboard_gridworld"], [32, "module-seldonian.RL.Agents.mountain_car_rough_solution"], [34, "module-seldonian.RL.Env_Description"], [35, "module-seldonian.RL.Env_Description.Env_Description"], [38, "module-seldonian.RL.Env_Description.Spaces"], [41, "module-seldonian.RL.RL_generate_dataset_and_spec_file"], [47, "module-seldonian.RL.RL_model"], [49, "module-seldonian.RL.RL_runner"], [55, "module-seldonian.RL.environments"], [56, "module-seldonian.RL.environments.Environment"], [58, "module-seldonian.RL.environments.gridworld"], [60, "module-seldonian.RL.environments.mountaincar"], [62, "module-seldonian.RL.environments.n_step_mountaincar"], [64, "module-seldonian.RL.environments.simglucose_env"], [66, "module-seldonian.RL.generate_gridworld_episodes"], [68, "module-seldonian.RL.generate_mountaincar_episodes"], [70, "module-seldonian.RL.generate_simglucose_episodes"], [73, "module-seldonian.RL.hyperparams_and_settings"], [75, "module-seldonian.candidate_selection"], [76, "module-seldonian.candidate_selection.candidate_selection"], [78, "module-seldonian.dataset"], [89, "module-seldonian.hyperparam_search"], [91, "module-seldonian.models"], [92, "module-seldonian.models.models"], [105, "module-seldonian.models.objectives"], [124, "module-seldonian.models.sklearn_lr"], [126, "module-seldonian.models.sklearn_model"], [129, "module-seldonian.models.trees"], [130, "module-seldonian.models.trees.skrandomforest_model"], [135, "module-seldonian.models.trees.sktree_model"], [140, "module-seldonian.models.zhat_funcs"], [158, "module-seldonian.optimizers"], [159, "module-seldonian.optimizers.gradient_descent"], [162, "module-seldonian.parse_tree"], [163, "module-seldonian.parse_tree.nodes"], [173, "module-seldonian.parse_tree.operators"], [174, "module-seldonian.parse_tree.parse_tree"], [177, "module-seldonian.safety_test"], [178, "module-seldonian.safety_test.safety_test"], [180, "module-seldonian.seldonian_algorithm"], [182, "module-seldonian.spec"], [190, "module-seldonian.utils"], [191, "module-seldonian.utils.RL_utils"], [195, "module-seldonian.utils.io_utils"], [201, "module-seldonian.utils.plot_utils"], [203, "module-seldonian.utils.stats_utils"], [209, "module-seldonian.utils.tutorial_utils"], [213, "module-seldonian.warnings"], [214, "module-seldonian.warnings.custom_warnings"]], "seldonian": [[0, "module-seldonian"]], "seldonian.rl": [[1, "module-seldonian.RL"]], "seldonian.rl.agents": [[2, "module-seldonian.RL.Agents"]], "seldonian.rl.agents.agent": [[3, "module-seldonian.RL.Agents.Agent"]], "agent (class in seldonian.rl.agents.agent)": [[4, "seldonian.RL.Agents.Agent.Agent"]], "__init__() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.__init__"]], "__repr__() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.__repr__"]], "choose_action() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.choose_action"]], "get_params() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.get_params"]], "get_prob_this_action() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.get_prob_this_action"]], "set_new_params() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.set_new_params"]], "update() (agent method)": [[4, "seldonian.RL.Agents.Agent.Agent.update"]], "seldonian.rl.agents.bases": [[5, "module-seldonian.RL.Agents.Bases"]], "seldonian.rl.agents.bases.fourier": [[6, "module-seldonian.RL.Agents.Bases.Fourier"]], "fourier (class in seldonian.rl.agents.bases.fourier)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier"]], "__init__() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.__init__"]], "__repr__() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.__repr__"]], "calculate_num_features() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.calculate_num_features"]], "construct_basis_matrix() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.construct_basis_matrix"]], "get_features() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.get_features"]], "get_normalized_observation() (fourier method)": [[7, "seldonian.RL.Agents.Bases.Fourier.Fourier.get_normalized_observation"]], "seldonian.rl.agents.discrete_random_agent": [[8, "module-seldonian.RL.Agents.Discrete_Random_Agent"]], "discrete_random_agent (class in seldonian.rl.agents.discrete_random_agent)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent"]], "__init__() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.__init__"]], "__repr__() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.__repr__"]], "choose_action() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.choose_action"]], "get_params() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.get_params"]], "get_prob_this_action() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.get_prob_this_action"]], "set_new_params() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.set_new_params"]], "update() (discrete_random_agent method)": [[9, "seldonian.RL.Agents.Discrete_Random_Agent.Discrete_Random_Agent.update"]], "seldonian.rl.agents.function_approximators": [[10, "module-seldonian.RL.Agents.Function_Approximators"]], "seldonian.rl.agents.function_approximators.function_approximator": [[11, "module-seldonian.RL.Agents.Function_Approximators.Function_Approximator"]], "function_approximator (class in seldonian.rl.agents.function_approximators.function_approximator)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator"]], "__init__() (function_approximator method)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.__init__"]], "__repr__() (function_approximator method)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.__repr__"]], "set_new_params() (function_approximator method)": [[12, "seldonian.RL.Agents.Function_Approximators.Function_Approximator.Function_Approximator.set_new_params"]], "seldonian.rl.agents.function_approximators.linear_fa": [[13, "module-seldonian.RL.Agents.Function_Approximators.Linear_FA"]], "linear_fa (class in seldonian.rl.agents.function_approximators.linear_fa)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA"]], "__init__() (linear_fa method)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.__init__"]], "__repr__() (linear_fa method)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.__repr__"]], "set_new_params() (linear_fa method)": [[14, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_FA.set_new_params"]], "linear_state_action_value_fa (class in seldonian.rl.agents.function_approximators.linear_fa)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA"]], "__init__() (linear_state_action_value_fa method)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.__init__"]], "__repr__() (linear_state_action_value_fa method)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.__repr__"]], "set_new_params() (linear_state_action_value_fa method)": [[15, "seldonian.RL.Agents.Function_Approximators.Linear_FA.Linear_state_action_value_FA.set_new_params"]], "seldonian.rl.agents.function_approximators.table": [[16, "module-seldonian.RL.Agents.Function_Approximators.Table"]], "q_table (class in seldonian.rl.agents.function_approximators.table)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table"]], "__init__() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.__init__"]], "__repr__() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.__repr__"]], "from_environment_state_to_0_indexed_state() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.from_environment_state_to_0_indexed_state"]], "get_action_values_given_state() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.get_action_values_given_state"]], "get_action_values_given_zero_indexed_state() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.get_action_values_given_zero_indexed_state"]], "set_new_params() (q_table method)": [[17, "seldonian.RL.Agents.Function_Approximators.Table.Q_Table.set_new_params"]], "table (class in seldonian.rl.agents.function_approximators.table)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table"]], "__init__() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.__init__"]], "__repr__() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.__repr__"]], "from_environment_state_to_0_indexed_state() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.from_environment_state_to_0_indexed_state"]], "set_new_params() (table method)": [[18, "seldonian.RL.Agents.Function_Approximators.Table.Table.set_new_params"]], "construct_q_table_from_env_description() (in module seldonian.rl.agents.function_approximators.table)": [[19, "seldonian.RL.Agents.Function_Approximators.Table.construct_Q_Table_From_Env_Description"]], "seldonian.rl.agents.parameterized_non_learning_softmax_agent": [[20, "module-seldonian.RL.Agents.Parameterized_non_learning_softmax_agent"]], "parameterized_non_learning_softmax_agent (class in seldonian.rl.agents.parameterized_non_learning_softmax_agent)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent"]], "__init__() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.__init__"]], "__repr__() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.__repr__"]], "choose_action() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.choose_action"]], "get_action_values() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.get_action_values"]], "get_params() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.get_params"]], "get_prob_this_action() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.get_prob_this_action"]], "set_new_params() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.set_new_params"]], "update() (parameterized_non_learning_softmax_agent method)": [[21, "seldonian.RL.Agents.Parameterized_non_learning_softmax_agent.Parameterized_non_learning_softmax_agent.update"]], "seldonian.rl.agents.policies": [[22, "module-seldonian.RL.Agents.Policies"]], "seldonian.rl.agents.policies.policy": [[23, "module-seldonian.RL.Agents.Policies.Policy"]], "discrete_action_policy (class in seldonian.rl.agents.policies.policy)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy"]], "__init__() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.__init__"]], "__repr__() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.__repr__"]], "choose_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.choose_action"]], "construct_basis_and_linear_fa() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.construct_basis_and_linear_FA"]], "from_0_indexed_action_to_environment_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.from_0_indexed_action_to_environment_action"]], "from_environment_action_to_0_indexed_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.from_environment_action_to_0_indexed_action"]], "get_action_values_given_state() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.get_action_values_given_state"]], "get_params() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.get_params"]], "get_prob_this_action() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.get_prob_this_action"]], "make_state_action_fa() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.make_state_action_FA"]], "set_new_params() (discrete_action_policy method)": [[24, "seldonian.RL.Agents.Policies.Policy.Discrete_Action_Policy.set_new_params"]], "policy (class in seldonian.rl.agents.policies.policy)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy"]], "__init__() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.__init__"]], "__repr__() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.__repr__"]], "choose_action() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.choose_action"]], "get_params() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.get_params"]], "get_prob_this_action() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.get_prob_this_action"]], "set_new_params() (policy method)": [[25, "seldonian.RL.Agents.Policies.Policy.Policy.set_new_params"]], "seldonian.rl.agents.policies.softmax": [[26, "module-seldonian.RL.Agents.Policies.Softmax"]], "discretesoftmax (class in seldonian.rl.agents.policies.softmax)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax"]], "__init__() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.__init__"]], "__repr__() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.__repr__"]], "_arg() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax._arg"]], "_denom() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax._denom"]], "choose_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.choose_action"]], "choose_action_from_action_values() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.choose_action_from_action_values"]], "construct_basis_and_linear_fa() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.construct_basis_and_linear_FA"]], "from_0_indexed_action_to_environment_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.from_0_indexed_action_to_environment_action"]], "from_environment_action_to_0_indexed_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.from_environment_action_to_0_indexed_action"]], "get_action_probs_from_action_values() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_action_probs_from_action_values"]], "get_action_values_given_state() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_action_values_given_state"]], "get_e_to_the_something_terms() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_e_to_the_something_terms"]], "get_params() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_params"]], "get_prob_this_action() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.get_prob_this_action"]], "make_state_action_fa() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.make_state_action_FA"]], "set_new_params() (discretesoftmax method)": [[27, "seldonian.RL.Agents.Policies.Softmax.DiscreteSoftmax.set_new_params"]], "mixedsoftmax (class in seldonian.rl.agents.policies.softmax)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax"]], "__init__() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.__init__"]], "__repr__() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.__repr__"]], "choose_action() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.choose_action"]], "choose_action_from_action_values() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.choose_action_from_action_values"]], "construct_basis_and_linear_fa() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.construct_basis_and_linear_FA"]], "from_0_indexed_action_to_environment_action() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.from_0_indexed_action_to_environment_action"]], "from_environment_action_to_0_indexed_action() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.from_environment_action_to_0_indexed_action"]], "get_action_probs_from_action_values() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.get_action_probs_from_action_values"]], "get_action_values_given_state() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.get_action_values_given_state"]], "get_e_to_the_something_terms() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.get_e_to_the_something_terms"]], "get_params() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.get_params"]], "get_prob_this_action() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.get_prob_this_action"]], "make_state_action_fa() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.make_state_action_FA"]], "set_new_params() (mixedsoftmax method)": [[28, "seldonian.RL.Agents.Policies.Softmax.MixedSoftmax.set_new_params"]], "softmax (class in seldonian.rl.agents.policies.softmax)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax"]], "__init__() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.__init__"]], "__repr__() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.__repr__"]], "choose_action() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.choose_action"]], "choose_action_from_action_values() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.choose_action_from_action_values"]], "construct_basis_and_linear_fa() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.construct_basis_and_linear_FA"]], "from_0_indexed_action_to_environment_action() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.from_0_indexed_action_to_environment_action"]], "from_environment_action_to_0_indexed_action() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.from_environment_action_to_0_indexed_action"]], "get_action_probs_from_action_values() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_action_probs_from_action_values"]], "get_action_values_given_state() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_action_values_given_state"]], "get_e_to_the_something_terms() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_e_to_the_something_terms"]], "get_params() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_params"]], "get_prob_this_action() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.get_prob_this_action"]], "make_state_action_fa() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.make_state_action_FA"]], "set_new_params() (softmax method)": [[29, "seldonian.RL.Agents.Policies.Softmax.Softmax.set_new_params"]], "seldonian.rl.agents.keyboard_gridworld": [[30, "module-seldonian.RL.Agents.keyboard_gridworld"]], "keyboard_gridworld (class in seldonian.rl.agents.keyboard_gridworld)": [[31, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld"]], "__init__() (keyboard_gridworld method)": [[31, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.__init__"]], "__repr__() (keyboard_gridworld method)": [[31, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.__repr__"]], "choose_action() (keyboard_gridworld method)": [[31, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.choose_action"]], "get_params() (keyboard_gridworld method)": [[31, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.get_params"]], "get_prob_this_action() (keyboard_gridworld method)": [[31, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.get_prob_this_action"]], "set_new_params() (keyboard_gridworld method)": [[31, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.set_new_params"]], "update() (keyboard_gridworld method)": [[31, "seldonian.RL.Agents.keyboard_gridworld.Keyboard_gridworld.update"]], "seldonian.rl.agents.mountain_car_rough_solution": [[32, "module-seldonian.RL.Agents.mountain_car_rough_solution"]], "mountain_car_rough_solution (class in seldonian.rl.agents.mountain_car_rough_solution)": [[33, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution"]], "__init__() (mountain_car_rough_solution method)": [[33, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.__init__"]], "__repr__() (mountain_car_rough_solution method)": [[33, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.__repr__"]], "choose_action() (mountain_car_rough_solution method)": [[33, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.choose_action"]], "get_params() (mountain_car_rough_solution method)": [[33, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.get_params"]], "get_prob_this_action() (mountain_car_rough_solution method)": [[33, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.get_prob_this_action"]], "set_new_params() (mountain_car_rough_solution method)": [[33, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.set_new_params"]], "update() (mountain_car_rough_solution method)": [[33, "seldonian.RL.Agents.mountain_car_rough_solution.Mountain_car_rough_solution.update"]], "seldonian.rl.env_description": [[34, "module-seldonian.RL.Env_Description"]], "seldonian.rl.env_description.env_description": [[35, "module-seldonian.RL.Env_Description.Env_Description"]], "env_description (class in seldonian.rl.env_description.env_description)": [[36, "seldonian.RL.Env_Description.Env_Description.Env_Description"]], "__init__() (env_description method)": [[36, "seldonian.RL.Env_Description.Env_Description.Env_Description.__init__"]], "__repr__() (env_description method)": [[36, "seldonian.RL.Env_Description.Env_Description.Env_Description.__repr__"]], "get_min_action() (env_description method)": [[36, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_min_action"]], "get_min_state() (env_description method)": [[36, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_min_state"]], "get_num_actions() (env_description method)": [[36, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_num_actions"]], "get_num_observation_dims() (env_description method)": [[36, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_num_observation_dims"]], "get_num_states() (env_description method)": [[36, "seldonian.RL.Env_Description.Env_Description.Env_Description.get_num_states"]], "check_space_type() (in module seldonian.rl.env_description.env_description)": [[37, "seldonian.RL.Env_Description.Env_Description.check_space_type"]], "seldonian.rl.env_description.spaces": [[38, "module-seldonian.RL.Env_Description.Spaces"]], "continuous_space (class in seldonian.rl.env_description.spaces)": [[39, "seldonian.RL.Env_Description.Spaces.Continuous_Space"]], "__init__() (continuous_space method)": [[39, "seldonian.RL.Env_Description.Spaces.Continuous_Space.__init__"]], "__repr__() (continuous_space method)": [[39, "seldonian.RL.Env_Description.Spaces.Continuous_Space.__repr__"]], "check_bounds_valid() (continuous_space method)": [[39, "seldonian.RL.Env_Description.Spaces.Continuous_Space.check_bounds_valid"]], "get_num_dims() (continuous_space method)": [[39, "seldonian.RL.Env_Description.Spaces.Continuous_Space.get_num_dims"]], "discrete_space (class in seldonian.rl.env_description.spaces)": [[40, "seldonian.RL.Env_Description.Spaces.Discrete_Space"]], "__init__() (discrete_space method)": [[40, "seldonian.RL.Env_Description.Spaces.Discrete_Space.__init__"]], "__repr__() (discrete_space method)": [[40, "seldonian.RL.Env_Description.Spaces.Discrete_Space.__repr__"]], "get_num_values() (discrete_space method)": [[40, "seldonian.RL.Env_Description.Spaces.Discrete_Space.get_num_values"]], "seldonian.rl.rl_generate_dataset_and_spec_file": [[41, "module-seldonian.RL.RL_generate_dataset_and_spec_file"]], "get_constraint_string() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[42, "seldonian.RL.RL_generate_dataset_and_spec_file.get_constraint_string"]], "get_env_kwargs() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[43, "seldonian.RL.RL_generate_dataset_and_spec_file.get_env_kwargs"]], "get_metadata_path() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[44, "seldonian.RL.RL_generate_dataset_and_spec_file.get_metadata_path"]], "main() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[45, "seldonian.RL.RL_generate_dataset_and_spec_file.main"]], "print_return_info() (in module seldonian.rl.rl_generate_dataset_and_spec_file)": [[46, "seldonian.RL.RL_generate_dataset_and_spec_file.print_return_info"]], "seldonian.rl.rl_model": [[47, "module-seldonian.RL.RL_model"]], "rl_model (class in seldonian.rl.rl_model)": [[48, "seldonian.RL.RL_model.RL_model"]], "__init__() (rl_model method)": [[48, "seldonian.RL.RL_model.RL_model.__init__"]], "__repr__() (rl_model method)": [[48, "seldonian.RL.RL_model.RL_model.__repr__"]], "get_prob_this_action() (rl_model method)": [[48, "seldonian.RL.RL_model.RL_model.get_prob_this_action"]], "get_probs_from_observations_and_actions() (rl_model method)": [[48, "seldonian.RL.RL_model.RL_model.get_probs_from_observations_and_actions"]], "seldonian.rl.rl_runner": [[49, "module-seldonian.RL.RL_runner"]], "create_agent_fromdict() (in module seldonian.rl.rl_runner)": [[50, "seldonian.RL.RL_runner.create_agent_fromdict"]], "run_episode() (in module seldonian.rl.rl_runner)": [[51, "seldonian.RL.RL_runner.run_episode"]], "run_episode_from_dict() (in module seldonian.rl.rl_runner)": [[52, "seldonian.RL.RL_runner.run_episode_from_dict"]], "run_trial() (in module seldonian.rl.rl_runner)": [[53, "seldonian.RL.RL_runner.run_trial"]], "run_trial_given_agent_and_env() (in module seldonian.rl.rl_runner)": [[54, "seldonian.RL.RL_runner.run_trial_given_agent_and_env"]], "seldonian.rl.environments": [[55, "module-seldonian.RL.environments"]], "seldonian.rl.environments.environment": [[56, "module-seldonian.RL.environments.Environment"]], "environment (class in seldonian.rl.environments.environment)": [[57, "seldonian.RL.environments.Environment.Environment"]], "__init__() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.__init__"]], "__repr__() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.__repr__"]], "get_env_description() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.get_env_description"]], "get_observation() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.get_observation"]], "reset() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.reset"]], "start_visualizing() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.start_visualizing"]], "stop_visualizing() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.stop_visualizing"]], "terminated() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.terminated"]], "transition() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.transition"]], "visualize() (environment method)": [[57, "seldonian.RL.environments.Environment.Environment.visualize"]], "seldonian.rl.environments.gridworld": [[58, "module-seldonian.RL.environments.gridworld"]], "gridworld (class in seldonian.rl.environments.gridworld)": [[59, "seldonian.RL.environments.gridworld.Gridworld"]], "__init__() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.__init__"]], "__repr__() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.__repr__"]], "create_env_description() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.create_env_description"]], "get_env_description() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.get_env_description"]], "get_observation() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.get_observation"]], "is_in_goal_state() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.is_in_goal_state"]], "reset() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.reset"]], "start_visualizing() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.start_visualizing"]], "stop_visualizing() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.stop_visualizing"]], "terminated() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.terminated"]], "transition() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.transition"]], "update_position() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.update_position"]], "visualize() (gridworld method)": [[59, "seldonian.RL.environments.gridworld.Gridworld.visualize"]], "seldonian.rl.environments.mountaincar": [[60, "module-seldonian.RL.environments.mountaincar"]], "mountaincar (class in seldonian.rl.environments.mountaincar)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar"]], "__init__() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.__init__"]], "__repr__() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.__repr__"]], "get_env_description() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.get_env_description"]], "get_observation() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.get_observation"]], "reset() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.reset"]], "start_visualizing() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.start_visualizing"]], "stop_visualizing() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.stop_visualizing"]], "terminated() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.terminated"]], "transition() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.transition"]], "visualize() (mountaincar method)": [[61, "seldonian.RL.environments.mountaincar.Mountaincar.visualize"]], "seldonian.rl.environments.n_step_mountaincar": [[62, "module-seldonian.RL.environments.n_step_mountaincar"]], "n_step_mountaincar (class in seldonian.rl.environments.n_step_mountaincar)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar"]], "__init__() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.__init__"]], "__repr__() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.__repr__"]], "get_env_description() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.get_env_description"]], "get_observation() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.get_observation"]], "reset() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.reset"]], "start_visualizing() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.start_visualizing"]], "stop_visualizing() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.stop_visualizing"]], "terminated() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.terminated"]], "transition() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.transition"]], "visualize() (n_step_mountaincar method)": [[63, "seldonian.RL.environments.n_step_mountaincar.N_step_mountaincar.visualize"]], "seldonian.rl.environments.simglucose_env": [[64, "module-seldonian.RL.environments.simglucose_env"]], "simglucose (class in seldonian.rl.environments.simglucose_env)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose"]], "__init__() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.__init__"]], "__repr__() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.__repr__"]], "get_env_description() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.get_env_description"]], "get_observation() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.get_observation"]], "reset() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.reset"]], "start_visualizing() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.start_visualizing"]], "stop_visualizing() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.stop_visualizing"]], "terminated() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.terminated"]], "transition() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.transition"]], "visualize() (simglucose method)": [[65, "seldonian.RL.environments.simglucose_env.Simglucose.visualize"]], "seldonian.rl.generate_gridworld_episodes": [[66, "module-seldonian.RL.generate_gridworld_episodes"]], "main() (in module seldonian.rl.generate_gridworld_episodes)": [[67, "seldonian.RL.generate_gridworld_episodes.main"]], "seldonian.rl.generate_mountaincar_episodes": [[68, "module-seldonian.RL.generate_mountaincar_episodes"]], "main() (in module seldonian.rl.generate_mountaincar_episodes)": [[69, "seldonian.RL.generate_mountaincar_episodes.main"]], "seldonian.rl.generate_simglucose_episodes": [[70, "module-seldonian.RL.generate_simglucose_episodes"]], "get_max_obs() (in module seldonian.rl.generate_simglucose_episodes)": [[71, "seldonian.RL.generate_simglucose_episodes.get_max_obs"]], "main() (in module seldonian.rl.generate_simglucose_episodes)": [[72, "seldonian.RL.generate_simglucose_episodes.main"]], "seldonian.rl.hyperparams_and_settings": [[73, "module-seldonian.RL.hyperparams_and_settings"]], "define_hyperparameter_and_setting_dict() (in module seldonian.rl.hyperparams_and_settings)": [[74, "seldonian.RL.hyperparams_and_settings.define_hyperparameter_and_setting_dict"]], "seldonian.candidate_selection": [[75, "module-seldonian.candidate_selection"]], "seldonian.candidate_selection.candidate_selection": [[76, "module-seldonian.candidate_selection.candidate_selection"]], "candidateselection (class in seldonian.candidate_selection.candidate_selection)": [[77, "seldonian.candidate_selection.candidate_selection.CandidateSelection"]], "__init__() (candidateselection method)": [[77, "seldonian.candidate_selection.candidate_selection.CandidateSelection.__init__"]], "__repr__() (candidateselection method)": [[77, "seldonian.candidate_selection.candidate_selection.CandidateSelection.__repr__"]], "calculate_batches() (candidateselection method)": [[77, "seldonian.candidate_selection.candidate_selection.CandidateSelection.calculate_batches"]], "evaluate_primary_objective() (candidateselection method)": [[77, "seldonian.candidate_selection.candidate_selection.CandidateSelection.evaluate_primary_objective"]], "get_constraint_upper_bounds() (candidateselection method)": [[77, "seldonian.candidate_selection.candidate_selection.CandidateSelection.get_constraint_upper_bounds"]], "objective_with_barrier() (candidateselection method)": [[77, "seldonian.candidate_selection.candidate_selection.CandidateSelection.objective_with_barrier"]], "run() (candidateselection method)": [[77, "seldonian.candidate_selection.candidate_selection.CandidateSelection.run"]], "seldonian.dataset": [[78, "module-seldonian.dataset"]], "dataset (class in seldonian.dataset)": [[79, "seldonian.dataset.DataSet"]], "__init__() (dataset method)": [[79, "seldonian.dataset.DataSet.__init__"]], "__repr__() (dataset method)": [[79, "seldonian.dataset.DataSet.__repr__"]], "datasetloader (class in seldonian.dataset)": [[80, "seldonian.dataset.DataSetLoader"]], "__init__() (datasetloader method)": [[80, "seldonian.dataset.DataSetLoader.__init__"]], "__repr__() (datasetloader method)": [[80, "seldonian.dataset.DataSetLoader.__repr__"]], "load_rl_dataset_from_csv() (datasetloader method)": [[80, "seldonian.dataset.DataSetLoader.load_RL_dataset_from_csv"]], "load_rl_dataset_from_episode_file() (datasetloader method)": [[80, "seldonian.dataset.DataSetLoader.load_RL_dataset_from_episode_file"]], "load_supervised_dataset() (datasetloader method)": [[80, "seldonian.dataset.DataSetLoader.load_supervised_dataset"]], "episode (class in seldonian.dataset)": [[81, "seldonian.dataset.Episode"]], "__init__() (episode method)": [[81, "seldonian.dataset.Episode.__init__"]], "__repr__() (episode method)": [[81, "seldonian.dataset.Episode.__repr__"]], "metadata (class in seldonian.dataset)": [[82, "seldonian.dataset.MetaData"]], "__init__() (metadata method)": [[82, "seldonian.dataset.MetaData.__init__"]], "__repr__() (metadata method)": [[82, "seldonian.dataset.MetaData.__repr__"]], "rldataset (class in seldonian.dataset)": [[83, "seldonian.dataset.RLDataSet"]], "__init__() (rldataset method)": [[83, "seldonian.dataset.RLDataSet.__init__"]], "__repr__() (rldataset method)": [[83, "seldonian.dataset.RLDataSet.__repr__"]], "rlmetadata (class in seldonian.dataset)": [[84, "seldonian.dataset.RLMetaData"]], "__init__() (rlmetadata method)": [[84, "seldonian.dataset.RLMetaData.__init__"]], "__repr__() (rlmetadata method)": [[84, "seldonian.dataset.RLMetaData.__repr__"]], "superviseddataset (class in seldonian.dataset)": [[85, "seldonian.dataset.SupervisedDataSet"]], "__init__() (superviseddataset method)": [[85, "seldonian.dataset.SupervisedDataSet.__init__"]], "__repr__() (superviseddataset method)": [[85, "seldonian.dataset.SupervisedDataSet.__repr__"]], "supervisedmetadata (class in seldonian.dataset)": [[86, "seldonian.dataset.SupervisedMetaData"]], "__init__() (supervisedmetadata method)": [[86, "seldonian.dataset.SupervisedMetaData.__init__"]], "__repr__() (supervisedmetadata method)": [[86, "seldonian.dataset.SupervisedMetaData.__repr__"]], "load_rl_metadata() (in module seldonian.dataset)": [[87, "seldonian.dataset.load_RL_metadata"]], "load_supervised_metadata() (in module seldonian.dataset)": [[88, "seldonian.dataset.load_supervised_metadata"]], "seldonian.hyperparam_search": [[89, "module-seldonian.hyperparam_search"]], "hyperparamsearch (class in seldonian.hyperparam_search)": [[90, "seldonian.hyperparam_search.HyperparamSearch"]], "__init__() (hyperparamsearch method)": [[90, "seldonian.hyperparam_search.HyperparamSearch.__init__"]], "__repr__() (hyperparamsearch method)": [[90, "seldonian.hyperparam_search.HyperparamSearch.__repr__"]], "bootstrap_sample_dataset() (hyperparamsearch method)": [[90, "seldonian.hyperparam_search.HyperparamSearch.bootstrap_sample_dataset"]], "candidate_selection() (hyperparamsearch method)": [[90, "seldonian.hyperparam_search.HyperparamSearch.candidate_selection"]], "create_dataset() (hyperparamsearch method)": [[90, "seldonian.hyperparam_search.HyperparamSearch.create_dataset"]], "est_prob_pass() (hyperparamsearch method)": [[90, "seldonian.hyperparam_search.HyperparamSearch.est_prob_pass"]], "find_best_hyperparams() (hyperparamsearch method)": [[90, "seldonian.hyperparam_search.HyperparamSearch.find_best_hyperparams"]], "get_initial_solution() (hyperparamsearch method)": [[90, "seldonian.hyperparam_search.HyperparamSearch.get_initial_solution"]], "get_safety_size() (hyperparamsearch method)": [[90, "seldonian.hyperparam_search.HyperparamSearch.get_safety_size"]], "run_core() (hyperparamsearch method)": [[90, "seldonian.hyperparam_search.HyperparamSearch.run_core"]], "run_safety_test() (hyperparamsearch method)": [[90, "seldonian.hyperparam_search.HyperparamSearch.run_safety_test"]], "safety_test() (hyperparamsearch method)": [[90, "seldonian.hyperparam_search.HyperparamSearch.safety_test"]], "seldonian.models": [[91, "module-seldonian.models"]], "seldonian.models.models": [[92, "module-seldonian.models.models"]], "baselogisticregressionmodel (class in seldonian.models.models)": [[93, "seldonian.models.models.BaseLogisticRegressionModel"]], "__init__() (baselogisticregressionmodel method)": [[93, "seldonian.models.models.BaseLogisticRegressionModel.__init__"]], "__repr__() (baselogisticregressionmodel method)": [[93, "seldonian.models.models.BaseLogisticRegressionModel.__repr__"]], "fit() (baselogisticregressionmodel method)": [[93, "seldonian.models.models.BaseLogisticRegressionModel.fit"]], "binarylogisticregressionmodel (class in seldonian.models.models)": [[94, "seldonian.models.models.BinaryLogisticRegressionModel"]], "__init__() (binarylogisticregressionmodel method)": [[94, "seldonian.models.models.BinaryLogisticRegressionModel.__init__"]], "__repr__() (binarylogisticregressionmodel method)": [[94, "seldonian.models.models.BinaryLogisticRegressionModel.__repr__"]], "fit() (binarylogisticregressionmodel method)": [[94, "seldonian.models.models.BinaryLogisticRegressionModel.fit"]], "predict() (binarylogisticregressionmodel method)": [[94, "seldonian.models.models.BinaryLogisticRegressionModel.predict"]], "boundedlinearregressionmodel (class in seldonian.models.models)": [[95, "seldonian.models.models.BoundedLinearRegressionModel"]], "__init__() (boundedlinearregressionmodel method)": [[95, "seldonian.models.models.BoundedLinearRegressionModel.__init__"]], "__repr__() (boundedlinearregressionmodel method)": [[95, "seldonian.models.models.BoundedLinearRegressionModel.__repr__"]], "fit() (boundedlinearregressionmodel method)": [[95, "seldonian.models.models.BoundedLinearRegressionModel.fit"]], "predict() (boundedlinearregressionmodel method)": [[95, "seldonian.models.models.BoundedLinearRegressionModel.predict"]], "classificationmodel (class in seldonian.models.models)": [[96, "seldonian.models.models.ClassificationModel"]], "__init__() (classificationmodel method)": [[96, "seldonian.models.models.ClassificationModel.__init__"]], "__repr__() (classificationmodel method)": [[96, "seldonian.models.models.ClassificationModel.__repr__"]], "dummyclassifiermodel (class in seldonian.models.models)": [[97, "seldonian.models.models.DummyClassifierModel"]], "__init__() (dummyclassifiermodel method)": [[97, "seldonian.models.models.DummyClassifierModel.__init__"]], "__repr__() (dummyclassifiermodel method)": [[97, "seldonian.models.models.DummyClassifierModel.__repr__"]], "predict() (dummyclassifiermodel method)": [[97, "seldonian.models.models.DummyClassifierModel.predict"]], "linearregressionmodel (class in seldonian.models.models)": [[98, "seldonian.models.models.LinearRegressionModel"]], "__init__() (linearregressionmodel method)": [[98, "seldonian.models.models.LinearRegressionModel.__init__"]], "__repr__() (linearregressionmodel method)": [[98, "seldonian.models.models.LinearRegressionModel.__repr__"]], "fit() (linearregressionmodel method)": [[98, "seldonian.models.models.LinearRegressionModel.fit"]], "predict() (linearregressionmodel method)": [[98, "seldonian.models.models.LinearRegressionModel.predict"]], "linearregressionmodellistfeatures (class in seldonian.models.models)": [[99, "seldonian.models.models.LinearRegressionModelListFeatures"]], "__init__() (linearregressionmodellistfeatures method)": [[99, "seldonian.models.models.LinearRegressionModelListFeatures.__init__"]], "__repr__() (linearregressionmodellistfeatures method)": [[99, "seldonian.models.models.LinearRegressionModelListFeatures.__repr__"]], "fit() (linearregressionmodellistfeatures method)": [[99, "seldonian.models.models.LinearRegressionModelListFeatures.fit"]], "predict() (linearregressionmodellistfeatures method)": [[99, "seldonian.models.models.LinearRegressionModelListFeatures.predict"]], "multiclasslogisticregressionmodel (class in seldonian.models.models)": [[100, "seldonian.models.models.MultiClassLogisticRegressionModel"]], "__init__() (multiclasslogisticregressionmodel method)": [[100, "seldonian.models.models.MultiClassLogisticRegressionModel.__init__"]], "__repr__() (multiclasslogisticregressionmodel method)": [[100, "seldonian.models.models.MultiClassLogisticRegressionModel.__repr__"]], "fit() (multiclasslogisticregressionmodel method)": [[100, "seldonian.models.models.MultiClassLogisticRegressionModel.fit"]], "predict() (multiclasslogisticregressionmodel method)": [[100, "seldonian.models.models.MultiClassLogisticRegressionModel.predict"]], "randomclassifiermodel (class in seldonian.models.models)": [[101, "seldonian.models.models.RandomClassifierModel"]], "__init__() (randomclassifiermodel method)": [[101, "seldonian.models.models.RandomClassifierModel.__init__"]], "__repr__() (randomclassifiermodel method)": [[101, "seldonian.models.models.RandomClassifierModel.__repr__"]], "predict() (randomclassifiermodel method)": [[101, "seldonian.models.models.RandomClassifierModel.predict"]], "regressionmodel (class in seldonian.models.models)": [[102, "seldonian.models.models.RegressionModel"]], "__init__() (regressionmodel method)": [[102, "seldonian.models.models.RegressionModel.__init__"]], "__repr__() (regressionmodel method)": [[102, "seldonian.models.models.RegressionModel.__repr__"]], "seldonianmodel (class in seldonian.models.models)": [[103, "seldonian.models.models.SeldonianModel"]], "__init__() (seldonianmodel method)": [[103, "seldonian.models.models.SeldonianModel.__init__"]], "__repr__() (seldonianmodel method)": [[103, "seldonian.models.models.SeldonianModel.__repr__"]], "supervisedmodel (class in seldonian.models.models)": [[104, "seldonian.models.models.SupervisedModel"]], "__init__() (supervisedmodel method)": [[104, "seldonian.models.models.SupervisedModel.__init__"]], "__repr__() (supervisedmodel method)": [[104, "seldonian.models.models.SupervisedModel.__repr__"]], "seldonian.models.objectives": [[105, "module-seldonian.models.objectives"]], "error_rate() (in module seldonian.models.objectives)": [[106, "seldonian.models.objectives.Error_Rate"]], "false_negative_rate() (in module seldonian.models.objectives)": [[107, "seldonian.models.objectives.False_Negative_Rate"]], "false_positive_rate() (in module seldonian.models.objectives)": [[108, "seldonian.models.objectives.False_Positive_Rate"]], "is_estimate() (in module seldonian.models.objectives)": [[109, "seldonian.models.objectives.IS_estimate"]], "mean_error() (in module seldonian.models.objectives)": [[110, "seldonian.models.objectives.Mean_Error"]], "mean_squared_error() (in module seldonian.models.objectives)": [[111, "seldonian.models.objectives.Mean_Squared_Error"]], "negative_rate() (in module seldonian.models.objectives)": [[112, "seldonian.models.objectives.Negative_Rate"]], "pdis_estimate() (in module seldonian.models.objectives)": [[113, "seldonian.models.objectives.PDIS_estimate"]], "positive_rate() (in module seldonian.models.objectives)": [[114, "seldonian.models.objectives.Positive_Rate"]], "true_negative_rate() (in module seldonian.models.objectives)": [[115, "seldonian.models.objectives.True_Negative_Rate"]], "true_positive_rate() (in module seldonian.models.objectives)": [[116, "seldonian.models.objectives.True_Positive_Rate"]], "wis_estimate() (in module seldonian.models.objectives)": [[117, "seldonian.models.objectives.WIS_estimate"]], "binary_logistic_loss() (in module seldonian.models.objectives)": [[118, "seldonian.models.objectives.binary_logistic_loss"]], "confusion_matrix() (in module seldonian.models.objectives)": [[119, "seldonian.models.objectives.confusion_matrix"]], "gradient_bounded_squared_error() (in module seldonian.models.objectives)": [[120, "seldonian.models.objectives.gradient_Bounded_Squared_Error"]], "gradient_mean_squared_error() (in module seldonian.models.objectives)": [[121, "seldonian.models.objectives.gradient_Mean_Squared_Error"]], "gradient_binary_logistic_loss() (in module seldonian.models.objectives)": [[122, "seldonian.models.objectives.gradient_binary_logistic_loss"]], "multiclass_logistic_loss() (in module seldonian.models.objectives)": [[123, "seldonian.models.objectives.multiclass_logistic_loss"]], "seldonian.models.sklearn_lr": [[124, "module-seldonian.models.sklearn_lr"]], "sklearnlinearregressor (class in seldonian.models.sklearn_lr)": [[125, "seldonian.models.sklearn_lr.SkLearnLinearRegressor"]], "__init__() (sklearnlinearregressor method)": [[125, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.__init__"]], "__repr__() (sklearnlinearregressor method)": [[125, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.__repr__"]], "backward_pass() (sklearnlinearregressor method)": [[125, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.backward_pass"]], "create_model() (sklearnlinearregressor method)": [[125, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.create_model"]], "forward_pass() (sklearnlinearregressor method)": [[125, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.forward_pass"]], "get_model_params() (sklearnlinearregressor method)": [[125, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.get_model_params"]], "predict() (sklearnlinearregressor method)": [[125, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.predict"]], "update_model_params() (sklearnlinearregressor method)": [[125, "seldonian.models.sklearn_lr.SkLearnLinearRegressor.update_model_params"]], "seldonian.models.sklearn_model": [[126, "module-seldonian.models.sklearn_model"]], "supervisedsklearnbasemodel (class in seldonian.models.sklearn_model)": [[127, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel"]], "__init__() (supervisedsklearnbasemodel method)": [[127, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.__init__"]], "__repr__() (supervisedsklearnbasemodel method)": [[127, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.__repr__"]], "backward_pass() (supervisedsklearnbasemodel method)": [[127, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.backward_pass"]], "create_model() (supervisedsklearnbasemodel method)": [[127, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.create_model"]], "forward_pass() (supervisedsklearnbasemodel method)": [[127, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.forward_pass"]], "get_model_params() (supervisedsklearnbasemodel method)": [[127, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.get_model_params"]], "predict() (supervisedsklearnbasemodel method)": [[127, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.predict"]], "update_model_params() (supervisedsklearnbasemodel method)": [[127, "seldonian.models.sklearn_model.SupervisedSkLearnBaseModel.update_model_params"]], "sklearn_predict_vjp() (in module seldonian.models.sklearn_model)": [[128, "seldonian.models.sklearn_model.sklearn_predict_vjp"]], "seldonian.models.trees": [[129, "module-seldonian.models.trees"]], "seldonian.models.trees.skrandomforest_model": [[130, "module-seldonian.models.trees.skrandomforest_model"]], "seldonianrandomforest (class in seldonian.models.trees.skrandomforest_model)": [[131, "seldonian.models.trees.skrandomforest_model.SeldonianRandomForest"]], "__init__() (seldonianrandomforest method)": [[131, "seldonian.models.trees.skrandomforest_model.SeldonianRandomForest.__init__"]], "__repr__() (seldonianrandomforest method)": [[131, "seldonian.models.trees.skrandomforest_model.SeldonianRandomForest.__repr__"]], "fit() (seldonianrandomforest method)": [[131, "seldonian.models.trees.skrandomforest_model.SeldonianRandomForest.fit"]], "forward_pass() (seldonianrandomforest method)": [[131, "seldonian.models.trees.skrandomforest_model.SeldonianRandomForest.forward_pass"]], "get_jacobian() (seldonianrandomforest method)": [[131, "seldonian.models.trees.skrandomforest_model.SeldonianRandomForest.get_jacobian"]], "get_leaf_node_probs() (seldonianrandomforest method)": [[131, "seldonian.models.trees.skrandomforest_model.SeldonianRandomForest.get_leaf_node_probs"]], "predict() (seldonianrandomforest method)": [[131, "seldonian.models.trees.skrandomforest_model.SeldonianRandomForest.predict"]], "set_leaf_node_values() (seldonianrandomforest method)": [[131, "seldonian.models.trees.skrandomforest_model.SeldonianRandomForest.set_leaf_node_values"]], "probs2theta() (in module seldonian.models.trees.skrandomforest_model)": [[132, "seldonian.models.trees.skrandomforest_model.probs2theta"]], "sigmoid() (in module seldonian.models.trees.skrandomforest_model)": [[133, "seldonian.models.trees.skrandomforest_model.sigmoid"]], "sklearn_predict_vjp() (in module seldonian.models.trees.skrandomforest_model)": [[134, "seldonian.models.trees.skrandomforest_model.sklearn_predict_vjp"]], "seldonian.models.trees.sktree_model": [[135, "module-seldonian.models.trees.sktree_model"]], "seldoniandecisiontree (class in seldonian.models.trees.sktree_model)": [[136, "seldonian.models.trees.sktree_model.SeldonianDecisionTree"]], "__init__() (seldoniandecisiontree method)": [[136, "seldonian.models.trees.sktree_model.SeldonianDecisionTree.__init__"]], "__repr__() (seldoniandecisiontree method)": [[136, "seldonian.models.trees.sktree_model.SeldonianDecisionTree.__repr__"]], "fit() (seldoniandecisiontree method)": [[136, "seldonian.models.trees.sktree_model.SeldonianDecisionTree.fit"]], "forward_pass() (seldoniandecisiontree method)": [[136, "seldonian.models.trees.sktree_model.SeldonianDecisionTree.forward_pass"]], "get_jacobian() (seldoniandecisiontree method)": [[136, "seldonian.models.trees.sktree_model.SeldonianDecisionTree.get_jacobian"]], "get_leaf_node_probs() (seldoniandecisiontree method)": [[136, "seldonian.models.trees.sktree_model.SeldonianDecisionTree.get_leaf_node_probs"]], "predict() (seldoniandecisiontree method)": [[136, "seldonian.models.trees.sktree_model.SeldonianDecisionTree.predict"]], "set_leaf_node_values() (seldoniandecisiontree method)": [[136, "seldonian.models.trees.sktree_model.SeldonianDecisionTree.set_leaf_node_values"]], "probs2theta() (in module seldonian.models.trees.sktree_model)": [[137, "seldonian.models.trees.sktree_model.probs2theta"]], "sigmoid() (in module seldonian.models.trees.sktree_model)": [[138, "seldonian.models.trees.sktree_model.sigmoid"]], "sklearn_predict_vjp() (in module seldonian.models.trees.sktree_model)": [[139, "seldonian.models.trees.sktree_model.sklearn_predict_vjp"]], "seldonian.models.zhat_funcs": [[140, "module-seldonian.models.zhat_funcs"]], "batcher() (in module seldonian.models.zhat_funcs)": [[141, "seldonian.models.zhat_funcs.batcher"]], "evaluate_statistic() (in module seldonian.models.zhat_funcs)": [[142, "seldonian.models.zhat_funcs.evaluate_statistic"]], "sample_from_statistic() (in module seldonian.models.zhat_funcs)": [[143, "seldonian.models.zhat_funcs.sample_from_statistic"]], "vector_accuracy() (in module seldonian.models.zhat_funcs)": [[144, "seldonian.models.zhat_funcs.vector_Accuracy"]], "vector_error() (in module seldonian.models.zhat_funcs)": [[145, "seldonian.models.zhat_funcs.vector_Error"]], "vector_error_rate() (in module seldonian.models.zhat_funcs)": [[146, "seldonian.models.zhat_funcs.vector_Error_Rate"]], "vector_false_negative_rate() (in module seldonian.models.zhat_funcs)": [[147, "seldonian.models.zhat_funcs.vector_False_Negative_Rate"]], "vector_false_positive_rate() (in module seldonian.models.zhat_funcs)": [[148, "seldonian.models.zhat_funcs.vector_False_Positive_Rate"]], "vector_is_estimate() (in module seldonian.models.zhat_funcs)": [[149, "seldonian.models.zhat_funcs.vector_IS_estimate"]], "vector_negative_rate() (in module seldonian.models.zhat_funcs)": [[150, "seldonian.models.zhat_funcs.vector_Negative_Rate"]], "vector_pdis_estimate() (in module seldonian.models.zhat_funcs)": [[151, "seldonian.models.zhat_funcs.vector_PDIS_estimate"]], "vector_positive_rate() (in module seldonian.models.zhat_funcs)": [[152, "seldonian.models.zhat_funcs.vector_Positive_Rate"]], "vector_squared_error() (in module seldonian.models.zhat_funcs)": [[153, "seldonian.models.zhat_funcs.vector_Squared_Error"]], "vector_true_negative_rate() (in module seldonian.models.zhat_funcs)": [[154, "seldonian.models.zhat_funcs.vector_True_Negative_Rate"]], "vector_true_positive_rate() (in module seldonian.models.zhat_funcs)": [[155, "seldonian.models.zhat_funcs.vector_True_Positive_Rate"]], "vector_wis_estimate() (in module seldonian.models.zhat_funcs)": [[156, "seldonian.models.zhat_funcs.vector_WIS_estimate"]], "vector_confusion_matrix() (in module seldonian.models.zhat_funcs)": [[157, "seldonian.models.zhat_funcs.vector_confusion_matrix"]], "seldonian.optimizers": [[158, "module-seldonian.optimizers"]], "seldonian.optimizers.gradient_descent": [[159, "module-seldonian.optimizers.gradient_descent"]], "gradient_descent_adam() (in module seldonian.optimizers.gradient_descent)": [[160, "seldonian.optimizers.gradient_descent.gradient_descent_adam"]], "setup_gradients() (in module seldonian.optimizers.gradient_descent)": [[161, "seldonian.optimizers.gradient_descent.setup_gradients"]], "seldonian.parse_tree": [[162, "module-seldonian.parse_tree"]], "seldonian.parse_tree.nodes": [[163, "module-seldonian.parse_tree.nodes"]], "basenode (class in seldonian.parse_tree.nodes)": [[164, "seldonian.parse_tree.nodes.BaseNode"]], "__init__() (basenode method)": [[164, "seldonian.parse_tree.nodes.BaseNode.__init__"]], "__repr__() (basenode method)": [[164, "seldonian.parse_tree.nodes.BaseNode.__repr__"]], "calculate_bounds() (basenode method)": [[164, "seldonian.parse_tree.nodes.BaseNode.calculate_bounds"]], "calculate_data_forbound() (basenode method)": [[164, "seldonian.parse_tree.nodes.BaseNode.calculate_data_forbound"]], "calculate_value() (basenode method)": [[164, "seldonian.parse_tree.nodes.BaseNode.calculate_value"]], "compute_hc_lowerbound() (basenode method)": [[164, "seldonian.parse_tree.nodes.BaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (basenode method)": [[164, "seldonian.parse_tree.nodes.BaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (basenode method)": [[164, "seldonian.parse_tree.nodes.BaseNode.compute_HC_upperbound"]], "mask_data() (basenode method)": [[164, "seldonian.parse_tree.nodes.BaseNode.mask_data"]], "predict_hc_lowerbound() (basenode method)": [[164, "seldonian.parse_tree.nodes.BaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (basenode method)": [[164, "seldonian.parse_tree.nodes.BaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (basenode method)": [[164, "seldonian.parse_tree.nodes.BaseNode.predict_HC_upperbound"]], "zhat() (basenode method)": [[164, "seldonian.parse_tree.nodes.BaseNode.zhat"]], "cvarsqebasenode (class in seldonian.parse_tree.nodes)": [[165, "seldonian.parse_tree.nodes.CVaRSQeBaseNode"]], "__init__() (cvarsqebasenode method)": [[165, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.__init__"]], "__repr__() (cvarsqebasenode method)": [[165, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.__repr__"]], "calculate_bounds() (cvarsqebasenode method)": [[165, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.calculate_bounds"]], "calculate_data_forbound() (cvarsqebasenode method)": [[165, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.calculate_data_forbound"]], "calculate_value() (cvarsqebasenode method)": [[165, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.calculate_value"]], "compute_hc_lowerbound() (cvarsqebasenode method)": [[165, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (cvarsqebasenode method)": [[165, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (cvarsqebasenode method)": [[165, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.compute_HC_upperbound"]], "mask_data() (cvarsqebasenode method)": [[165, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.mask_data"]], "predict_hc_lowerbound() (cvarsqebasenode method)": [[165, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (cvarsqebasenode method)": [[165, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (cvarsqebasenode method)": [[165, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.predict_HC_upperbound"]], "zhat() (cvarsqebasenode method)": [[165, "seldonian.parse_tree.nodes.CVaRSQeBaseNode.zhat"]], "confusionmatrixbasenode (class in seldonian.parse_tree.nodes)": [[166, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode"]], "__init__() (confusionmatrixbasenode method)": [[166, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.__init__"]], "__repr__() (confusionmatrixbasenode method)": [[166, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.__repr__"]], "calculate_bounds() (confusionmatrixbasenode method)": [[166, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.calculate_bounds"]], "calculate_data_forbound() (confusionmatrixbasenode method)": [[166, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.calculate_data_forbound"]], "calculate_value() (confusionmatrixbasenode method)": [[166, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.calculate_value"]], "compute_hc_lowerbound() (confusionmatrixbasenode method)": [[166, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (confusionmatrixbasenode method)": [[166, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (confusionmatrixbasenode method)": [[166, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.compute_HC_upperbound"]], "mask_data() (confusionmatrixbasenode method)": [[166, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.mask_data"]], "predict_hc_lowerbound() (confusionmatrixbasenode method)": [[166, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (confusionmatrixbasenode method)": [[166, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (confusionmatrixbasenode method)": [[166, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.predict_HC_upperbound"]], "zhat() (confusionmatrixbasenode method)": [[166, "seldonian.parse_tree.nodes.ConfusionMatrixBaseNode.zhat"]], "constantnode (class in seldonian.parse_tree.nodes)": [[167, "seldonian.parse_tree.nodes.ConstantNode"]], "__init__() (constantnode method)": [[167, "seldonian.parse_tree.nodes.ConstantNode.__init__"]], "__repr__() (constantnode method)": [[167, "seldonian.parse_tree.nodes.ConstantNode.__repr__"]], "internalnode (class in seldonian.parse_tree.nodes)": [[168, "seldonian.parse_tree.nodes.InternalNode"]], "__init__() (internalnode method)": [[168, "seldonian.parse_tree.nodes.InternalNode.__init__"]], "__repr__() (internalnode method)": [[168, "seldonian.parse_tree.nodes.InternalNode.__repr__"]], "medcustombasenode (class in seldonian.parse_tree.nodes)": [[169, "seldonian.parse_tree.nodes.MEDCustomBaseNode"]], "__init__() (medcustombasenode method)": [[169, "seldonian.parse_tree.nodes.MEDCustomBaseNode.__init__"]], "__repr__() (medcustombasenode method)": [[169, "seldonian.parse_tree.nodes.MEDCustomBaseNode.__repr__"]], "calculate_bounds() (medcustombasenode method)": [[169, "seldonian.parse_tree.nodes.MEDCustomBaseNode.calculate_bounds"]], "calculate_data_forbound() (medcustombasenode method)": [[169, "seldonian.parse_tree.nodes.MEDCustomBaseNode.calculate_data_forbound"]], "calculate_value() (medcustombasenode method)": [[169, "seldonian.parse_tree.nodes.MEDCustomBaseNode.calculate_value"]], "compute_hc_lowerbound() (medcustombasenode method)": [[169, "seldonian.parse_tree.nodes.MEDCustomBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (medcustombasenode method)": [[169, "seldonian.parse_tree.nodes.MEDCustomBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (medcustombasenode method)": [[169, "seldonian.parse_tree.nodes.MEDCustomBaseNode.compute_HC_upperbound"]], "mask_data() (medcustombasenode method)": [[169, "seldonian.parse_tree.nodes.MEDCustomBaseNode.mask_data"]], "precalculate_data() (medcustombasenode method)": [[169, "seldonian.parse_tree.nodes.MEDCustomBaseNode.precalculate_data"]], "predict_hc_lowerbound() (medcustombasenode method)": [[169, "seldonian.parse_tree.nodes.MEDCustomBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (medcustombasenode method)": [[169, "seldonian.parse_tree.nodes.MEDCustomBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (medcustombasenode method)": [[169, "seldonian.parse_tree.nodes.MEDCustomBaseNode.predict_HC_upperbound"]], "zhat() (medcustombasenode method)": [[169, "seldonian.parse_tree.nodes.MEDCustomBaseNode.zhat"]], "multiclassbasenode (class in seldonian.parse_tree.nodes)": [[170, "seldonian.parse_tree.nodes.MultiClassBaseNode"]], "__init__() (multiclassbasenode method)": [[170, "seldonian.parse_tree.nodes.MultiClassBaseNode.__init__"]], "__repr__() (multiclassbasenode method)": [[170, "seldonian.parse_tree.nodes.MultiClassBaseNode.__repr__"]], "calculate_bounds() (multiclassbasenode method)": [[170, "seldonian.parse_tree.nodes.MultiClassBaseNode.calculate_bounds"]], "calculate_data_forbound() (multiclassbasenode method)": [[170, "seldonian.parse_tree.nodes.MultiClassBaseNode.calculate_data_forbound"]], "calculate_value() (multiclassbasenode method)": [[170, "seldonian.parse_tree.nodes.MultiClassBaseNode.calculate_value"]], "compute_hc_lowerbound() (multiclassbasenode method)": [[170, "seldonian.parse_tree.nodes.MultiClassBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (multiclassbasenode method)": [[170, "seldonian.parse_tree.nodes.MultiClassBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (multiclassbasenode method)": [[170, "seldonian.parse_tree.nodes.MultiClassBaseNode.compute_HC_upperbound"]], "mask_data() (multiclassbasenode method)": [[170, "seldonian.parse_tree.nodes.MultiClassBaseNode.mask_data"]], "predict_hc_lowerbound() (multiclassbasenode method)": [[170, "seldonian.parse_tree.nodes.MultiClassBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (multiclassbasenode method)": [[170, "seldonian.parse_tree.nodes.MultiClassBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (multiclassbasenode method)": [[170, "seldonian.parse_tree.nodes.MultiClassBaseNode.predict_HC_upperbound"]], "zhat() (multiclassbasenode method)": [[170, "seldonian.parse_tree.nodes.MultiClassBaseNode.zhat"]], "node (class in seldonian.parse_tree.nodes)": [[171, "seldonian.parse_tree.nodes.Node"]], "__init__() (node method)": [[171, "seldonian.parse_tree.nodes.Node.__init__"]], "__repr__() (node method)": [[171, "seldonian.parse_tree.nodes.Node.__repr__"]], "rlaltrewardbasenode (class in seldonian.parse_tree.nodes)": [[172, "seldonian.parse_tree.nodes.RLAltRewardBaseNode"]], "__init__() (rlaltrewardbasenode method)": [[172, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.__init__"]], "__repr__() (rlaltrewardbasenode method)": [[172, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.__repr__"]], "calculate_bounds() (rlaltrewardbasenode method)": [[172, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.calculate_bounds"]], "calculate_data_forbound() (rlaltrewardbasenode method)": [[172, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.calculate_data_forbound"]], "calculate_value() (rlaltrewardbasenode method)": [[172, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.calculate_value"]], "compute_hc_lowerbound() (rlaltrewardbasenode method)": [[172, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.compute_HC_lowerbound"]], "compute_hc_upper_and_lowerbound() (rlaltrewardbasenode method)": [[172, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.compute_HC_upper_and_lowerbound"]], "compute_hc_upperbound() (rlaltrewardbasenode method)": [[172, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.compute_HC_upperbound"]], "mask_data() (rlaltrewardbasenode method)": [[172, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.mask_data"]], "predict_hc_lowerbound() (rlaltrewardbasenode method)": [[172, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.predict_HC_lowerbound"]], "predict_hc_upper_and_lowerbound() (rlaltrewardbasenode method)": [[172, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.predict_HC_upper_and_lowerbound"]], "predict_hc_upperbound() (rlaltrewardbasenode method)": [[172, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.predict_HC_upperbound"]], "zhat() (rlaltrewardbasenode method)": [[172, "seldonian.parse_tree.nodes.RLAltRewardBaseNode.zhat"]], "bounds_required_dict (in module seldonian.parse_tree.operators)": [[173, "seldonian.parse_tree.operators.bounds_required_dict"]], "custom_base_node_dict (in module seldonian.parse_tree.operators)": [[173, "seldonian.parse_tree.operators.custom_base_node_dict"]], "measure_functions_dict (in module seldonian.parse_tree.operators)": [[173, "seldonian.parse_tree.operators.measure_functions_dict"]], "not_supported_op_mapper (in module seldonian.parse_tree.operators)": [[173, "seldonian.parse_tree.operators.not_supported_op_mapper"]], "op_mapper (in module seldonian.parse_tree.operators)": [[173, "seldonian.parse_tree.operators.op_mapper"]], "seldonian.parse_tree.operators": [[173, "module-seldonian.parse_tree.operators"]], "seldonian.parse_tree.parse_tree": [[174, "module-seldonian.parse_tree.parse_tree"]], "parsetree (class in seldonian.parse_tree.parse_tree)": [[175, "seldonian.parse_tree.parse_tree.ParseTree"]], "__init__() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree.__init__"]], "__repr__() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree.__repr__"]], "_abs() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree._abs"]], "_add() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree._add"]], "_assign_bounds_helper() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree._assign_bounds_helper"]], "_assign_deltas_helper() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree._assign_deltas_helper"]], "_ast2pt_node() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree._ast2pt_node"]], "_ast_tree_helper() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree._ast_tree_helper"]], "_div() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree._div"]], "_evaluator_helper() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree._evaluator_helper"]], "_exp() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree._exp"]], "_log() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree._log"]], "_max() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree._max"]], "_min() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree._min"]], "_mult() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree._mult"]], "_pow() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree._pow"]], "_preprocess_constraint_str() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree._preprocess_constraint_str"]], "_propagate_value() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree._propagate_value"]], "_propagator_helper() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree._propagator_helper"]], "_protect_nan() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree._protect_nan"]], "_sub() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree._sub"]], "assign_bounds_needed() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree.assign_bounds_needed"]], "assign_deltas() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree.assign_deltas"]], "build_tree() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree.build_tree"]], "create_from_ast() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree.create_from_ast"]], "evaluate_constraint() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree.evaluate_constraint"]], "make_viz() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree.make_viz"]], "make_viz_helper() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree.make_viz_helper"]], "propagate() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree.propagate"]], "propagate_bounds() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree.propagate_bounds"]], "reset_base_node_dict() (parsetree method)": [[175, "seldonian.parse_tree.parse_tree.ParseTree.reset_base_node_dict"]], "make_parse_trees_from_constraints() (in module seldonian.parse_tree.parse_tree)": [[176, "seldonian.parse_tree.parse_tree.make_parse_trees_from_constraints"]], "seldonian.safety_test": [[177, "module-seldonian.safety_test"]], "seldonian.safety_test.safety_test": [[178, "module-seldonian.safety_test.safety_test"]], "safetytest (class in seldonian.safety_test.safety_test)": [[179, "seldonian.safety_test.safety_test.SafetyTest"]], "__init__() (safetytest method)": [[179, "seldonian.safety_test.safety_test.SafetyTest.__init__"]], "__repr__() (safetytest method)": [[179, "seldonian.safety_test.safety_test.SafetyTest.__repr__"]], "evaluate_primary_objective() (safetytest method)": [[179, "seldonian.safety_test.safety_test.SafetyTest.evaluate_primary_objective"]], "run() (safetytest method)": [[179, "seldonian.safety_test.safety_test.SafetyTest.run"]], "seldonian.seldonian_algorithm": [[180, "module-seldonian.seldonian_algorithm"]], "seldonianalgorithm (class in seldonian.seldonian_algorithm)": [[181, "seldonian.seldonian_algorithm.SeldonianAlgorithm"]], "__init__() (seldonianalgorithm method)": [[181, "seldonian.seldonian_algorithm.SeldonianAlgorithm.__init__"]], "__repr__() (seldonianalgorithm method)": [[181, "seldonian.seldonian_algorithm.SeldonianAlgorithm.__repr__"]], "candidate_safety_split() (seldonianalgorithm method)": [[181, "seldonian.seldonian_algorithm.SeldonianAlgorithm.candidate_safety_split"]], "candidate_selection() (seldonianalgorithm method)": [[181, "seldonian.seldonian_algorithm.SeldonianAlgorithm.candidate_selection"]], "evaluate_primary_objective() (seldonianalgorithm method)": [[181, "seldonian.seldonian_algorithm.SeldonianAlgorithm.evaluate_primary_objective"]], "get_cs_result() (seldonianalgorithm method)": [[181, "seldonian.seldonian_algorithm.SeldonianAlgorithm.get_cs_result"]], "get_st_upper_bounds() (seldonianalgorithm method)": [[181, "seldonian.seldonian_algorithm.SeldonianAlgorithm.get_st_upper_bounds"]], "run() (seldonianalgorithm method)": [[181, "seldonian.seldonian_algorithm.SeldonianAlgorithm.run"]], "run_safety_test() (seldonianalgorithm method)": [[181, "seldonian.seldonian_algorithm.SeldonianAlgorithm.run_safety_test"]], "safety_test() (seldonianalgorithm method)": [[181, "seldonian.seldonian_algorithm.SeldonianAlgorithm.safety_test"]], "seldonian.spec": [[182, "module-seldonian.spec"]], "rlspec (class in seldonian.spec)": [[183, "seldonian.spec.RLSpec"]], "__init__() (rlspec method)": [[183, "seldonian.spec.RLSpec.__init__"]], "__repr__() (rlspec method)": [[183, "seldonian.spec.RLSpec.__repr__"]], "spec (class in seldonian.spec)": [[184, "seldonian.spec.Spec"]], "__init__() (spec method)": [[184, "seldonian.spec.Spec.__init__"]], "__repr__() (spec method)": [[184, "seldonian.spec.Spec.__repr__"]], "supervisedspec (class in seldonian.spec)": [[185, "seldonian.spec.SupervisedSpec"]], "__init__() (supervisedspec method)": [[185, "seldonian.spec.SupervisedSpec.__init__"]], "__repr__() (supervisedspec method)": [[185, "seldonian.spec.SupervisedSpec.__repr__"]], "createrlspec() (in module seldonian.spec)": [[186, "seldonian.spec.createRLSpec"]], "createsimplesupervisedspec() (in module seldonian.spec)": [[187, "seldonian.spec.createSimpleSupervisedSpec"]], "createsupervisedspec() (in module seldonian.spec)": [[188, "seldonian.spec.createSupervisedSpec"]], "validate_parse_trees() (in module seldonian.spec)": [[189, "seldonian.spec.validate_parse_trees"]], "seldonian.utils": [[190, "module-seldonian.utils"]], "seldonian.utils.rl_utils": [[191, "module-seldonian.utils.RL_utils"]], "argmax_multi() (in module seldonian.utils.rl_utils)": [[192, "seldonian.utils.RL_utils.argmax_multi"]], "clamp() (in module seldonian.utils.rl_utils)": [[193, "seldonian.utils.RL_utils.clamp"]], "error() (in module seldonian.utils.rl_utils)": [[194, "seldonian.utils.RL_utils.error"]], "seldonian.utils.io_utils": [[195, "module-seldonian.utils.io_utils"]], "dir_path() (in module seldonian.utils.io_utils)": [[196, "seldonian.utils.io_utils.dir_path"]], "load_json() (in module seldonian.utils.io_utils)": [[197, "seldonian.utils.io_utils.load_json"]], "load_pickle() (in module seldonian.utils.io_utils)": [[198, "seldonian.utils.io_utils.load_pickle"]], "save_json() (in module seldonian.utils.io_utils)": [[199, "seldonian.utils.io_utils.save_json"]], "save_pickle() (in module seldonian.utils.io_utils)": [[200, "seldonian.utils.io_utils.save_pickle"]], "seldonian.utils.plot_utils": [[201, "module-seldonian.utils.plot_utils"]], "plot_gradient_descent() (in module seldonian.utils.plot_utils)": [[202, "seldonian.utils.plot_utils.plot_gradient_descent"]], "seldonian.utils.stats_utils": [[203, "module-seldonian.utils.stats_utils"]], "custom_cumprod() (in module seldonian.utils.stats_utils)": [[204, "seldonian.utils.stats_utils.custom_cumprod"]], "softmax() (in module seldonian.utils.stats_utils)": [[205, "seldonian.utils.stats_utils.softmax"]], "stddev() (in module seldonian.utils.stats_utils)": [[206, "seldonian.utils.stats_utils.stddev"]], "tinv() (in module seldonian.utils.stats_utils)": [[207, "seldonian.utils.stats_utils.tinv"]], "weighted_sum_gamma() (in module seldonian.utils.stats_utils)": [[208, "seldonian.utils.stats_utils.weighted_sum_gamma"]], "seldonian.utils.tutorial_utils": [[209, "module-seldonian.utils.tutorial_utils"]], "generate_clipped_data() (in module seldonian.utils.tutorial_utils)": [[210, "seldonian.utils.tutorial_utils.generate_clipped_data"]], "generate_data() (in module seldonian.utils.tutorial_utils)": [[211, "seldonian.utils.tutorial_utils.generate_data"]], "make_synthetic_regression_dataset() (in module seldonian.utils.tutorial_utils)": [[212, "seldonian.utils.tutorial_utils.make_synthetic_regression_dataset"]], "seldonian.warnings": [[213, "module-seldonian.warnings"]], "seldonian.warnings.custom_warnings": [[214, "module-seldonian.warnings.custom_warnings"]], "custom_formatwarning() (in module seldonian.warnings.custom_warnings)": [[215, "seldonian.warnings.custom_warnings.custom_formatwarning"]]}})